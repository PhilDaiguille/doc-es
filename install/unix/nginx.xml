<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f0261e36dc250410f352fe33ad4c4e699cb18b02 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="install.unix.nginx" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Nginx 1.4.x en sistemas Unix</title>

 <para>
  Esta documentación cubre la instalación y configuración de PHP con
  PHP-FPM para el servidor HTTP Nginx 1.4.x.
 </para>

 <para>
  Este guía asume que se ha compilado Nginx a partir de las fuentes y por lo tanto
  todos los binarios y ficheros de configuración se encuentran en
  <literal>/usr/local/nginx</literal>. Si no es el caso y se ha obtenido Nginx por otros medios, por favor refiérase al
  <link xlink:href="&url.nginx;">Wiki de Nginx</link> para adaptar este manual
  a su configuración.
 </para>

 <para>
  Este guía cubre las bases de la configuración del servidor Nginx para
  servir una aplicación PHP en el puerto 80. Se recomienda estudiar las documentaciones de Nginx y PHP-FPM para optimizar su
  instalación.
 </para>

 <para>
  Tenga en cuenta que a lo largo de esta documentación, los números de versión
  han sido reemplazados por una "x" para asegurar que esta última permanezca correcta
  en el futuro. Recuerde reemplazarlos por su número de versión.
 </para>

 <orderedlist>
  <listitem>
   <para>
    Se recomienda consultar la
    <link xlink:href="&url.nginx.wiki.install;">documentación de Nginx</link>
    para instalarla en su sistema.
   </para>
  </listitem>

  <listitem>
   <para>
    Recuperar y descomprimir las fuentes de PHP:
   </para>

   <informalexample xml:id="install.unix.nginx.extract.php">
    <screen>
<![CDATA[
tar zxf php-x.x.x
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Configurar y compilar PHP. Este será el momento en el que se podrá
    personalizar PHP con diversas opciones, como las extensiones
    a activar. Ejecutar ./configure --help para obtener una lista
    de las opciones disponibles. En nuestro ejemplo, se realizará
    una configuración simple con soporte PHP-FPM y MySQLi.
   </para>

   <informalexample xml:id="install.unix.nginx.build.php">
    <screen>
<![CDATA[
cd ../php-x.x.x
./configure --enable-fpm --with-mysqli
make
sudo make install
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Recuperar y mover los ficheros de configuración en
    los directorios correctos
   </para>

   <informalexample xml:id="install.unix.nginx.configure.php">
    <screen>
<![CDATA[
cp php.ini-development /usr/local/php/php.ini
cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf
cp sapi/fpm/php-fpm /usr/local/bin
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Es importante que se impida que Nginx pase las peticiones
    al backend PHP-FPM si el fichero no existe, evitando así
    las vulnerabilidades por inyecciones arbitrarias de scripts.
   </para>
   <para>
    Esto se puede realizar definiendo la directiva
    de configuración <link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link>
    al valor <literal>0</literal> en su php.ini.
   </para>
   <para>
    Editar php.ini:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.ini">
    <screen>
<![CDATA[
vim /usr/local/php/php.ini
]]>
    </screen>
   </informalexample>

   <para>
    Encontrar la directiva <literal>cgi.fix_pathinfo=</literal>
    y modificarla como sigue:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.pathinfo">
    <screen>
<![CDATA[
cgi.fix_pathinfo=0
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    El fichero php-fpm.conf debe ser modificado para especificar que
    php-fpm debe ser ejecutado con el usuario
    www-data y el grupo www-data antes de iniciar el servicio:
   </para>

   <informalexample xml:id="install.unix.nginx.modify.phpfpm">
    <screen>
<![CDATA[
vim /usr/local/etc/php-fpm.d/www.conf
]]>
    </screen>
   </informalexample>

   <para>
    Encontrar y modificar lo siguiente:
   </para>

   <informalexample xml:id="install.unix.nginx.modify.phpfpm.usergroup">
    <screen>
<![CDATA[
; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = www-data
group = www-data
]]>
    </screen>
   </informalexample>

   <para>
    El servicio php-fpm puede ahora ser iniciado:
   </para>

   <informalexample xml:id="install.unix.nginx.start.phpfpm">
    <screen>
<![CDATA[
/usr/local/bin/php-fpm
]]>
    </screen>
   </informalexample>

   <para>
    Este guía no va a configurar php-fpm más allá de esto; si está interesado en la configuración avanzada de php-fpm, por favor
    consulte la documentación.
   </para>
  </listitem>

  <listitem>
   <para>
    Nginx debe ahora ser configurado para soportar el análisis de
    las aplicaciones PHP:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx">
    <programlisting>
<![CDATA[
vim /usr/local/nginx/conf/nginx.conf
]]>
    </programlisting>
   </informalexample>

   <para>
    Modificar el bloque por defecto para que pueda servir ficheros
    .php:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx.location">
    <programlisting role="nginx-conf">
<![CDATA[
location / {
    root   html;
    index  index.php index.html index.htm;
}
]]>
    </programlisting>
   </informalexample>

   <para>
    La siguiente etapa asegura que los ficheros .php sean pasados
    al backend PHP-FPM; Bajo el bloque comentado por defecto y entre:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx.php">
    <programlisting role="nginx-conf">
<![CDATA[
location ~* \.php$ {
    fastcgi_index   index.php;
    fastcgi_pass    127.0.0.1:9000;
    include         fastcgi_params;
    fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
}
]]>
    </programlisting>
   </informalexample>

   <para>
    Reiniciar Nginx.
   </para>

   <informalexample xml:id="install.unix.nginx.restart.nginx">
    <screen>
<![CDATA[
sudo /usr/local/nginx/sbin/nginx -s stop
sudo /usr/local/nginx/sbin/nginx
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Crear un fichero de prueba
   </para>

   <informalexample xml:id="install.unix.nginx.test.nginx.php">
    <screen>
<![CDATA[
rm /usr/local/nginx/html/index.html
echo "<?php phpinfo(); ?>" >> /usr/local/nginx/html/index.php
]]>
    </screen>
   </informalexample>

   <para>
    Ahora, navegue a http://localhost. El phpinfo()
    debería ser mostrado.
   </para>
  </listitem>
 </orderedlist>

 <para>
  Siguiendo estos diferentes pasos, se debería ejecutar un servidor
  web Nginx con soporte de PHP como módulo <literal>FPM</literal> <literal>SAPI</literal>.
  Por supuesto, hay muchas más opciones de configuración disponibles para Nginx y PHP. Para más información, escriba
  <command>./configure --help</command> en la fuente correspondiente.
 </para>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
