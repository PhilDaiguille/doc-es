<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e51792efe0f103ec8724ad199524d7543610c978 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="install.unix.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Apache 2.x en sistemas Unix</title>
 <para>
  Esta sección contiene las notas y consejos de instalación de PHP con el servidor
  Apache 2.x en sistemas Unix.
 </para>

 &warn.apache2.compat;

 <para>
  La <link xlink:href="&url.apache2.docs;">Documentación Apache</link>
  es la mejor fuente de información sobre el servidor Apache 2.x.
  La mayoría de la información sobre las opciones de instalación de Apache
  puede encontrarse allí.
 </para>

 <para>
  La versión más reciente del servidor HTTP Apache puede obtenerse
  desde la <link xlink:href="&url.apache;">página de descarga de Apache</link>,
  y una versión adaptada de PHP desde los enlaces anteriores.
  Esta guía cubre únicamente las bases de funcionamiento de Apache 2.x con PHP.
  Para más información, leer la
  <link xlink:href="&url.apache2.docs;">documentación Apache</link>.
  Los números de versión se omiten aquí, para asegurarse de que las instrucciones no sean
  incorrectas. En los ejemplos a continuación, 'NN' deberá ser reemplazado
  por la versión específica de Apache a utilizar.
 </para>

 <para>
  Actualmente hay 2 versiones de Apache 2.x - 2.4 y 2.2.
  Hay varias razones para elegir una sobre la otra; sin embargo, la versión
  2.4 es actualmente la última versión disponible y también la que recomendamos. Sin embargo, las instrucciones
  contenidas en esta guía deberían funcionar para la versión 2.4 así como para la versión 2.2. Nota: Apache httpd 2.2 está oficialmente en Fin de Vida, no habrá más desarrollo ni parches para esta versión.
 </para>

 <orderedlist>
  <listitem>
   <para>
    Descargue el servidor HTTP Apache desde el sitio anterior y descomprímalo :
   </para>

   <informalexample>
    <screen>
<![CDATA[
tar -xzf httpd-2.x.NN.tar.gz
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    De la misma manera, descargue y descomprima las fuentes de PHP :
   </para>

   <informalexample>
    <screen>
<![CDATA[
tar -xzf php-NN.tar.gz
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Compile e instale Apache. Consulte la documentación sobre la instalación
    de Apache para más detalles sobre la compilación de este software.
   </para>

   <informalexample>
    <screen>
<![CDATA[
cd httpd-2_x_NN
./configure --enable-so
make
make install
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Ahora que se tiene Apache 2.x.NN disponible bajo /usr/local/apache2,
    configúrelo con soporte para la carga de módulos, así como el
    MPM prefork estándar. Para probar la instalación, utilice el procedimiento
    normal para iniciar el servidor Apache, es decir:

    <informalexample>
     <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
     </screen>
    </informalexample>
    y deténgalo para continuar con la configuración de PHP :

    <informalexample>
     <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl stop
]]>
     </screen>
    </informalexample>
   </para>
  </listitem>

  <listitem>

   <para>
    Ahora, configure y compile PHP. Será en este momento
    cuando se podrá personalizar PHP con las diversas opciones disponibles,
    como la lista de extensiones a activar. En nuestro ejemplo, realizaremos
    una configuración simple, con Apache 2 y soporte MySQL.
   </para>

   <para>
    Si se ha construido Apache desde las fuentes, tal como se describe anteriormente,
    el siguiente ejemplo debería ser correcto en cuanto a las rutas hacia los apxs, pero si
    se ha instalado Apache de otra manera, se deberán tener en cuenta las especificidades y ajustar las rutas apxs en consecuencia. Tenga en cuenta que, según las distribuciones, podría ser necesario renombrar apxs a apxs2.
   </para>
   <informalexample>
    <screen>
<![CDATA[
cd ../php-NN
./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-pdo-mysql
make
make install
]]>
    </screen>
   </informalexample>

   <para>
    Si se decide modificar las opciones de configuración después de la instalación,
    se deberán ejecutar nuevamente las etapas "configure", "make" y "make install".
    Entonces solo se necesitará reiniciar Apache para que el nuevo módulo surta efecto.
    Una recompilación de Apache no es necesaria.
   </para>

   <para>
    Tenga en cuenta que, salvo indicaciones contrarias, la etapa "make install" también instalará
    PEAR, así como diversas herramientas PHP como phpsize, PHP CLI y
    mucho más.
   </para>

  </listitem>

  <listitem>
   <para>
    Configurar el archivo php.ini
   </para>

   <informalexample>
    <screen>
<![CDATA[
cp php.ini-development /usr/local/lib/php.ini
]]>
    </screen>
   </informalexample>

   <para>
    Se debe editar el archivo .ini para definir las opciones PHP.
    Si se prefiere colocar este archivo en otro directorio, utilice
    la opción <literal>--with-config-file-path=/some/path</literal> en la etapa 5.
   </para>

   <para>
    Si se elige el archivo php.ini-production, asegúrese de leer la lista
    de modificaciones correspondiente ya que puede afectar considerablemente la forma
    en que PHP funcionará.
   </para>

  </listitem>

  <listitem>

   <para>
    Edite el archivo <filename>httpd.conf</filename> para cargar el módulo PHP. La ruta especificada
    a la derecha de la cadena LoadModule, debe corresponder a la ruta del sistema del módulo
    PHP. La etapa "make install" anterior debería haber realizado esta operación
    por usted, pero una simple verificación permitirá asegurarse.
   </para>

   <informalexample>
    <para>
     Para PHP 8:
    </para>
    <programlisting role="apache-conf">
<![CDATA[
LoadModule php_module modules/libphp.so
]]>
    </programlisting>
   </informalexample>

   <informalexample>
    <para>
     Para PHP 7:
    </para>
    <programlisting role="apache-conf">
<![CDATA[
LoadModule php7_module modules/libphp5.so
]]>
    </programlisting>
   </informalexample>

  </listitem>

  <listitem>

   <para>
    Indique a Apache que analice ciertas extensiones como scripts PHP.
    Por ejemplo, deje que Apache pase a PHP los archivos cuya extensión es
    <literal>.php</literal>.
    En lugar de utilizar solo la directiva <literal>AddType</literal> de Apache,
    se desea evitar cualquier riesgo potencialmente peligroso, cuando
    se descarga y crea un archivo como <filename>exploit.php.jpg</filename>,
    de ejecución PHP. Utilizando este ejemplo, se puede tener cualquier
    extensión analizada por PHP. Se ha añadido <literal>.php</literal> para el ejemplo.
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>

   <para>
    O, si se desea permitir que los archivos <literal>.php</literal>, <literal>.php2</literal>,
    <literal>.php3</literal>, <literal>.php4</literal>, <literal>.php5</literal>,
    <literal>.php6</literal>, y <literal>.phtml</literal> sean
    analizados por PHP, pero nada más, se utilizará esto :
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.ph(p[2-6]?|tml)$">
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>

   <para>
    Y para permitir que los archivos <literal>.phps</literal> sean manejados por el filtro del código
    fuente de PHP, y así, ser mostrados como código fuente con coloración
    sintáctica, utilice esto :
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.phps$">
    SetHandler application/x-httpd-php-source
</FilesMatch>
]]>
    </programlisting>
   </informalexample>

   <para>
    <literal>mod_rewrite</literal> puede ser utilizado para permitir que cualquier archivo <literal>.php</literal>
    sea mostrado como código fuente con coloración sintáctica, sin necesidad de renombrarlo o copiarlo con una extensión <literal>.phps</literal>. :
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
RewriteEngine On
RewriteRule (.*\.php)s$ $1 [H=application/x-httpd-php-source]
]]>
    </programlisting>
   </informalexample>

   <para>
    El filtro de código fuente PHP no debería estar activo en sistemas de
    producción, ya que puede exponer código confidencial o información
    sensible contenida en el código fuente.
   </para>

  </listitem>

  <listitem>
   <para>
    Utilice el procedimiento normal para iniciar el servidor Apache, es decir:
   </para>

   <informalexample>
    <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
    </screen>
   </informalexample>

   <para>O</para>

   <informalexample>
    <screen>
<![CDATA[
service httpd restart
]]>
    </screen>
   </informalexample>

  </listitem>
 </orderedlist>

 <para>
  Si se han seguido los pasos anteriores, ahora se tiene un servidor web
  Apache2 funcional con soporte PHP como módulo <literal>SAPI</literal>.
  Por supuesto, hay una multitud de otras opciones de configuración disponibles
  con Apache y PHP. Para más información, introduzca el comando
  <command>./configure --help</command> en el árbol de fuentes correspondiente.
 </para>
 <para>
  Apache puede ser compilado en modo multithread, seleccionando
  el MPM <filename>worker</filename>, en lugar del estándar
  MPM <filename>prefork</filename>. Esto se hace añadiendo la siguiente opción al argumento de la comando "./configure", en la etapa 3 anterior :
 </para>
 <informalexample>
  <screen>
<![CDATA[
--with-mpm=worker
]]>
  </screen>
 </informalexample>
 <para>
  Esto no debería emprenderse sin ser consciente de las consecuencias,
  y teniendo al menos una justa comprensión de lo que implica.
  La documentación de Apache sobre
  <link xlink:href="&url.apache2.mpm;">MPM-Modules</link>
  proporcionará información importante que permitirá tomar
  la decisión.
 </para>
 <note>
  <para>
   La <link linkend="faq.installation.apache.multiviews">FAQ Apache
   MultiViews</link> trata sobre el uso de MultiViews con PHP.
  </para>
 </note>
 <note>
  <para>
   Para compilar una versión multithread de Apache, el sistema de destino
   debe soportar threads. En este caso, PHP también debe ser construido
   con Zend Thread Safety (ZTS). Bajo esta configuración, no todas las extensiones
   estarán disponibles. Recomendamos compilar Apache con el
   <filename>prefork</filename> MPM-Module.
  </para>
 </note>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
