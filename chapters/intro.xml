<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 77f5f3b3a8bbe1ad7727201c7603d1419dd7840f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <titleabbrev>Introducción</titleabbrev>
  <title>¿Qué es PHP y qué puede hacer?</title>
 </info>
 <section xml:id="intro-whatis" annotations="chunk:false">
  <info><title>¿Qué es PHP?</title></info>
  <para>
   <acronym>PHP</acronym> (oficialmente, este sigle es un acrónimo recursivo para
   <emphasis>PHP Hypertext Preprocessor</emphasis>) es un lenguaje de scripts generalista
   y Open Source, especialmente concebido para el desarrollo de aplicaciones
   web. Puede ser integrado fácilmente al HTML.
  </para>
  <para>
   Bien... pero ¿qué significa esto? Un ejemplo:
  </para>
  <para>
   <example>
    <info><title>Ejemplo de introducción</title></info>
    <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
<head>
<title>Ejemplo</title>
</head>
<body>

<?php
echo "Hola, soy un script PHP!";
?>

</body>
</html>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   En lugar de utilizar toneladas de comandos para mostrar HTML (como en
   C o en Perl), las páginas PHP contienen fragmentos HTML con código que hace <replaceable>"algo"</replaceable> (en este caso, mostrará
   <computeroutput>"Hola, soy un script PHP!"</computeroutput>).
   El código PHP está incluido entre
   <link linkend="language.basic-syntax.phpmode">una etiqueta de inicio
   <code>&lt;?php</code> y una etiqueta de fin <code>?&gt;</code></link>
   que permiten al servidor web pasar al <quote>modo PHP</quote>.
  </para>
  <para>
   Lo que distingue a PHP de los lenguajes de script como JavaScript,
   es que el código se ejecuta en el servidor, generando así el HTML, que
   será luego enviado al cliente. El cliente solo recibe el
   resultado del script, sin ningún medio de acceso al código
   que produjo dicho resultado. Se puede configurar el servidor web para que analice todos los ficheros HTML como ficheros PHP.
   Así, no hay manera de distinguir las páginas que son producidas
   dinámicamente de las páginas estáticas. Un servidor web puede incluso ser configurado
   para procesar todos los ficheros HTML con PHP, y no hay
   manera para los usuarios de saber que PHP está siendo utilizado.
  </para>
  <para>
   La gran ventaja de PHP es que es extremadamente simple para los
   principiantes, pero ofrece funcionalidades avanzadas para los
   expertos. No tema leer la larga lista de funcionalidades
   PHP. Con PHP, casi todo el mundo puede comenzar rápidamente
   y escribir scripts simples en poco tiempo.
  </para>
  <para>
   Aunque el desarrollo de PHP está orientado hacia la programación
   para sitios web, se puede hacer mucho más con PHP.
   Lea la sección <link linkend="intro-whatcando">¿Qué puede hacer PHP?</link>
   o el <link linkend="tutorial">tutorial de introducción</link> para pasar directamente
   al aprendizaje de la programación web.
  </para>
 </section>

 <section xml:id="intro-whatcando" annotations="chunk:false">
  <title>¿Qué puede hacer PHP?</title>
  <para>
   Todo. PHP está principalmente concebido para servir como
   lenguaje de script del lado del servidor, por lo que puede hacer todo lo que cualquier otro programa CGI puede hacer, como
   recolectar datos de formularios, generar contenido dinámico,
   o gestionar cookies. Pero PHP puede hacer mucho más.
  </para>
  <para>
   Hay dos ámbitos diferentes donde PHP puede destacar.
   <itemizedlist>
    <listitem>
     <simpara>
      Lenguaje de script del lado del servidor. Este es el uso más
      tradicional, y también el principal objetivo de PHP.
      Tres componentes son necesarios para explotarlo:
      un analizador PHP (CGI o módulo del servidor), un servidor
      web y un navegador web. Se debe ejecutar el servidor
      web en correlación con PHP. Se puede acceder
      al programa PHP con la ayuda del navegador web. Todo esto
      puede funcionar en una máquina local solo para experimentar
      la programación PHP. Vea la
      sección <link linkend="install">de instalación</link>
      para más información.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Lenguaje de programación en línea de comandos. Un script PHP puede ser
      ejecutado en línea de comandos,
      sin la ayuda del servidor web y de un navegador. Solo se necesita
      el ejecutable PHP. Este uso es ideal para los scripts que se ejecutan regularmente
      con un <command>cron</command> en Unix o Linux o
      un <literal>gestor de tareas</literal> (en Windows). Estos scripts
      también pueden ser utilizados para realizar operaciones en ficheros de texto. Vea la sección sobre el uso de PHP en
      <link linkend="features.commandline">línea de comandos</link>
      para más información.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   PHP es <link linkend="install">utilizable</link> en la mayoría de los sistemas
   operativos, como Linux, muchas variantes Unix (incluyendo HP-UX,
   Solaris y OpenBSD), Microsoft Windows, macOS, RISC OS y otros más.
   PHP también soporta la mayoría de los servidores web actuales como
   Apache, IIS y muchos otros. Y esto incluye todos los servidores web
   que pueden utilizar el binario PHP FastCGI, como lighttpd
   y nginx. PHP funciona como módulo, o como procesador CGI.
   </para>
  <para>
   Con PHP, los desarrolladores tienen la opción del sistema operativo y
   del servidor web. Además, también tienen la opción de utilizar
   la programación procedimental u orientada a objetos (OOP), o incluso una mezcla de
   ambas.
  </para>
  <para>
   Con PHP, no se limita a la producción de código HTML. Las capacidades de PHP incluyen
   la creación de tipos de ficheros ricos, como imágenes o ficheros PDF, el cifrado de datos
   y el envío de correos electrónicos. También puede generar fácilmente cualquier texto, como JSON
   o XML. PHP puede generar automáticamente estos ficheros y guardarlos en
   el sistema de ficheros en lugar de imprimirlos, formando así una caché del lado del servidor para
   contenido dinámico.
  </para>
  <para>
   Una de las fortalezas más significativas de PHP es que soporta
   <link linkend="refs.database">enormemente bases de datos</link>.
   Escribir una página web que utilice una base de datos se vuelve
   extremadamente simple, utilizando una de las extensiones específicas
   para bases de datos (i.e., para <link linkend="book.mysqli">mysql</link>),
   o utilizando una clase de abstracción como <link linkend="book.pdo">PDO</link>,
   o una conexión a cualquier base de datos que soporte la conexión
   estándar abierta a través de la extensión <link linkend="book.uodbc">ODBC</link>.
   Otras bases de datos pueden utilizar la extensión
   <link linkend="book.curl">cURL</link> o <link linkend="book.sockets">sockets</link>
   como CouchDB.
  </para>
  <para>
   PHP soporta numerosos protocolos como
   LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (en Windows) y
   muchos otros. También puede abrir sockets de red,
   e interactuar con cualquier otro protocolo. PHP soporta
   el formato complejo WDDX, que permite la comunicación entre todos
   los lenguajes web. En términos de interconexión, PHP también soporta
   los objetos Java, y los utiliza de manera transparente
   como objetos integrados.
  </para>
  <para>
   PHP posee funcionalidades útiles en el
   <link linkend="refs.basic.text">tratamiento de texto</link>,
   incluyendo las expresiones regulares compatibles con Perl (<link linkend="book.pcre">PCRE</link>),
   así como un gran número de extensiones y utilidades para
   <link linkend="refs.xml">analizar y acceder a documentos XML</link>.
   PHP estandariza todas las extensiones XML sobre la sólida base de <link linkend="book.libxml">libxml2</link>,
   y extiende el conjunto de funcionalidades añadiendo soporte para
   <link linkend="book.simplexml">SimpleXML</link>, <link linkend="book.xmlreader">XMLReader</link>
   y <link linkend="book.xmlwriter">XMLWriter</link>.
  </para>
  <para>
   Muchas otras extensiones existen, categorizadas
   <link linkend="extensions">alfabéticamente</link> y por <link linkend="funcref">categoría</link>.
   Y finalmente, existen <link linkend="install.pecl.intro">extensiones PECL</link> que pueden (o no) estar documentadas
   en el manual PHP, como <link xlink:href="&url.xdebug;">XDebug</link>.
  </para>
  <para>
   Esta página no es lo suficientemente grande para listar
   todas las potentes funcionalidades de PHP. Lea la sección
   sobre <link linkend="install">la instalación de PHP</link>
   y estudie la <link linkend="funcref">lista de funciones</link>
   para obtener más detalles sobre todas estas tecnologías.
  </para>
 </section>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
