<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a9edd62d087ab1eb6292c795b7256e14ff9f1234 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.oop5.references" xmlns="http://docbook.org/ns/docbook">
  <title>Objetos y referencias</title>
  <para>
   Uno de los pilares de la POO de PHP es el hecho de que los
   "objetos son pasados por referencia por omisión". Esto no es completamente cierto.
   Esta sección corrige esta generalización con algunos ejemplos.
  </para>

  <para>
   Una referencia PHP es un alias, que permite a dos variables diferentes
   representar el mismo valor. En PHP, una variable objeto
   no contiene más el objeto en sí mismo como valor. Contiene solo un identificador
   de objeto, que permite a los métodos de acceso de objetos encontrar dicho objeto.
   Cuando el objeto es utilizado como argumento, devuelto por una función,
   o asignado a otra variable, las diferentes variables no son
   alias: contienen copias del identificador, que apuntan al
   mismo objeto.
  </para>

  <example>
   <title>Referencias y Objetos</title>
   <programlisting role="php">
<![CDATA[
<?php
class A {
    public $foo = 1;
}

$a = new A;
$b = $a;     // $a y $b son copias del mismo identificador
             // ($a) = ($b) = <id>
$b->foo = 2;
echo $a->foo."\n";

$c = new A;
$d = &$c;    // $c y $d son referencias
             // ($c,$d) = <id>

$d->foo = 2;
echo $c->foo."\n";

$e = new A;

function foo($obj) {
    // ($obj) = ($e) = <id>
    $obj->foo = 2;
}

foo($e);
echo $e->foo."\n";

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
2
2
2
]]>
   </screen>
  </example>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
