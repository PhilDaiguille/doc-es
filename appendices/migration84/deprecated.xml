<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e3fc9c49817a5249d1efb9c79c93307ecebf2f53 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="migration84.deprecated">
 <title>Funcionalidades desaprobadas</title>

 <sect2 xml:id="migration84.deprecated.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration84.deprecated.core.implicitly-nullable-parameter">
   <!-- RFC: https://wiki.php.net/rfc/deprecate-implicitly-nullable-types -->
   <title>Parámetro implícitamente anulable</title>

   <simpara>
    Un parámetro se amplía implícitamente para aceptar <type>null</type>
    si el valor por defecto es &null;.
   </simpara>

   <para>
    El siguiente código:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a = null) {}
]]>
     </programlisting>
    </informalexample>
    debería convertirse en:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1|null $a = null) {}
]]>
     </programlisting>
    </informalexample>
    o
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(?T1 $a = null) {}
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    De lo contrario, si una declaración de parámetro es seguida por un parámetro
    obligatorio:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a, T2 $b = null, T3 $c) {}
]]>
     </programlisting>
    </informalexample>
    Debe convertirse en:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a, T2|null $b, T3 $c) {}
]]>
     </programlisting>
    </informalexample>
    o
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo(T1 $a, ?T2 $b, T3 $c) {}
]]>
     </programlisting>
    </informalexample>
    porque los parámetros opcionales antes de los parámetros obligatorios están desaprobados.
   </para>
  </sect3>

  <sect3>
   <!-- RFC: https://wiki.php.net/rfc/raising_zero_to_power_of_negative_number -->
   <title>Elevar cero a la potencia de un número negativo</title>

   <simpara>
    Elevar un número a la potencia de un número negativo es equivalente a tomar
    el recíproco del número elevado al opuesto positivo de la potencia.
    Es decir, <literal>10<superscript>-2</superscript></literal> es equivalente a
    <literal>1 / 10<superscript>2</superscript></literal>.
    Por lo tanto, elevar <literal>0</literal> a la potencia de un número negativo
    corresponde a una división por <literal>0</literal>, es decir, que
    <literal>0<superscript>-2</superscript></literal> es equivalente a
    <literal>1 / 0<superscript>2</superscript></literal>, o
    <literal>1 / 0</literal>. Por lo tanto, este comportamiento ha sido desaprobado.
   </simpara>

   <simpara>
    Esto afecta al operador de exponenciación <literal>**</literal>
    y a la función <function>pow</function>.
   </simpara>

   <simpara>
    Si se desea la semántica IEEE 754, se debe usar la nueva
    función <function>fpow</function>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.deprecated.core.underscore-class-name">
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_using_a_single_underscore_as_a_class_name -->
   <title>Uso del guion bajo <literal>_</literal> como nombre de clase</title>

   <para>
    Llamar a una clase <literal>_</literal> ahora está desaprobado:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class _ {}
]]>
     </programlisting>
    </informalexample>
   </para>

   <note>
    <para>
     Las clases cuyo nombre comienza con un guion bajo no están
     desaprobadas:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
class _MyClass {}
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
  </sect3>

  <sect3>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_passing_e_user_error_to_trigger_error -->
   <title>
    Usar <function>trigger_error</function> con
    <constant>E_USER_ERROR</constant>
   </title>

   <simpara>
    Llamar a <function>trigger_error</function> con
    <parameter>error_level</parameter> igual a
    <constant>E_USER_ERROR</constant> ahora está desaprobado.
   </simpara>

   <simpara>
    Tal uso debería ser reemplazado por lanzar una excepción,
    o llamar a <function>exit</function>, según lo que sea más apropiado.
   </simpara>
  </sect3>

  <sect3>
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#remove_e_strict_error_level_and_deprecate_e_strict_constant -->
   <title>
    La constante <constant>E_STRICT</constant>
   </title>

   <simpara>
    Debido a que el nivel de error <constant>E_STRICT</constant> ha sido eliminado,
    esta constante ahora está desaprobada.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.curl">
  <title>cURL</title>

  <simpara>
   La constante <constant>CURLOPT_BINARYTRANSFER</constant> ahora está desaprobada.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.date">
  <title>Fecha</title>

  <simpara>
   La firma <code> DatePeriod::__construct(string $isostr, int $options = 0)</code>
   ahora está desaprobada.
   Usar <methodname>DatePeriod::createFromISO8601String</methodname> en su lugar.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#constants_sunfuncs_ret_string_sunfuncs_ret_double_sunfuncs_ret_timestamp -->
  <simpara>
   Las constantes <constant>SUNFUNCS_RET_TIMESTAMP</constant>,
   <constant>SUNFUNCS_RET_STRING</constant>,
   y <constant>SUNFUNCS_RET_DOUBLE</constant> ahora están desaprobadas.
   Esto sigue a la desaprobación de las funciones <function>date_sunset</function> y
   <function>date_sunrise</function> en PHP 8.1.0.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.dba">
  <title>DBA</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_passing_null_and_false_to_dba_key_split -->
  <simpara>
   Pasar &null; o &false; a <function>dba_key_split</function> ahora está
   desaprobado.
   Esto siempre devolvía &false; en estos casos.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.dom">
  <title>DOM</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_dom_php_err_constant -->
  <simpara>
   La constante <constant>DOM_PHP_ERR</constant> ahora está desaprobada.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#formally_deprecate_soft-deprecated_domdocument_and_domentity_properties -->
  <para>
   Las siguientes propiedades han sido formalmente desaprobadas:
   <simplelist>
    <member><property>DOMDocument::$actualEncoding</property></member>
    <member><property>DOMDocument::$config</property></member>
    <member><property>DOMEntity::$actualEncoding</property></member>
    <member><property>DOMEntity::$encoding</property></member>
    <member><property>DOMEntity::$version</property></member>
   </simplelist>
  </para>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.hash">
  <title>Hash</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_passing_incorrect_data_types_for_options_to_exthash_functions -->
  <simpara>
   Pasar opciones no válidas a las funciones de hash ahora está desaprobado.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.intl">
  <title>Intl</title>

  <simpara>
   Llamar a <function>intlcal_set</function> o
   <methodname>IntlCalendar::set</methodname>
   con más de dos argumentos ahora está desaprobado.
   Usar <methodname>IntlCalendar::setDate</methodname> o
   <methodname>IntlCalendar::setDateTime</methodname> en su lugar.
  </simpara>

  <simpara>
   Llamar a <function>intlgregcal_create_instance</function> o
   <methodname>IntlGregorianCalendar::__construct</methodname>
   con más de dos argumentos ahora está desaprobado.
   Usar <function>intlgregcal_create_instance</function> o
   <methodname>IntlGregorianCalendar::createFromDateTime</methodname> en su lugar.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.ldap">
  <title>LDAP</title>

  <simpara>
   Llamar a <function>ldap_connect</function>
   con más de dos argumentos ahora está desaprobado.
   Usar <function>ldap_connect_wallet</function> en su lugar.
  </simpara>

  <simpara>
   Llamar a <function>ldap_exop</function>
   con más de cuatro argumentos ahora está desaprobado.
   Usar <function>ldap_exop_sync</function> en su lugar.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.mysqli">
  <title>MySQLi</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#mysqli_ping_and_mysqliping -->
  <simpara>
   La función <function>mysqli_ping</function> y
   el método <methodname>mysqli::ping</methodname>
   ahora están desaprobados porque la funcionalidad de reconexión fue eliminada en PHP 8.2.0.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_mysqli_kill -->
  <simpara>
   La función <function>mysqli_kill</function> y
   el método <methodname>mysqli::kill</methodname>
   ahora están desaprobados.
   Si esta funcionalidad es necesaria, se puede usar un comando SQL <literal>KILL</literal>
   en su lugar.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_mysqli_refresh -->
  <simpara>
   La función <function>mysqli_refresh</function> y
   el método <methodname>mysqli::refresh</methodname>
   ahora están desaprobados.
   Si esta funcionalidad es necesaria, se puede usar un comando SQL <literal>FLUSH</literal>
   en su lugar.
   Todas las constantes <constant>MYSQLI_REFRESH_<replaceable>*</replaceable></constant>
   también han sido desaprobadas.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_the_second_parameter_to_mysqli_store_result -->
  <simpara>
   Pasar el parámetro <parameter>mode</parameter> a
   <function>mysqli_store_result</function> explícitamente ha sido desaprobado.
   Como la constante <constant>MYSQLI_STORE_RESULT_COPY_DATA</constant> solo se usaba
   en conjunción con esta función, también ha sido desaprobada.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.pdo-pgsql">
  <title>PDO_PGSQL</title>

  <simpara>
   Usar puntos de interrogación escapados (<literal>??</literal>) dentro
   de cadenas delimitadas por dólares ahora está desaprobado.
   Como PDO_PGSQL ahora tiene su propio analizador SQL con soporte para cadenas delimitadas por dólares, ya no es necesario escapar los puntos de interrogación dentro de ellas.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.pgsql">
  <title>PGSQL</title>

  <simpara>
   Los 2 argumentos de la firma de <function>pg_fetch_result</function>,
   <function>pg_field_prtlen</function>, y
   <function>pg_field_is_null</function> ahora están desaprobados.
   Usar la firma de 3 argumentos con <parameter>row</parameter> definido a
   &null; en su lugar.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.random">
  <title>Random</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_lcg_value -->
  <simpara>
   <function>lcg_value</function> ahora está desaprobada,
   porque la función está rota de varias maneras.
   Usar <methodname>Random\Randomizer::getFloat</methodname> en su lugar.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.reflection">
  <title>Reflection</title>

  <simpara>
   Llamar a <methodname>ReflectionProperty::setValue</methodname>
   con un solo parámetro ahora está desaprobado.
   Usar <methodname>ReflectionMethod::createFromMethodName</methodname>
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.session">
  <title>Sesión</title>

  <simpara>
   Llamar a <function>session_set_save_handler</function>
   con más de dos argumentos ahora está desaprobado.
   Usar la firma de dos argumentos en su lugar.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#sessionsid_length_and_sessionsid_bits_per_character -->
  <simpara>
   Cambiar el valor de los parámetros INI
   <link linkend="ini.session.sid-length"><literal>session.sid_length</literal></link> y
   <link linkend="ini.session.sid-bits-per-character"><literal>session.sid_bits_per_character</literal></link>
   está desaprobado.
   Actualizar el backend de almacenamiento de sesión para aceptar identificadores de sesión hexadecimales de 32 caracteres
   y dejar de cambiar estos dos parámetros INI en su lugar.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecate-get-post-sessions -->
  <simpara>
   Cambiar el valor de los parámetros INI
   <link linkend="ini.session.use-only-cookies"><literal>session.use_only_cookies</literal></link>,
   <link linkend="ini.session.use-trans-sid"><literal>session.use_trans_sid</literal></link>,
   <link linkend="ini.session.trans-sid-tags"><literal>session.trans_sid_tags</literal></link>,
   <link linkend="ini.session.trans-sid-hosts"><literal>session.trans_sid_hosts</literal></link>, y
   <link linkend="ini.session.referer-check"><literal>session.referer_check</literal></link>
   está desaprobado.
   La constante <constant>SID</constant> también está desaprobada.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.soap">
  <title>SOAP</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_soap_functions_all_constant_and_passing_it_to_soapserveraddfunction -->
  <simpara>
   Pasar un <type>int</type> a
   <methodname>SoapServer::addFunction</methodname> ahora está desaprobado.
   Si todas las funciones PHP deben ser proporcionadas, aplanar el array devuelto por
   <function>get_defined_functions</function>.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_soap_functions_all_constant_and_passing_it_to_soapserveraddfunction -->
  <simpara>
   La constante <constant>SOAP_FUNCTIONS_ALL</constant> ahora está desaprobada.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.spl">
  <title>SPL</title>

  <simpara>
   El método <methodname>SplFixedArray::__wakeup</methodname> ahora está
   desaprobado, porque implementa
   <methodname>SplFixedArray::__serialize</methodname> y
   <methodname>SplFixedArray::__unserialize</methodname>
   que deben ser sobrescritos en su lugar.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_proprietary_csv_escaping_mechanism -->
  <simpara>
   Usar el valor por defecto del parámetro <parameter>escape</parameter> para
   <methodname>SplFileObject::setCsvControl</methodname>,
   <methodname>SplFileObject::fputcsv</methodname>, y
   <methodname>SplFileObject::fgetcsv</methodname> ahora está desaprobado.
   <!-- TODO: Link to named arguments feature -->
   Su valor debe pasarse explícitamente ya sea posicionalmente o a través de argumentos nombrados.
   Esto no se aplica a <methodname>SplFileObject::fputcsv</methodname>
   y <methodname>SplFileObject::fgetcsv</methodname> si
   <methodname>SplFileObject::setCsvControl</methodname> ha sido usado para definir un
   nuevo valor por defecto.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.standard">
  <title>Estándar</title>

  <simpara>
   Llamar a <function>stream_context_set_option</function>
   con dos argumentos ahora está desaprobado.
   Usar <function>stream_context_set_options</function> en su lugar.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#unserialize_s_s_tag -->
  <simpara>
   Deserializar cadenas usando la etiqueta <literal>S</literal> en mayúscula
   con <function>unserialize</function> ahora está desaprobado.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#deprecate_proprietary_csv_escaping_mechanism -->
  <simpara>
   Usar el valor por defecto del parámetro <parameter>escape</parameter> para
   <function>fputcsv</function>,
   <function>fgetcsv</function>, y
   <function>str_getcsv</function> ahora está desaprobado.
   <!-- TODO: Link to named arguments feature -->
   Debe pasarse explícitamente ya sea posicionalmente o a través de argumentos nombrados.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.deprecated.core.xml">
  <title>XML</title>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#xml_set_object_and_xml_set_handler_with_string_method_names -->
  <simpara>
   La función <function>xml_set_object</function> ha sido desaprobada.
  </simpara>

  <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_4#xml_set_object_and_xml_set_handler_with_string_method_names -->
  <simpara>
   Pasar una cadena no-<type>callable</type> a las funciones
   <function>xml_set_<replaceable>*</replaceable></function>
   ahora está desaprobado.
  </simpara>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
