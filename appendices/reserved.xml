<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a63b9c754188b610fe1916404831aa9f1b41efbf Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Palabras reservadas en PHP</title>
 <para>
  Este anexo es una lista de identificadores predefinidos en PHP. Ninguno
  de los identificadores utilizados aquí debe ser reutilizado como nombre
  de variable o de función en los scripts, salvo que se indique explícitamente
  lo contrario. Estos identificadores incluyen palabras clave, constantes,
  clases y variables predefinidas. Estas listas no son completas
  ni exhaustivas.
 </para>

 <sect1 xml:id="reserved.keywords">
  <title>Lista de palabras clave</title>
  <simpara>
   Estas palabras tienen un significado especial para PHP. Algunas representan objetos
   similares a funciones, otras a constantes, y así
   sucesivamente, pero no lo son realmente: son estructuras de lenguaje. Las palabras clave siguientes no pueden ser utilizadas como nombre de constante,
   de clase o de función.
   Sin embargo, están permitidas como nombre de propiedad, constante y de
   método en las clases, interfaces, traits excepto la palabra clave
   <literal>class</literal> que no debe ser utilizada como nombre de
   constante.
  </simpara>

  <table>
   <title>Palabras reservadas en PHP</title>
   <tgroup cols="5">
    <tbody>
     <row>
      <entry>
       <function>__halt_compiler</function>
      </entry>
      <entry>
       <link linkend="language.oop5.abstract">abstract</link>
      </entry>
      <entry>
       <link linkend="language.operators.logical">and</link>
      </entry>
      <entry>
       <function>array</function>
      </entry>
      <entry>
       <link linkend="control-structures.foreach">as</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.break">break</link>
      </entry>
      <entry>
       <link linkend="language.types.callable">callable</link>
      </entry>
      <entry>
       <link linkend="control-structures.switch">case</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">catch</link>
      </entry>
      <entry>
       <link linkend="language.oop5.basic.class">class</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.oop5.cloning">clone</link>
      </entry>
      <entry>
       <link linkend="language.oop5.constants">const</link>
      </entry>
      <entry>
       <link linkend="control-structures.continue">continue</link>
      </entry>
      <entry>
       <link linkend="control-structures.declare">declare</link>
      </entry>
      <entry>
       <link linkend="control-structures.switch">default</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>die</function>
      </entry>
      <entry>
       <link linkend="control-structures.do.while">do</link>
      </entry>
      <entry>
       <function>echo</function>
      </entry>
      <entry>
       <link linkend="control-structures.else">else</link>
      </entry>
      <entry>
       <link linkend="control-structures.elseif">elseif</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>empty</function>
      </entry>
      <entry>
       <link linkend="control-structures.declare">enddeclare</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endfor</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endforeach</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endif</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.alternative-syntax">endswitch</link>
      </entry>
      <entry>
       <link linkend="control-structures.alternative-syntax">endwhile</link>
      </entry>
      <entry>
       <function>eval</function>
      </entry>
      <entry>
       <function>exit</function>
      </entry>
      <entry>
       <link linkend="language.oop5.basic.extends">extends</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.oop5.final">final</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">finally</link>
      </entry>
       <entry>
        <link linkend="functions.arrow">fn</link> (disponible a partir de PHP 7.4)
       </entry>
      <entry>
       <link linkend="control-structures.for">for</link>
      </entry>
      <entry>
       <link linkend="control-structures.foreach">foreach</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="functions.user-defined">function</link>
      </entry>
      <entry>
       <link linkend="language.variables.scope">global</link>
      </entry>
      <entry>
       <link linkend="control-structures.goto">goto</link>
      </entry>
      <entry>
       <link linkend="control-structures.if">if</link>
      </entry>
      <entry>
       <link linkend="language.oop5.interfaces">implements</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>include</function>
      </entry>
      <entry>
       <function>include_once</function>
      </entry>
      <entry>
       <link linkend="language.operators.type">instanceof</link>
      </entry>
      <entry>
       <link linkend="language.oop5.traits.conflict">insteadof</link>
      </entry>
      <entry>
       <link linkend="language.oop5.interfaces">interface</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>isset</function>
      </entry>
      <entry>
       <function>list</function>
      </entry>
      <entry>
       &match; (disponible a partir de PHP 8.0)
      </entry>
      <entry>
       <link linkend="language.namespaces">namespace</link>
      </entry>
      <entry>
       <link linkend="language.oop5.basic.new">new</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.operators.logical">or</link>
      </entry>
      <entry>
       <function>print</function>
      </entry>
      <entry>
       <link linkend="language.oop5.visibility">private</link>
      </entry>
      <entry>
       <link linkend="language.oop5.visibility">protected</link>
      </entry>
      <entry>
       <link linkend="language.oop5.visibility">public</link>
      </entry>
     </row>
     <row>
      <entry>
       <function>require</function>
      </entry>
      <entry>
       <link linkend="language.oop5.properties.readonly-properties">readonly</link> (disponible a partir de PHP 8.1.0) *
      </entry>
      <entry>
       <function>require_once</function>
      </entry>
      <entry>
       <function>return</function>
      </entry>
      <entry>
       <link linkend="language.variables.scope">static</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.switch">switch</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">throw</link>
      </entry>
      <entry>
       <link linkend="language.oop5.traits">trait</link>
      </entry>
      <entry>
       <link linkend="language.exceptions">try</link>
      </entry>
      <entry>
       <function>unset</function>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.namespaces.importing">use</link>
      </entry>
      <entry>
       <link linkend="language.oop5.properties">var</link>
      </entry>
      <entry>
       <link linkend="control-structures.while">while</link>
      </entry>
      <entry>
       <link linkend="language.operators.logical">xor</link>
      </entry>
      <entry>
       <link linkend="language.generators">yield</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="control-structures.yield.from">yield from</link>
      </entry>
      <entry></entry>
      <entry></entry>
      <entry></entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <simpara>
   * <literal>readonly</literal> puede ser utilizado como nombre de función.
  </simpara>

  <table>
   <title>Constantes utilizadas durante la compilación</title>
   <tgroup cols="5">
    <tbody>
     <row>
      <entry>
       <link linkend="language.constants.magic">__CLASS__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__DIR__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__FILE__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__FUNCTION__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__LINE__</link>
      </entry>
     </row>
     <row>
      <entry>
       <link linkend="language.constants.magic">__METHOD__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__PROPERTY__</link>
      </entry>
      <entry>
       <link linkend="language.namespaces.nsconstants">__NAMESPACE__</link>
      </entry>
      <entry>
       <link linkend="language.constants.magic">__TRAIT__</link>
      </entry>
      <entry>
      </entry>
      <entry>
      </entry>
      <entry>
      </entry>
      <entry>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 xml:id="reserved.classes">
  <title>Clases predefinidas</title>
  <para>
   Esta sección lista las clases estándar predefinidas. Las otras extensiones
   que definen otras clases se describen en su referencia.
  </para>

  <sect2 xml:id="reserved.classes.standard">
   <title>Clases estándar</title>

   <simpara>
    Estas clases están definidas en el conjunto de clases estándar
    de PHP, incluidas en todas las versiones de PHP.
   </simpara>

   <variablelist>
    <varlistentry>
     <term><classname>Directory</classname></term>
     <listitem>
      <simpara>
       Creado por la función <function>dir</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>stdClass</classname></term>
     <listitem>
      <simpara>
       Una clase vacía genérica creada por
       <link linkend="language.types.object.casting">la conversión
       en objeto</link> o el resultado de diversas funciones estándar.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>__PHP_Incomplete_Class</classname></term>
     <listitem>
      <simpara>
       Puede ser creado por la función
       <function>unserialize</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Exception</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>ErrorException</classname></term>
     <listitem>
      <simpara>

      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>php_user_filter</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Closure</classname></term>
     <listitem>
      <simpara>
       La clase predefinida final <classname>Closure</classname>
       se utiliza para representar las
       <link linkend="functions.anonymous">funciones anónimas</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Generator</classname></term>
     <listitem>
      <simpara>
       La clase final predefinida <classname>Generator</classname>
       se utiliza para representar los
       <link linkend="language.generators">generadores</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>ArithmeticError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>AssertionError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>DivisionByZeroError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Error</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>Throwable</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>ParseError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>TypeError</classname></term>
     <listitem>
      <simpara>
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="reserved.classes.special">
   <title>Clases especiales</title>

   <simpara>
    Los identificadores siguientes no deberían ser utilizados como nombre de clase
    debido a su papel particular.
   </simpara>

   <variablelist>
    <varlistentry>
     <term><classname>self</classname></term>
     <listitem>
      <simpara>
       <link linkend="language.oop5.paamayim-nekudotayim">Clase
        actual</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>static</classname></term>
     <listitem>
      <simpara>
       <link linkend="language.oop5.late-static-bindings">Clase actual
        en el momento de la ejecución</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><classname>parent</classname></term>
     <listitem>
      <simpara>
       <link linkend="language.oop5.paamayim-nekudotayim">Clase
        padre</link>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

 </sect1>

 &appendices.reserved.constants;
 <sect1 xml:id="reserved.other-reserved-words">
  <title>Otra lista de palabras reservadas</title>
  <simpara>
   Las palabras siguientes no pueden ser utilizadas como nombre de clase, de interfaz o de trait.
   Anteriormente a PHP 8.0, también estaba prohibido utilizarlas en los espacios de nombres.
  </simpara>
  <para>
   <table>
    <title>Palabras reservadas</title>
    <tgroup cols="4">
     <tbody>
      <row>
       <entry>
        int
       </entry>
       <entry>
        float
       </entry>
       <entry>
        bool
       </entry>
       <entry>
        string
       </entry>
      </row>
      <row>
       <entry>
        true
       </entry>
       <entry>
        false
       </entry>
       <entry>
        null
       </entry>
       <entry>
        void (disponible a partir de PHP 7.1)
       </entry>
       </row>
       <row>
        <entry>
         iterable (disponible a partir de PHP 7.1)
        </entry>
        <entry>
         object (disponible a partir de PHP 7.2)
        </entry>
        <entry>
         mixed (disponible a partir de PHP 8.0)
        </entry>
        <entry>
         never (disponible a partir de PHP 8.1)
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    La lista de palabras siguientes presenta una particularidad. Aunque pueden ser
    utilizadas en los nombres de clase, de interfaz, y de trait, conviene evitar
    utilizarlas sabiendo que pueden ser utilizadas en las futuras versiones de PHP.
   </para>
   <para>
    <table>
     <title>Palabras reservadas suaves</title>
     <tgroup cols="4">
      <tbody>
       <row>
        <entry>
         enum
        </entry>
        <entry>
         resource
        </entry>
        <entry>
         numeric
        </entry>
        <entry>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
