<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f164f8c8627d55910084c94e1dcea93b4a57c4a3 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="migration81.deprecated">
 <title>Funcionalidades Depreciadas</title>

 <sect2 xml:id="migration81.deprecated.core">
  <title>Núcleo de PHP</title>

  <sect3 xml:id="migration81.deprecated.core.serialize-interface">
   <title>
    Implementar <interfacename>Serializable</interfacename> sin
    <function>__serialize</function> y <function>__unserialize</function>
   </title>

   <para>
    Solo los nuevos métodos deben ser implementados, si no se proporciona soporte para
    PHP anterior a la versión 7.4, o ambos deben ser implementados.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.null-not-nullable-internal">
   <title>Pasar &null; a parámetros no nullables de funciones nativas</title>

   <para>
    Los tipos escalares de las funciones nativas son nullables por defecto.
    Este comportamiento está depreciado para alinearse con el comportamiento de las funciones
    definidas por el usuario, donde los tipos escalares deben ser marcados como nullables explícitamente.

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
var_dump(str_contains("foobar", null));
// Deprecated: Passing null to parameter #2 ($needle) of type string
//             is deprecated
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.implicit-float-conversion">
   <title>Conversiones implícitas incompatibles de &float; a &integer;</title>

   <para>
    La conversión implícita de &float; a &integer; que
    resulta en una pérdida de precisión ahora está depreciada.
    Esto afecta a las claves de &array;, las declaraciones de tipo &integer; en modo coercitivo,
    y los operadores que trabajan con &integer;s.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$a = [];
$a[15.5]; // depreciado, ya que el valor de la clave pierde el componente 0.5
$a[15.0]; // ok, ya que 15.0 == 15
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.static-trait">
   <title>Llamar a un elemento <modifier>static</modifier> en un trait</title>

   <para>
    Llamar a un método <modifier>static</modifier>, o acceder a una
    propiedad <modifier>static</modifier> directamente en un trait está depreciado.
    Los métodos y propiedades estáticas solo deben ser accedidos en una clase que use el trait.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.magic-sleep">
   <title>Devolver un no &array; desde <function>__sleep</function></title>

   <para>
    Devolver un valor que no sea un &array; desde
    <link linkend="object.sleep">__sleep()</link> ahora genera un diagnóstico.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.void-by-ref">
   <title>Devolver una referencia desde una función <type>void</type></title>

   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function &test(): void {}
?>
]]>
     </programlisting>
    </informalexample>
    Tal función es contradictoria, y ya emite el
    <literal>E_NOTICE</literal> siguiente cuando se llama:
    <literal>Only variable references should be returned by reference</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.autovivification-false">
   <title>La autovivificación desde &false;</title>
   <para>
    La autovivificación es el proceso de crear un nuevo &array;
    al añadir a un valor.
    La autovivificación está prohibida desde valores escalares, &false; sin embargo
    era una excepción. Esto ahora está depreciado.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$arr = false;
$arr[] = 2;   // depreciado
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <note>
    <para>
     La autovivificación desde &null; y valores indefinidos sigue estando permitida:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// Desde un valor indefinido
$arr[] = 'some value';
$arr['doesNotExist'][] = 2;
// Desde null
$arr = null;
$arr[] = 2;
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
  </sect3>

 </sect2>

 <sect2 xml:id="migration81.deprecated.ctype">
  <title>ctype</title>

  <sect3 xml:id="migration81.deprecated.ctype.nonstring-arguments">
   <title>Verificar argumentos no cadena de caracteres</title>

   <para>
    Pasar un argumento no cadena de caracteres está depreciado.
    En el futuro, el argumento será interpretado como una cadena de caracteres en lugar
    de un código ASCII.
    Según el comportamiento deseado, el argumento debe ser convertido a &string; o se debe hacer una llamada explícita a
    <function>chr</function>. Todas las funciones <literal>ctype_*()</literal> están afectadas.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.deprecated.date">
  <title>Fecha</title>

  <para>
   <function>date_sunrise</function> y <function>date_sunset</function>
   han sido depreciadas a favor de <function>date_sun_info</function>.
  </para>

  <para>
   <function>strptime</function> ha sido depreciada.
   Usar <function>date_parse_from_format</function> en su lugar (para un análisis independiente de la configuración regional),
   o <methodname>IntlDateFormatter::parse</methodname> (para un análisis dependiente de la configuración regional).
  </para>

  <para>
   <function>strftime</function> y <function>gmstrftime</function> han sido depreciadas.
   Usar <function>date</function> en su lugar (para un formateo independiente de la configuración regional),
   o <methodname>IntlDateFormatter::format</methodname> (para un formateo dependiente de la configuración regional).
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.filter">
  <title>Filtro</title>

  <para>
   Los filtros <constant>FILTER_SANITIZE_STRING</constant> y
   <constant>FILTER_SANITIZE_STRIPPED</constant> están depreciados.
  </para>
  <para>
   La directiva INI <link linkend="ini.filter.default">filter.default</link>
   ahora está depreciada.
   <!-- TODO Check that filter.default_flags -->
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.gd">
  <title>GD</title>

  <para>
   El parámetro <parameter>num_points</parameter> de <function>imagepolygon</function>,
   <function>imageopenpolygon</function> y <function>imagefilledpolygon</function>
   ha sido depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.hash">
  <title>Hash</title>

  <para>
   Las funciones <function>mhash</function>,
   <function>mhash_keygen_s2k</function>,
   <function>mhash_count</function>,
   <function>mhash_get_block_size</function>,
   y <function>mhash_get_hash_name</function> han sido depreciadas.
   Usar las funciones <literal>hash_*()</literal> en su lugar.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.imap">
  <title>IMAP</title>

  <para>
   La constante <constant>NIL</constant> ha sido depreciada.
   Usar <literal>0</literal> en su lugar.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.intl">
  <title>Intl</title>

  <para>
   Llamar a <methodname>IntlCalendar::roll</methodname> con un argumento
   &boolean; está depreciado.
   Usar <literal>1</literal> y <literal>-1</literal> en lugar de
   &true; y &false; respectivamente.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.mbstring">
  <title>Cadena de caracteres multibyte</title>

  <para>
   Llamar a <function>mb_check_encoding</function> sin ningún argumento
   está depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.mysqli">
  <title>MySQLi</title>

  <para>
   La propiedad <property>mysqli_driver::$report_mode</property>
   ha sido depreciada.
   Era redundante y obsoleta, usar <constant>PHP_VERSION_ID</constant>
   en su lugar.
  </para>

  <para>
   Llamar a <methodname>mysqli::get_client_info</methodname> o
   <function>mysqli_get_client_info</function> con el argumento
   <parameter>mysqli</parameter> ha sido depreciado.
   Llamar a <function>mysqli_get_client_info</function> sin argumentos
   para obtener la información de versión de la biblioteca cliente.
  </para>

  <para>
   El método <methodname>mysqli::init</methodname> ha sido depreciado.
   Reemplazar las llamadas a <methodname>parent::init</methodname> por
   <methodname>parent::__construct</methodname>.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.oci8">
  <title>OCI8</title>

  <para>
   La directiva INI <link linkend="ini.oci8.old-oci-close-semantics">oci8.old_oci_close_semantics</link>
   está depreciada.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.odbc">
  <title>ODBC</title>

  <para>
   <function>odbc_result_all</function> ha sido depreciada.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.pdo">
  <title>PDO</title>

  <para>
   El modo de recuperación <constant>PDO::FETCH_SERIALIZE</constant> ha sido depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.pgsql">
  <title>PgSQL</title>

  <para>
   No pasar el argumento de conexión a todas las funciones <literal>pgsql_*()</literal>
   ha sido depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.soap">
  <title>SOAP</title>

  <para>
   La opción <literal>ssl_method</literal> de
   <methodname>SoapClient::__construct</methodname> ha sido depreciada
   a favor de las opciones de contexto de flujo SSL.
   <!-- La equivalencia directa sería
    crypto_method, pero se recomiendan min_proto_version/max_proto_version en su lugar. -->
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.standard">
  <title>Estándar</title>

  <para>
   Llamar a <function>key</function>, <function>current</function>,
   <function>next</function>, <function>prev</function>,
   <function>reset</function>, o <function>end</function>
   en &object;s está depreciado.
   Convertir el &object; en &array; con <function>get_mangled_object_vars</function>
   primero, o usar los métodos de una clase que implemente
   <interfacename>Iterator</interfacename>, como <classname>ArrayIterator</classname>, en su lugar.
  </para>

  <para>
   La directiva INI <link linkend="ini.auto-detect-line-endings">auto_detect_line_endings</link>
   está depreciada.
   Si es necesario, manejar manualmente los saltos de línea <literal>"\r"</literal> en su lugar.
  </para>

  <para>
   Las constantes <constant>FILE_BINARY</constant> y
   <constant>FILE_TEXT</constant> han sido depreciadas.
   Nunca tuvieron efecto.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
