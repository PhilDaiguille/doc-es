<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a989e5f21db7902c0028ad51e9adc94024d13216 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="migration83.incompatible" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Cambios incompatibles</title>

 <sect2 xml:id="migration83.incompatible.core">
  <title>Núcleo de PHP</title>

  <sect3 xml:id="migration83.incompatible.core.saner-inc-dec-operators">
   <title>Operadores de incremento/decremento más seguros</title>

   <para>
    El uso del operador de <link linkend="language.operators.increment">incremento</link>
    (<literal>++</literal>) en cadenas vacías, no numéricas
    o no alfanuméricas está ahora depreciado.
    Además, la incrementación de cadenas no numéricas está fuertemente depreciada.
    Esto significa que ningún diagnóstico <constant>E_DEPRECATED</constant> se emite,
    pero esta funcionalidad no debe usarse para producir nuevo código.
    La nueva función <function>str_increment</function> debe usarse en su lugar.
   </para>

   <para>
    El uso del operador de <link linkend="language.operators.increment">decremento</link>
    (<literal>--</literal>) en cadenas vacías o no numéricas está ahora depreciado.
   </para>
   <!-- RFC: https://wiki.php.net/rfc/saner-inc-dec-operators -->
  </sect3>

  <sect3 xml:id="migration83.incompatible.core.get-class">
   <title>get_class()/get_parent_class() llamadas sin argumentos</title>

   <para>
    Llamar a <function>get_class</function> y <function>get_parent_class</function>
    sin argumentos está ahora depreciado.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration83.incompatible.core.dba">
  <title>DBA</title>

  <para>
   Llamar a <function>dba_fetch</function> con <parameter>$dba</parameter> como
   tercer argumento está ahora depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.ffi">
  <title>FFI</title>

  <para>
   Llamar a <methodname>FFI::cast</methodname>, <methodname>FFI::new</methodname>,
   y <methodname>FFI::type</methodname> de manera estática está ahora depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.intl">
  <title>Intl</title>

  <para>
   Las constantes <constant>U_MULTIPLE_SEPARATOR_SEPARATORS</constant>
   han sido depreciadas, se recomienda usar la constante
   <constant>U_MULTIPLE_SEPARATOR_SEPARATORS</constant>
   en su lugar.
  </para>
  <para>
   La constante <constant>NumberFormatter::TYPE_CURRENCY</constant> ha sido depreciada.
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.ldap">
  <title>LDAP</title>

  <para>
   Llamar a <function>ldap_connect</function> con
   <parameter>$hostname</parameter> y <parameter>$port</parameter> separados está
   depreciado.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_3#deprecate_calling_ldap_connect_with_2_parameters -->
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.mbstring">
  <title>MBString</title>

  <para>
   Pasar un <parameter>$width</parameter> negativo a
   <function>mb_strimwidth</function> está ahora depreciado.
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.phar">
  <title>Phar</title>

  <para>
   Llamar a <methodname>Phar::setStub</methodname> con un
   <type>resource</type> y un <parameter>$length</parameter>
   está ahora depreciado. Estas llamadas deben ser reemplazadas por:
   <code>$phar->setStub(stream_get_contents($resource));</code>
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.random">
  <title>Random</title>

  <para>
   La variante MT19937 <constant>MT_RAND_PHP</constant> está depreciada.
   <!-- RFC: https://wiki.php.net/rfc/deprecations_php_8_3#mt_rand_php -->
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.reflection">
  <title>Reflection</title>

  <para>
   Llamar a <methodname>ReflectionProperty::setValue</methodname> con solo un
   parámetro está depreciado.
   Para definir propiedades estáticas, pasar <literal>null</literal> como primer parámetro.
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.standard">
  <title>Standard</title>

  <para>
   La función <function>assert_options</function> está ahora depreciada.
  </para>
  <para>
   Las constantes <constant>ASSERT_ACTIVE</constant>, <constant>ASSERT_BAIL</constant>,
   <constant>ASSERT_CALLBACK</constant>, <constant>ASSERT_EXCEPTION</constant>,
   y <constant>ASSERT_WARNING</constant> están ahora depreciadas.
  </para>

  <para>
   Las directivas INI <literal>assert.*</literal> han sido depreciadas.
   Ver la página
   <link linkend="migration83.other-changes.ini">Cambios en la gestión del fichero INI</link>
   para más detalles.
  </para>
  <!-- RFC: https://wiki.php.net/rfc/assert-string-eval-cleanup -->
 </sect2>

 <sect2 xml:id="migration83.incompatible.sqlite3">
  <title>SQLite3</title>

  <para>
   El uso de excepciones está ahora desaconsejado, y las advertencias serán eliminadas en el futuro.
   Llamar a <code>SQLite3::enableExceptions(false)</code> suprimirá una advertencia de depreciación en esta versión.
  </para>
 </sect2>

 <sect2 xml:id="migration83.incompatible.zip">
  <title>Zip</title>

  <para>
   La constante <constant>ZipArchive::FL_RECOMPRESS</constant> está depreciada
   y será eliminada en una versión futura de libzip.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
