<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 617b58b308d1f1916efaa4a3eb158fed251ae439 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="migration83.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Nuevas características</title>

 <sect2 xml:id="migration83.new-features.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration83.new-features.core.readonly-modifier-improvements">
   <title>Modificación de solo lectura</title>

   <para>
    Las clases anónimas ahora pueden marcarse como de solo lectura.
   </para>

   <para>
    Las propiedades de solo lectura ahora pueden restablecerse durante la clonación.
    <!-- RFC: https://wiki.php.net/rfc/readonly_amendments -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.typed-class-constants">
   <title>Constantes de clase tipificadas</title>

   <para>
    Las constantes de clase, interfaz, rasgo y enumeración ahora admiten declaraciones de tipo.
    <!-- RFC: https://wiki.php.net/rfc/typed_class_constants -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.closures-created-from-magic-methods">
   <title>Cierres creados a partir de métodos mágicos</title>

   <para>
    Los cierres creados a partir de métodos mágicos ahora pueden aceptar argumentos nombrados.
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.final-modifier-method-from-trait">
   <title>El modificador final con un método de un rasgo</title>

   <para>
    El modificador final ahora puede usarse al usar un método de un rasgo.
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.override-attribute">
   <title>El atributo Override</title>

   <para>
    Se añadió el atributo #[\Override] para verificar que un método existe en una clase
    padre o una interfaz implementada.
    <!-- RFC: https://wiki.php.net/rfc/marking_overriden_methods -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.fetch-class-constant-dynamically-syntax">
   <title>Sintaxis de recuperación de constante de clase dinámicamente</title>

   <para>
    Las constantes de clase ahora pueden accederse dinámicamente usando la sintaxis
    <code>C::{$name}</code>.
    <!-- RFC: https://wiki.php.net/rfc/dynamic_class_constant_fetch -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.static-variable-initializers">
   <title>Inicializadores de variables estáticas</title>

   <para>
    Los inicializadores de variables estáticas ahora pueden contener expresiones arbitrarias.
    <!-- RFC: RFC: https://wiki.php.net/rfc/arbitrary_static_variable_initializers -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.fallback-value-syntax-for-php-ini">
   <title>Sintaxis de valor de respaldo para variables ini</title>

   <para>
    php.ini ahora soporta la sintaxis de valor de respaldo/valor por defecto.
    <!-- refs: https://github.com/php/php-src/pull/11351 -->
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
/*
/path/to/user.ini contiene el siguiente parámetro:

listen = localhost:${DRUPAL_FPM_PORT:-9000}
*/

$user_ini = parse_ini_file('/path/to/user.ini');
echo $user_ini['listen']; // localhost:9000
]]>
     </programlisting>
    </informalexample>

   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration83.new-features.cli">
  <title>CLI</title>

  <para>
   Ahora es posible hacer linting de múltiples archivos.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.dom">
  <title>DOM</title>

  <para>
   Se añadieron las propiedades <property>DOMElement::$className</property>
   y <property>DOMElement::$id</property>.
   Estas propiedades no son binarias en este momento debido a las limitaciones subyacentes
   de libxml2.
   Esto significa que los valores de las propiedades se truncarán a un byte NULO.
  </para>

  <para>
   Se añadieron las propiedades <property>DOMNode::$isConnected</property>
   y <property>DOMNameSpaceNode::$isConnected</property>.
  </para>

  <para>
   Se añadieron las propiedades <property>DOMNode::$parentElement</property>
   y <property>DOMNameSpaceNode::$parentElement</property>.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.ffi">
  <title>FFI</title>

  <para>
   Ahora es posible asignar <classname>FFI\CData</classname> a otros FFI\CData.
   Esto significa que los CData ahora pueden asignarse a estructuras y campos.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.opcache">
  <title>Opcache</title>

  <para>
   <code>opcache_get_status()['scripts'][n]['revalidate']</code> ahora contiene
    un timestamp Unix indicando cuándo se espera la próxima revalidación del timestamp de los scripts,
    dictada por la directiva INI
   <link linkend="ini.opcache.revalidate-freq">opcache.revalidate_freq</link>.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.posix">
  <title>POSIX</title>

  <para>
   <function>posix_getrlimit</function> ahora toma un argumento opcional
   <parameter>$resource</parameter> para permitir la recuperación de un solo límite de recurso.
  </para>

  <para>
   <function>posix_isatty</function> ahora lanza advertencias de tipo para enteros
   siguiendo la semántica ZPP habitual.
  </para>

  <para>
   <function>posix_ttyname</function> ahora lanza advertencias de tipo para enteros
   siguiendo la semántica ZPP habitual y advertencias de valor para enteros de descriptor de archivo inválidos.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.streams">
  <title>Streams</title>

  <para>
   Los streams ahora pueden emitir la notificación <constant>STREAM_NOTIFY_COMPLETED</constant>.
   Esto no estaba implementado anteriormente.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
