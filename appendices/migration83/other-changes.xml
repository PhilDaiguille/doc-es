<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1116af46680f7baf89c46610430a3b63ce9a1f0 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="migration83.other-changes" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Otros cambios</title>

 <sect2 xml:id="migration83.other-changes.core">
  <title>Cambios en el núcleo</title>

  <sect3 xml:id="migration83.other-changes.core.ffi">
   <title>FFI</title>

   <para>
    <methodname>FFI::load</methodname> ahora está permitido durante la precarga
    cuando <link linkend="ini.opcache.preload-user">opcache.preload_user</link>
    es el usuario del sistema actual. Anteriormente,
    llamar a <methodname>FFI::load</methodname> no era posible
    durante la precarga si la directiva
    <link linkend="ini.opcache.preload-user">opcache.preload_user</link>
    estaba definida.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.core.fpm">
   <title>FPM</title>

   <para>
    Las pruebas CLI de FPM ahora fallan si la ruta del socket es más larga de lo que el SO soporta.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.core.opcache">
   <title>Opcache</title>

   <para>
    En las SAPI CLI y phpdbg, la precarga ya no requiere
    que la directiva <link linkend="ini.opcache.preload-user">opcache.preload_user</link>
    esté definida cuando PHP se ejecuta como root.
    En otras SAPI, esta directiva es requerida cuando PHP se ejecuta como root
    porque la precarga se realiza antes de que la SAPI cambie a un usuario no privilegiado.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.core.streams">
   <title>Streams</title>

   <para>
    Bloquear <function>fread</function> en una conexión de socket ahora devuelve
    inmediatamente si hay datos almacenados en búfer en lugar de esperar más datos.
   </para>

   <para>
    Un stream de memoria ya no devuelve un error si el desplazamiento de búsqueda está más allá del final.
    En su lugar, la memoria se incrementará en la próxima escritura y los datos entre
    el final anterior y el desplazamiento se llenarán con ceros, similar a cómo funcionan los archivos.
   </para>

   <para>
    Las operaciones de acceso <function>stat</function> como
    <function>file_exists</function> y similares ahora usarán la ruta real
    en lugar de la ruta del stream. Esto es coherente con la apertura
    del stream.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration83.other-changes.sapi">
  <title>Cambios en los módulos SAPI</title>

  <sect3 xml:id="migration83.other-changes.sapi.cli">
   <title>CLI</title>

   <para>
    Los streams <constant>STDOUT</constant>, <constant>STDERR</constant> y
    <constant>STDIN</constant> ya no se cierran al destruir el recurso
    lo cual ocurre principalmente cuando el CLI termina.
    Sin embargo, aún es posible cerrar explícitamente estos streams usando
    <function>fclose</function> y similares.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration83.other-changes.functions">
  <title>Funciones cambiadas</title>

  <sect3 xml:id="migration83.other-changes.functions.core">
   <title>Core</title>

   <para>
    <function>gc_status</function> ha añadido los siguientes 8 campos:

    <simplelist>
     <member><literal>"running"</literal> => bool</member>
     <member><literal>"protected"</literal> => bool</member>
     <member><literal>"full"</literal> => bool</member>
     <member><literal>"buffer_size"</literal> => int</member>
     <member><literal>"application_time"</literal> => float: El tiempo total de aplicación,
     en segundos (incluyendo el tiempo de recolección)</member>
     <member><literal>"collector_time"</literal> => float: El tiempo pasado recolectando
     ciclos, en segundos (incluyendo el tiempo de destructor y el tiempo de liberación)</member>
     <member><literal>"destructor_time"</literal> => float: El tiempo pasado ejecutando
     los destructores durante la recolección de ciclos, en segundos</member>
     <member><literal>"free_time"</literal> => float: El tiempo pasado liberando valores
     durante la recolección de ciclos, en segundos</member>
    </simplelist>
   </para>

   <para>
    <function>class_alias</function> ahora soporta la creación de un alias en
    clases internas.
   </para>

   <para>
    Cambiar <link linkend="ini.open-basedir">open_basedir</link> en tiempo de ejecución
    usando <code>ini_set('open_basedir', ...);</code> ya no acepta rutas
    que contengan el directorio padre (<literal>..</literal>). Anteriormente,
    solo las rutas que comenzaban con <literal>..</literal> estaban prohibidas. Esto
    podía ser fácilmente eludido prefijando la ruta con <literal>./</literal>.
   </para>

   <para>
    Los manejadores de excepciones de usuario ahora capturan excepciones durante el apagado.
   </para>

   <para>
    El HTML resultante de <function>highlight_string</function> y
    <function>highlight_file</function> ha cambiado.
    Los espacios entre las etiquetas HTML externas son eliminados. Los saltos de línea y los espacios
    ya no se convierten en entidades HTML. Todo el HTML ahora está envuelto en una etiqueta
    <literal>&lt;pre&gt;</literal>. La etiqueta <literal>&lt;span&gt;</literal> externa se ha fusionado
    con la etiqueta <literal>&lt;code&gt;</literal>.
   </para>

  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.calendar">
   <title>Calendar</title>

   <para>
    <function>easter_date</function> ahora soporta años desde 1970 a
    2,000,000,000 en sistemas de 64 bits, anteriormente solo soportaba
    años desde 1970 a 2037.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.curl">
   <title>Curl</title>

   <para>
    <function>curl_getinfo</function> ahora soporta dos nuevas constantes:
    <constant>CURLINFO_CAPATH</constant> y
    <constant>CURLINFO_CAINFO</constant>. Si la opción es &null;, las siguientes claves
    estarán presentes:
    <literal>"capath"</literal> y <literal>"cainfo"</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.dom">
   <title>DOM</title>

   <para>
    El tipo de retorno de <methodname>DOMCharacterData::appendData</methodname> ha sido cambiado
    a <type>true</type>.
   </para>

   <para>
    <methodname>DOMDocument::loadHTML</methodname>,
    <methodname>DOMDocument::loadHTMLFile</methodname>, y
    <methodname>DOMDocument::loadXML</methodname> ahora tienen un tipo de
    retorno provisional de <type>bool</type>. Anteriormente, esto estaba documentado
    como teniendo un tipo de retorno de <code>DOMDocument|bool</code>, pero, desde PHP 8.0.0,
    <classname>DOMDocument</classname>
    no puede ser devuelto porque ya no es llamable estáticamente.
   </para>

  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.gd">
   <title>Gd</title>

   <para>
    La firma de <function>imagerotate</function> ha cambiado.
    El parámetro <parameter>$ignore_transparent</parameter> ha sido eliminado,
    porque ha sido ignorado desde PHP 5.5.0.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.intl">
   <title>Intl</title>

   <para>
    <function>datefmt_set_timezone</function> (y sus alias
    <methodname>IntlDateformatter::setTimeZone</methodname>)
    ahora devuelve &true; en caso de éxito, anteriormente devolvía &null;.
   </para>

   <para>
    <methodname>IntlBreakiterator::setText</methodname> ahora devuelve &false;
    en caso de fallo, anteriormente devolvía &null;.
    Ahora devuelve &true; en caso de éxito, anteriormente devolvía &null;.
   </para>

   <para>
    <methodname>IntlChar::enumCharNames</methodname> ahora devuelve un booleano.
    Anteriormente, devolvía &null; en caso de éxito y &false; en caso de fallo.
   </para>

   <para>
    <methodname>IntlDateFormatter::__construct</methodname> lanza una excepción <constant>U_ILLEGAL_ARGUMENT_ERROR</constant>
    cuando se establece una localización inválida.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.mbstring">
   <title>MBString</title>

   <para>
    <function>mb_strtolower</function> y <function>mb_convert_case</function>
    implementan reglas de conversión de mayúsculas condicionales para la letra griega sigma.
    Para <function>mb_strtolower</function>,
    la conversión condicional se aplica solo a los modos <constant>MB_CASE_LOWER</constant>,
    y <constant>MB_CASE_TITLE</constant>, no a los modos
    <constant>MB_CASE_LOWER_SIMPLE</constant> y
    <constant>MB_CASE_TITLE_SIMPLE</constant>.
   </para>

   <para>
    <function>mb_decode_mimeheader</function> interpreta los guiones bajos en
    las palabras codificadas MIME QPrint como requiere la RFC 2047; se convierten en espacios.
    Los guiones bajos deben ser codificados como <literal>"=5F"</literal> en tales palabras
    codificadas MIME.
   </para>

   <para>
    En raros casos, <function>mb_encode_mimeheader</function> codificará
    su cadena de entrada donde la pasaría como ASCII puro en PHP 8.2.
   </para>

   <para>
    <function>mb_encode_mimeheader</function> ya no elimina los bytes NUL
    (cero) al codificar QPrint de la cadena de entrada.
    Esto anteriormente corrompía las cadenas en algunos codificados de texto,
    especialmente UTF-16 y UTF-32, por mb_encode_mimeheader.
   </para>

   <para>
    <function>mb_detect_encoding</function> en modo "no estricto" ahora se comporta
    como se describe en la documentación.
    Anteriormente, devolvía &false; si el mismo byte (por ejemplo, el primer
    byte) de la cadena de entrada era inválido en todos los codificados candidatos.
    Más generalmente, eliminaba los codificados candidatos de la consideración
    cuando se veía un byte inválido, y si el mismo byte de entrada eliminaba
    todos los codificados restantes aún bajo consideración, devolvía &false;.
    Por otro lado, si todos los codificados candidatos excepto uno eran eliminados
    de la consideración, devolvía el último restante sin tener en cuenta
    el número de errores de codificación que podrían encontrarse más adelante en la cadena.
    Esto es diferente del comportamiento descrito en la documentación, que
    dice: "Si strict está definido en false, se devolverá el codificado más cercano."
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.mysqli">
   <title>mysqli</title>

   <para>
    <function>mysqli_fetch_object</function> ahora lanza una
    <classname>ValueError</classname> en lugar de una <classname>Exception</classname>
    cuando el argumento <parameter>$constructor_args</parameter> no está vacío
    con la clase no teniendo un constructor.
   </para>

   <para>
    <function>mysqli_poll</function> ahora lanza una <classname>ValueError</classname>
    cuando ni el argumento <parameter>$read</parameter>
    ni el argumento <parameter>$error</parameter> son pasados.
   </para>

   <para>
    <function>mysqli_field_seek</function> y
    <methodname>mysqli_result::field_seek</methodname> ahora especifican el tipo
    de retorno como <type>true</type> en lugar de <type>bool</type>.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.odbc">
   <title>ODBC</title>

   <para>
    <function>odbc_autocommit</function> ahora acepta &null; para el
    parámetro <parameter>$enable</parameter>.
    Pasar &null; tiene el mismo comportamiento que pasar un solo parámetro,
    indicando si la funcionalidad autocommit está habilitada o no.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.pgsql">
   <title>PGSQL</title>

   <para>
    <function>pg_fetch_object</function> ahora lanza una
    <classname>ValueError</classname> en lugar de una <classname>Exception</classname>
    cuando el argumento <parameter>$constructor_args</parameter> no está vacío
    con la clase no teniendo un constructor.
   </para>

   <para>
    <function>pg_insert</function> ahora lanza una <classname>ValueError</classname>
    en lugar de una <classname>Exception</classname> cuando la tabla especificada es inválida.
   </para>

   <para>
    <function>pg_insert</function> y <function>pg_convert</function> lanzan
    una <classname>ValueError</classname> o una <classname>TypeError</classname>
    en lugar de un <constant>E_WARNING</constant> cuando el valor/tipo de un campo
    no coincide correctamente con el tipo de PostgreSQL.
   </para>

   <para>
    El parámetro <parameter>$row</parameter> de
    <function>pg_fetch_result</function>,
    <function>pg_field_prtlen</function>, y
    <function>pg_field_is_null</function> ahora es nullable.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.random">
   <title>Random</title>

   <para>
    Cambio de <function>mt_srand</function> y <function>srand</function> para
    no verificar el número de argumentos para determinar si se debe usar una semilla
    aleatoria. Pasar &null; generará una semilla aleatoria, <literal>0</literal>
    usará cero como semilla. Las funciones ahora son coherentes con
    <methodname>Random\Engine\Mt19937::__construct</methodname>.
   </para>

  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.reflection">
   <title>Reflection</title>

   <para>
    El tipo de retorno de <methodname>ReflectionClass::getStaticProperties</methodname>
    ya no es nullable.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.functions.standard">
   <title>Standard</title>

   <para>
    El <constant>E_NOTICE</constant> emitido por <function>unserialize</function>
    ha sido promovido a <constant>E_WARNING</constant>.
    <!-- RFC: https://wiki.php.net/rfc/improve_unserialize_error_handling -->
   </para>

   <para>
    <function>unserialize</function> ahora emite un <constant>E_WARNING</constant>
    si la entrada contiene bytes no consumidos.
    <!-- RFC: https://wiki.php.net/rfc/unserialize_warn_on_trailing_data -->
   </para>

   <para>
    <function>array_pad</function> ya no está limitado solo por el número máximo
    de elementos que un array puede contener. Anteriormente, solo era posible
    añadir un máximo de 1,048,576 elementos a la vez.
   </para>

   <para>
    <function>strtok</function> ahora lanza un <constant>E_WARNING</constant> si el
    token no es proporcionado al iniciar la tokenización.
   </para>

   <para>
    <function>password_hash</function> ahora encadena la excepción subyacente
    <classname>Random\RandomException</classname>
    en la <parameter>$previous</parameter> <classname>Exception</classname>
    de <constant>ValueError</constant> cuando falla la generación de sal.
   </para>

   <para>
    Si un array es usado como <parameter>$command</parameter> para
    <function>proc_open</function>, debe tener al menos un elemento
    no vacío. De lo contrario, se lanza una <classname>ValueError</classname>.
   </para>

   <para>
    <function>proc_open</function> ahora devuelve &false; si el array <parameter>$command</parameter>
    es un comando inválido en lugar de un objeto de recurso que produce una advertencia más tarde.
    Esto ya era el caso para Windows, pero ahora también es el caso si se usa una implementación posix_spawn
    (la mayoría de las plataformas Linux, BSD y MacOS). Sigue habiendo
    algunas plataformas antiguas donde este comportamiento no ha cambiado porque posix_spawn no es
    soportado allí.
   </para>

   <para>
    <function>array_sum</function> y <function>array_product</function> ahora emiten
    una advertencia cuando los valores del array no pueden ser convertidos en int/float.
    Anteriormente, los arrays y los objetos eran ignorados mientras que cada otro valor era
    convertido en int. Además, los objetos que definen una conversión numérica (por ejemplo
    <link linkend="book.gmp">GMP</link>) ahora son convertidos en lugar de ser ignorados.
    <!-- RFC: https://wiki.php.net/rfc/saner-array-sum-product -->
   </para>

   <para>
    El <parameter>$decimals</parameter> de <function>number_format</function>
    ahora maneja enteros negativos.
    Redondear con un valor negativo para <parameter>$decimals</parameter> significa
    que <parameter>$num</parameter> es redondeado a <parameter>$decimals</parameter>
    dígitos significativos antes del separador decimal.
    Anteriormente, los enteros negativos para <parameter>$decimals</parameter> eran
    silenciosamente ignorados y el número era redondeado a cero decimales.
   </para>

   <para>
    Se ha añadido un nuevo argumento <parameter>$before_needle</parameter> a
    <function>strrchr</function>. Se comporta como su homólogo en las
    funciones <function>strstr</function> o <function>stristr</function>.
   </para>

   <para>
    <function>str_getcsv</function> y <function>fgetcsv</function> ahora devuelven
    una cadena vacía en lugar de una cadena con un solo byte nulo para el último campo
    que solo contiene un cierre no terminado.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration83.other-changes.extensions">
  <title>Otros cambios en las extensiones</title>

  <sect3 xml:id="migration83.other-changes.extensions.core">
   <title>Core</title>

   <para>
    Usar los operadores de <link linkend="language.operators.increment">incremento/decremento</link>
    (<literal>++</literal>/<literal>--</literal>) en valores de tipo
    <type>bool</type> ahora emite advertencias.
    Esto se debe a que actualmente no tiene ningún efecto, pero se comportará como
    <code>$bool += 1</code> en el futuro.
    Using the <link linkend="language.operators.increment">increment/decrement</link>
   </para>

   <para>
    Usar el operador de <link linkend="language.operators.increment">decremento</link>
    (<literal>--</literal>) en valores de tipo <type>null</type> ahora emite advertencias.
    Esto se debe a que actualmente no tiene ningún efecto, pero se comportará como
    <code>$null -= 1</code> en el futuro.
   </para>

   <para>
    Los objetos internos que implementan un cast _IS_NUMBER pero no un gestionador do_operator
    que reemplace la adición y la sustracción ahora pueden ser incrementados y decrementados
    como si se hiciera <code>$o += 1</code> o <code>$o -= 1</code>.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.extensions.dom">
   <title>DOM</title>

   <para>
    El mecanismo de duración de vida del DOM ha sido retrabajado de tal manera que los nodos
    implícitamente eliminados aún pueden ser recuperados. Anteriormente, esto causaba una excepción.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.extensions.sqlite3">
   <title>SQLite3</title>

   <para>
    La clase <classname>SQLite3</classname> ahora lanza una
    <classname>SQLite3Exception</classname> (extensión de
    <classname>Exception</classname>) en lugar de <classname>Exception</classname>.
   </para>

   <para>
    El código de error SQLite ahora se pasa en el código de error de la excepción
    en lugar de estar incluido en el mensaje de error.
   </para>

  </sect3>
 </sect2>

 <sect2 xml:id="migration83.other-changes.ini">
  <title>Cambio en la gestión del archivo INI</title>

  <itemizedlist>
   <listitem>
    <para>
     Los parámetros INI <literal>assert.*</literal> han sido depreciados.
     Esto incluye los siguientes parámetros INI:
     <simplelist>
      <member><link linkend="ini.assert.active">assert.active</link></member>
      <member><link linkend="ini.assert.bail">assert.bail</link></member>
      <member><link linkend="ini.assert.callback">assert.callback</link></member>
      <member><link linkend="ini.assert.exception">assert.exception</link></member>
      <member><link linkend="ini.assert.warning">assert.warning</link></member>
     </simplelist>
     Si el valor del parámetro es igual al valor por defecto, no se emite ninguna advertencia de depreciación.
     El parámetro INI <link linkend="ini.zend.assertions">zend.assertions</link>
     debería usarse en su lugar.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>
     es una nueva directiva INI para definir el tamaño máximo de la pila permitida.
     Los valores posibles son <literal>0</literal> (detectar el tamaño máximo de la pila del proceso o del hilo),
     <literal>-1</literal> (sin límite), o un número positivo de bytes.
     El valor por defecto es <literal>0</literal>.
     Cuando no es posible detectar el tamaño máximo de la pila del proceso o del hilo,
     se usa un valor por defecto del sistema conocido.
     Definir este valor demasiado alto tiene el mismo efecto que deshabilitar el límite de tamaño de la pila.
     Las fibras usan
     <link linkend="ini.fiber.stack-size">fiber.stack_size</link>
     como tamaño máximo de la pila permitida.
     Se lanza una <classname>Error</classname> cuando la pila de llamadas del proceso excede
     <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>-<link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link>
     bytes, para evitar errores de segmentación debidos a un desbordamiento de pila,
     con el objetivo de facilitar la depuración.
     El tamaño de la pila aumenta durante las recursiones no controladas que involucran funciones internas
     o los métodos mágicos
     <link linkend="object.tostring">__toString()</link>,
     <link linkend="object.clone">__clone()</link>,
     <link linkend="object.sleep">__sleep()</link>,
     <link linkend="object.destruct">__destruct()</link>.
     Esto no está relacionado con los desbordamientos de buffer de pila, y no es una característica de seguridad.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link>
     es una nueva directiva INI para definir el tamaño de la pila reservada, en bytes.
     Esto se resta del tamaño máximo de la pila
     permitida, como un buffer, al verificar el tamaño de la pila.
    </para>
   </listitem>
   </itemizedlist>
 </sect2>

 <sect2 xml:id="migration83.other-changes.performance">
  <title>Rendimiento</title>

  <sect3 xml:id="migration83.other-changes.performance.dom">
   <title>DOM</title>

   <para>
    Iterar sobre un <classname>DOMNodeList</classname> ahora usa un caché. Por lo tanto,
    solicitar elementos ya no toma tiempo cuadrático por defecto.
   </para>

   <para>
    Obtener el contenido textual de los nodos ahora evita una asignación, lo que resulta
    en una mejora de rendimiento.
   </para>

   <para>
    <methodname>DOMChildNode::remove</methodname> ahora se ejecuta en O(1) rendimiento.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.performance.standard">
   <title>Standard</title>

   <para>
    La bandera <function>file</function> para la verificación de errores ahora es aproximadamente un 7% más rápida.
   </para>
  </sect3>

  <sect3 xml:id="migration83.other-changes.performance.spl">
   <title>SPL</title>

   <para>
    <classname>RecursiveDirectoryIterator</classname> ahora realiza menos E/S
    al recorrer un directorio.
   </para>
  </sect3>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
