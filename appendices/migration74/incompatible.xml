<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c308ed37a98decb1959ed47dc149a43d6c71ec60 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration74.incompatible" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Modificaciones que causan incompatibilidad ascendente</title>

 <sect2 xml:id="migration74.incompatible.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration74.incompatible.core.non-array-access">
   <title>Acceso de tipo array a no-arrays</title>

   <para>
    Intentar utilizar valores de tipo <type>null</type>, <type>bool</type>, <type>int</type>, <type>float</type> o <type>recurso</type> como un array (como <literal>$null["clave"]</literal>) generará ahora un aviso.
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.get-declared-classes">
   <title>Función <function>get_declared_classes</function></title>

   <para>
    La función <function>get_declared_classes</function> ya no devuelve las clases anónimas que no han sido instanciadas.
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.fn">
   <title>Palabra clave <literal>fn</literal></title>

   <para>
    <literal>fn</literal> es ahora una palabra clave reservada. En particular, ya no puede ser utilizada como una función o un nombre de clase.
    Puede seguir siendo utilizada como una método o un nombre de constante de clase.
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.php-tag">
   <title><literal>&lt;?php</literal> etiqueta al final del fichero</title>

   <para>
    <literal>&lt;?php</literal> al final del fichero (sin nueva línea) será ahora interpretado como una etiqueta PHP de apertura. Anteriormente, era interpretado como una etiqueta corta de apertura seguida de una <literal>php</literal> literal y resultaba en un error de sintaxis
    (con <literal>short_open_tag=1</literal>) o era interpretado como una cadena <literal>&lt;?php</literal> (con <literal>short_open_tag=0</literal>).
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.stream-wrappers">
   <title>Filtros de flujo</title>

   <para>
    Al utilizar include/require en un flujo, <methodname>streamWrapper::stream_set_option</methodname> será invocado con la opción <constant>STREAM_OPTION_READ_BUFFER</constant>.
    Las implementaciones de filtros de flujo personalizados pueden necesitar implementar el método <methodname>streamWrapper::stream_set_option</methodname> para evitar un aviso (devolver siempre &false; es una implementación suficiente).
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.serialization">
   <title>Serialización</title>

   <para>
    El formato <literal>o</literal> de serialización ha sido eliminado. Como nunca es producido por PHP, esto solo puede romper la deserialización de cadenas construidas manualmente.
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.password-algorithm-constants">
   <title>Constantes de algoritmo de contraseña</title>

   <para>
    Los identificadores de algoritmo de hash de contraseña son ahora cadenas nullables en lugar de enteros.
   </para>

   <itemizedlist>
    <listitem>
     <simpara>
      <constant>PASSWORD_DEFAULT</constant> era el entero 1; ahora es la cadena '2y' (en PHP 7.4.0, 7.4.1, y 7.4.2 era &null;)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>PASSWORD_BCRYPT</constant> era el entero 1; ahora es '2y'
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>PASSWORD_ARGON2I</constant> era el entero 2; ahora es 'argon2i'
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>PASSWORD_ARGON2ID</constant> era el entero 3; ahora es 'argon2id'
     </simpara>
    </listitem>
   </itemizedlist>

   <para>
    Las aplicaciones que utilizan correctamente las constantes PASSWORD_DEFAULT, PASSWORD_BCRYPT, PASSWORD_ARGON2I, y PASSWORD_ARGON2ID continuarán funcionando correctamente.
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.htmlentities">
   <title>Función <function>htmlentities</function></title>

   <para>
    <function>htmlentities</function> generará ahora un aviso (en lugar de un aviso de normas estrictas) si se utiliza con una codificación para la cual solo la sustitución de entidad básica es soportada, en cuyo caso es equivalente a <function>htmlspecialchars</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.incompatible.core.fread-fwrite">
   <title>Funciones <function>fread</function> y <function>fwrite</function></title>

   <para>
     <function>fread</function> y <function>fwrite</function> devolverán ahora &false; si la operación falla. Anteriormente, una cadena vacía o 0 era devuelta. EAGAIN/EWOULDBLOCK no son considerados como fallos.
   </para>
   <para>
    Estas funciones también generan un aviso en caso de fallo, por ejemplo, cuando se intenta escribir en un recurso de fichero de solo lectura.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration74.incompatible.bcmath">
  <title>BCMath Arbitrary Precision Mathematics</title>

  <para>
   Las funciones BCMath advertirán ahora si se adopta un número mal formado, como <literal>"32foo"</literal>. El argumento será interpretado como cero, como antes.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.curl">
  <title>CURL</title>

  <para>
   Intentar serializar una clase <classname>CURLFile</classname> generará ahora una excepción. Anteriormente, la excepción solo era lanzada en la deserialización.
  </para>
  <para>
   El uso de <constant>CURLPIPE-HTTP1</constant> está deprecado y ya no es soportado a partir de cURL 7.62.0.
  </para>
  <para>
   El parámetro <literal>$version</literal> de <function>curl_version </function> está deprecado. Si un valor no es igual al valor por omisión <constant>CURLVERSION_NOW</constant> es pasado, se genera un aviso y el parámetro es ignorado.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.datetime">
  <title>Fecha y hora</title>

  <para>
   Llamar a <function>var_dump</function> o similar en una instancia de <classname>DateTime</classname> o <classname>DateTimeImmutable</classname> ya no dejará propiedades accesibles en el objeto.
  </para>
  <para>
   La comparación de objetos <classname>DateInterval</classname> (utilizando <literal>==</literal>, <literal>&lt;</literal>, etc.) generará ahora un aviso y siempre devolverá &false;. Anteriormente, todos los objetos <classname>DateInterval</classname> eran considerados como iguales, a menos que tuvieran propiedades.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.intl">
  <title>Intl</title>

  <para>
   El valor por omisión del parámetro de <function>idn_to_ascii</function> y <function>idn_to_utf8</function> es ahora <constant>INTL_IDNA_VARIANT_UTS46</constant> en lugar del valor desaconsejado <constant>INTL_IDNA_VARIANT_2003</constant>.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.mysqli">
  <title>MySQLi</title>

  <para>
   La funcionalidad del servidor integrado ha sido eliminada. Ha estado rota desde al menos PHP 7.0.
  </para>
  <para>
   La propiedad no documentada <literal>mysqli::$stat</literal> ha sido eliminada en favor de <methodname>mysqli::stat</methodname>.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.openssl">
  <title>OpenSSL</title>

  <para>
   La función <function>openssl_random_pseudo_bytes</function> lanza una excepción en situaciones de error, similar a <function>random_bytes</function>. En particular, una <classname>Error</classname> es lanzada si el número de bytes solicitados es inferior o igual a cero, y una <classname>Exception</classname> es lanzada si no se puede recoger un carácter aleatorio suficiente. El argumento de salida <literal>$crypto_strong</literal> está garantizado de ser siempre &true; si la función no lanza una excepción, por lo que no es necesario verificarlo explícitamente.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.pcre">
  <title>Expresiones regulares (compatible Perl)</title>

  <para>
   Cuando se utiliza el modo <constant>PREG_UNMATCHED_AS_NULL</constant>, los grupos de captura no encontrados serán ahora también establecidos a &null; (o <literal>[null, -1]</literal> si la captura offset está activada). Esto significa que el tamaño de <literal>$matches</literal> será siempre el mismo.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.pdo">
  <title>PHP Data Objects</title>

  <para>
   Un intento de serialización de una instancia de <classname>PDO</classname> o <classname>PDOStatement</classname> generará ahora una <classname>Exception</classname> en lugar de una <classname>PDOException</classname>, compatible con otras clases internas que no soportan la serialización.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.reflection">
  <title>Reflection</title>

  <para>
   Los objetos Reflection generan ahora una excepción si se intenta serializarlos. La serialización de objetos Reflection nunca ha sido soportada y ha dado lugar a objetos Reflection corruptos. Ha sido explícitamente prohibido ahora.
  </para>

  <para>
   El valor de las constantes de clase de <classname>ReflectionClassConstant</classname>, <classname>ReflectionMethod</classname> y <classname>ReflectionProperty</classname> han sido cambiados.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.spl">
  <title>Biblioteca PHP estándar (SPL)</title>

  <para>
   La llamada <function>get_object_vars</function> en una instancia de <classname>ArrayObject</classname> devolverá siempre las propiedades del <classname>ArrayObject</classname> mismo (o de una subclase). Anteriormente, devolvía los valores del array/objeto a menos que el flag <constant>ArrayObject::STD_PROP_LIST</constant> hubiera sido especificado.
  </para>
  <para>
   Las otras operaciones afectadas son las siguientes:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <methodname>ReflectionObject::getProperties</methodname>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>reset</function>, <function>current</function>, etc. Utilizar en su lugar los métodos de <interfacename>Iterator</interfacename>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Potencialmente otras funciones que trabajan en las propiedades del objeto como una lista, e.g. <function>array_walk</function>.
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Las modificaciones de tipo <literal>(array)</literal> no están afectadas. Continuarán devolviendo ya sea el array envuelto, ya sea las propiedades <classname>ArrayObject</classname>, dependiendo de si el flag <constant>ArrayObject::STD_PROP_LIST</constant> es utilizado.
  </para>
  <para>
   <methodname>SplPriorityQueue::setExtractFlags</methodname> lanzará una excepción si se pasa cero. Anteriormente, esto generaría un error fatal recuperable en la próxima operación de extracción.
  </para>
  <para>
   <classname>ArrayObject</classname>, <classname>ArrayIterator</classname>, <classname>SplDoublyLinkedList</classname> y <classname>SplObjectStorage</classname> manejan ahora <literal>__serialize()</literal> y <literal>__unserialize()</literal> además de la interfaz <interfacename>Serializable</interfacename>. Esto significa que las cargas útiles de serialización creadas en versiones antiguas de PHP pueden seguir siendo deserializadas, pero las nuevas cargas útiles creadas por PHP 7.4 no serán compatibles con las versiones antiguas.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.tokenizer">
  <title>Tokenizer</title>

  <para>
   <function>token_get_all</function> emitirá ahora un token <constant>T-BAD-CHARACTER</constant> para caracteres inesperados en lugar de dejar agujeros en el flujo de tokens.
  </para>
 </sect2>

 <sect2 xml:id="migration74.incompatible.cookie-decode">
  <title>Cookies entrantes</title>

  <para>
   Desde PHP 7.4.11, los <emphasis>nombres</emphasis> de las cookies entrantes ya no son url-decodificados por razones de seguridad.
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
