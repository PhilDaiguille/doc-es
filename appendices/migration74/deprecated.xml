<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4642b715f374b4220884fa110b6529ac948799b5 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="migration74.deprecated">
 <title>Funcionalidades obsoletas</title>

 <sect2 xml:id="migration74.deprecated.core">
  <title>Núcleo de PHP</title>

  <sect3 xml:id="migration74.deprecated.core.nested-ternary">
   <title>Operadores ternarios anidados sin paréntesis explícitos</title>

   <para>
    Los operadores ternarios anidados deben utilizar explícitamente paréntesis para dictar el orden de las operaciones. Anteriormente, cuando se utilizaba sin paréntesis, la asociatividad a la izquierda no resultaba en el comportamiento esperado para la mayoría de los casos.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
1 ? 2 : 3 ? 4 : 5;   // obsoleto
(1 ? 2 : 3) ? 4 : 5; // ok
1 ? 2 : (3 ? 4 : 5); // ok
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
    Los paréntesis no son <emphasis>necesarios</emphasis> al anidar en el operando del medio ya que esto siempre es sin ambigüedad y no se ve afectado por la asociatividad:
    <informalexample>
     <programlisting role="php">
<![CDATA[
1 ? 2 ? 3 : 4 : 5 // ok
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.array-string-access-curly-brace">
   <title>Acceso a la posición de array y string utilizando llaves</title>

   <para>
    La sintaxis para acceder a la posición de &array; y &string; con llaves es obsoleta. Utilizar <literal>$var[$idx]</literal> en lugar de <literal>$var{$idx}</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.real">
   <title>El transtipado (real) y la función <function>is_real</function></title>

   <para>
    El transtipado <literal>(real)</literal> es obsoleto, utilizar <literal>(float)</literal> en su lugar.
   </para>
   <para>
    La función <function>is_real</function> también es obsoleta, utilizar <function>is_float</function> en su lugar.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.unbind-this">
   <title>Desligar <literal>$this</literal> cuando <literal>$this</literal> es utilizado</title>

   <para>
    Desligar <literal>$this</literal> de una clausura no estática que utiliza <literal>$this</literal> es obsoleto.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.parent">
   <title>Palabra clave <literal>parent</literal> sin clase padre</title>

   <para>
    El uso de <literal>parent</literal> dentro de una clase sin padre es obsoleto, y emitirá un error en la compilación en el futuro. Actualmente, solo se generará un error si/cuando un padre es accedido durante la ejecución.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.allow-url-include">
   <title>Opción INI allow_url_include</title>

   <para>
    La directiva INI <link linkend="ini.allow-url-include">allow_url_include</link> es obsoleta. Activarla generará un aviso de obsolescencia al inicio.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.invalid-base-characters">
   <title>Caracteres inválidos en las funciones de conversión de base</title>

   <para>
    Pasar caracteres inválidos a <function>base_convert</function>, <function>bindec</function>, <function>octdec</function> y <function>hexdec</function> generará ahora un aviso de obsolescencia. El resultado siempre se calculará como si los caracteres inválidos no existieran. Los caracteres de espaciado en blanco, así como los prefijos de tipo 0x (en función de la base) continúan siendo aceptados.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.array-key-exists-objects">
   <title>El uso de <function>array_key_exists</function> en objetos</title>

   <para>
    El uso de <function>array_key_exists</function> en objetos es obsoleto. En su lugar, <function>isset</function> o <function>property_exists</function> deberían ser utilizados.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.magic-quotes-functions">
   <title>Funciones de comillas mágicas</title>

   <para>
    Las funciones <function>get_magic_quotes_gpc</function> y <function>get_magic_quotes_runtime</function> son obsoletas. Siempre devuelven &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.hebrevc">
   <title>Función <function>hebrevc</function></title>

   <para>
    La función <function>hebrevc</function> es obsoleta. Puede ser reemplazada por <literal>nl2br(hebrev($str))</literal> o, preferiblemente, utilizando el soporte Unicode RTL (Derecha a Izquierda).
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.convert-cyr-string">
   <title>Función <function>convert_cyr_string</function></title>

   <para>
    La función <function>convert_cyr_string</function> es obsoleta. Puede ser reemplazada por una de <function>mb_convert_string</function>, <function>iconv</function> o <classname>UConverter</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.money-format">
   <title>Función <function>money_format</function></title>

   <para>
    La función <function>money_format</function> es obsoleta. Puede ser reemplazada por la funcionalidad intl <classname>NumberFormatter</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.ezmlm-hash">
   <title>Función <function>ezmlm_hash</function></title>

   <para>
    La función <function>ezmlm_hash</function> es obsoleta.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.restore-include-path">
   <title>Función <function>restore_include_path</function></title>

   <para>
    La función <function>restore_include_path</function> es obsoleta. Puede ser reemplazada por <literal>ini_restore('include_path')</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.implode-reverse-parameters">
   <title>Implode con el orden de parámetros histórico</title>

   <para>
    Pasar los parámetros a <function>implode</function> en el orden inverso es obsoleto, utilizar <literal>implode($glue, $parts)</literal> en lugar de <literal>implode($parts, $glue)</literal>.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration74.deprecated.com">
  <title>COM</title>

  <para>
   La importación de bibliotecas de tipo con el registro de constantes no sensibles a mayúsculas y minúsculas ha sido declarada obsoleta.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.filter">
  <title>Filtro</title>

  <para>
   <constant>FILTER_SANITIZE_MAGIC_QUOTES</constant> es obsoleto, utilizar <constant>FILTER_SANITIZE_ADD_SLASHES</constant> en su lugar.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.mbstring">
  <title>Cadenas Multi-octetos</title>

  <para>
   Pasar un patrón que no es una &string; a <function>mb_ereg_replace</function> es obsoleto. Actualmente, los patrones que no son &string; son interpretados como punto de código ASCII. En PHP 8, el patrón será interpretado como una &string; en su lugar.
  </para>
  <para>
   Pasar la codificación como tercer parámetro a <function>mb_strrpos</function> es obsoleto. En su lugar, pasar una posición de 0, y la codificación como cuarto parámetro.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.ldap">
  <title>Protocolo Ligero de Acceso a Directorios (LDAP)</title>

  <para>
   <function>ldap_control_paged_result_response</function> y <function>ldap_control_paged_result</function> son obsoletos. Los controles de paginación pueden ser enviados con <function>ldap_search</function> en su lugar.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.reflection">
  <title>Reflection</title>

  <para>
   La llamada a <methodname>ReflectionType::__toString</methodname> genera ahora un aviso de obsolescencia. Este método fue deprecado en favor de <methodname>ReflectionNamedType::getName</methodname> en la documentación a partir de PHP 7.1, pero no lanzaba un aviso de obsolescencia por razones técnicas.
  </para>
  <para>
   Los métodos <literal>export()</literal> en todas las clases <classname>Reflection</classname> son obsoletos. Crear un objeto <classname>Reflection</classname> y convertirlo en &string; en su lugar:
   <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
// ReflectionClass::export(Foo::class, false) es:
echo new ReflectionClass(Foo::class), "\n";

// $str = ReflectionClass::export(Foo::class, true) es:
$str = (string) new ReflectionClass(Foo::class);
?>
]]>
     </programlisting>
    </informalexample>
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.socket">
  <title>Socket</title>

  <para>
   Los flags <constant>AI_IDN_ALLOW_UNASSIGNED</constant> y <constant>AI_IDN_USE_STD3_ASCII_RULES</constant> para <function>socket_addrinfo_lookup</function> son obsoletos, debido a una deprecación en glibc.
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
