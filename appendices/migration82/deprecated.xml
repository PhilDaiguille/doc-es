<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 65716f4761484e314ee86fa23493f00f7823ace1 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration82.deprecated">
 <title>Funcionalidades obsoletas</title>

 <sect2 xml:id="migration82.deprecated.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration82.deprecated.core.dynamic-properties">
   <title>Uso de propiedades dinámicas</title>

   <para>
    La creación de propiedades dinámicas es obsoleta, a menos que la clase lo permita utilizando el atributo <code>#[\AllowDynamicProperties]</code>.
    <classname>stdClass</classname> permite las propiedades dinámicas.
    El uso de los métodos mágicos <link linkend="object.get">__get()</link>/<link linkend="object.set">__set()</link> no se ve afectado por este cambio.
    La advertencia de obsolescencia de las propiedades dinámicas puede ser abordada:

    <simplelist>
     <member>Declarando la propiedad (preferible).</member>
     <member>
      Añadiendo el atributo <code>#[\AllowDynamicProperties]</code> a la clase
      (que se aplica también a todas las clases hijas).
     </member>
     <member>
      Utilizando un <classname>WeakMap</classname> si se deben asociar datos adicionales a un objeto del cual no se es propietario.
     </member>
    </simplelist>
   </para>
  </sect3>

  <sect3 xml:id="migration82.deprecated.core.relative-callables">
   <title>Callables relativos</title>

   <para>
    Los callables que no son aceptados por la sintaxis <code>$callable()</code>
    (pero que son aceptados por <function>call_user_func</function>) son obsoletos.

    En particular:
    <simplelist>
     <member><code>"self::method"</code></member>
     <member><code>"parent::method"</code></member>
     <member><code>"static::method"</code></member>
     <member><code>["self", "method"]</code></member>
     <member><code>["parent", "method"]</code></member>
     <member><code>["static", "method"]</code></member>
     <member><code>["Foo", "Bar::method"]</code></member>
     <member><code>[new Foo, "Bar::method"]</code></member>
    </simplelist>

    Esto no afecta a los callables de método normales como
    <code>"A::method"</code> o <code>["A", "method"]</code>.
   </para>
   <!-- RFC: https://wiki.php.net/rfc/deprecate_partially_supported_callables -->
   <!-- RFC: https://wiki.php.net/rfc/partially-supported-callables-expand-deprecation-notices -->
  </sect3>

  <sect3 xml:id="migration82.deprecated.core.dollar-brace-interpolation">
   <title>Interpolación de estilo <code>"${var}"</code> y <code>"${expr}"</code>.</title>

   <para>
    Los estilos de interpolación de cadena <code>"${var}"</code> y <code>"${expr}"</code>
    son obsoletos.
    Utilice respectivamente <code>"$var"/"{$var}"</code> y <code>"{${expr}}"</code>.
    <!-- RFC: https://wiki.php.net/rfc/deprecate_dollar_brace_string_interpolation -->
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration82.deprecated.mbstring">
  <title>MBString</title>

  <para>
   El uso de los formatos <literal>QPrint</literal>, <literal>Base64</literal>,
   <literal>Uuencode</literal> y <literal>HTML-ENTITIES</literal>
   es obsoleto para todas las funciones MBString.

   A diferencia de todos los otros encodings de texto soportados por MBString,
   estos no codifican una secuencia de puntos de código Unicode, sino más bien una secuencia de bytes en bruto.
   Los valores de retorno de la mayoría de las funciones MBString no son claros
   cuando se especifica uno de estos no-encodings.
   Además, PHP tiene implementaciones distintas para cada uno de ellos;
   por ejemplo, los datos UUencoded pueden ser manejados utilizando
   <function>convert_uuencode</function>/<function>convert_uudecode</function>.
  </para>
 </sect2>

 <sect2 xml:id="migration82.deprecated.spl">
  <title>SPL</title>

  <para>
   El método interno <methodname>SplFileInfo::_bad_state_ex</methodname>
   ha sido declarado obsoleto.
  </para>
 </sect2>

 <sect2 xml:id="migration82.deprecated.standard">
  <title>Standard</title>

  <para>
  <function>utf8_encode</function> y <function>utf8_decode</function>
   han sido declaradas obsoletas.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
