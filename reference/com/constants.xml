<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 6585fbfcd7e4bcc2d2b24cfd78388b091803bac3 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<chapter xml:id="com.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="constant.clsctx-inproc-server">
   <term>
    <constant>CLSCTX_INPROC_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     El código que crea y gestiona los objetos de esta clase es una DLL que
     se ejecuta en el mismo proceso que el llamante de la función especificando
     el contexto de clase.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-inproc-handler">
   <term>
    <constant>CLSCTX_INPROC_HANDLER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     El código que gestiona los objetos de esta clase es un gestorador
     en proceso. Se trata de una DLL que se ejecuta en el proceso cliente
     e implementa las estructuras del lado cliente de esta clase cuando
     las instancias de la clase son accesibles a distancia.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-local-server">
   <term>
    <constant>CLSCTX_LOCAL_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     El código EXE que crea y gestiona los objetos de esta clase se ejecuta
     en la misma máquina pero se carga en un espacio de procesos distinto.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-remote-server">
   <term>
    <constant>CLSCTX_REMOTE_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Contexto distante. El código que crea y gestiona los objetos de esta clase
     se ejecuta en un ordenador diferente.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-server">
   <term>
    <constant>CLSCTX_SERVER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indica un código servidor, ya sea en proceso, local o distante. Esta
     definición hace un OU lógico entre <constant>CLSCTX_INPROC_SERVER</constant>,
     <constant>CLSCTX_LOCAL_SERVER</constant>, y
     <constant>CLSCTX_REMOTE_SERVER</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.clsctx-all">
   <term>
    <constant>CLSCTX_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indica todos los contextos de clase. Esta definición hace un OU lógico
     entre <constant>CLSCTX_INPROC_HANDLER</constant> y
     <constant>CLSCTX_SERVER</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-null">
   <term>
    <constant>VT_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Referencia de puntero NULL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-empty">
   <term>
    <constant>VT_EMPTY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Una propiedad con un indicador de tipo <constant>VT_EMPTY</constant> no tiene
     datos asociados; es decir, el tamaño del valor es cero.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-int">
   <term>
    <constant>VT_INT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valor entero signado de 4 bytes (equivalente a
     <constant>VT_I4</constant>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i1">
   <term>
    <constant>VT_I1</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero signado de 1 byte.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i2">
   <term>
    <constant>VT_I2</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Dos bytes representando un valor entero signado de 2 bytes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i4">
   <term>
    <constant>VT_I4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valor entero signado de 4 bytes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-i8">
   <term>
    <constant>VT_I8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valor entero signado de 8 bytes.
    </simpara>
    <simpara>
     Solo en x64.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-uint">
   <term>
    <constant>VT_UINT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero no signado de 4 bytes (equivalente a
     <constant>VT_UI4</constant>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui1">
   <term>
    <constant>VT_UI1</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero no signado de 1 byte.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui2">
   <term>
    <constant>VT_UI2</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero no signado de 2 bytes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui4">
   <term>
    <constant>VT_UI4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero no signado de 4 bytes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-ui8">
   <term>
    <constant>VT_UI8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero no signado de 8 bytes.
    </simpara>
    <simpara>
     Solo en x64
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-r4">
   <term>
    <constant>VT_R4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valor en coma flotante IEEE 32 bits.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-r8">
   <term>
    <constant>VT_R8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valor en coma flotante IEEE 64 bits.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-bool">
   <term>
    <constant>VT_BOOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Valor bool.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-error">
   <term>
    <constant>VT_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Código de error; contiene el código de estado asociado a
     el error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-cy">
   <term>
    <constant>VT_CY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Entero en complemento a dos de 8 bytes (escalado por 10 000).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-date">
   <term>
    <constant>VT_DATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un número en coma flotante de 64 bits representando el número de días
     (no de segundos) transcurridos desde el <literal>31 de diciembre de 1899</literal>.
     Por ejemplo, <literal>1 de enero de 1900</literal> es <literal>2,0</literal>,
     <literal>2 de enero de 1900</literal> es <literal>3,0</literal>, etc.
     Este valor se almacena en la misma representación que <constant>VT_R8</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-bstr">
   <term>
    <constant>VT_BSTR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Puntero hacia una cadena Unicode terminada por un carácter nulo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-decimal">
   <term>
    <constant>VT_DECIMAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Una estructura decimal.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-unknown">
   <term>
    <constant>VT_UNKNOWN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un puntero hacia un objeto que implementa la interfaz IUnknown.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-dispatch">
   <term>
    <constant>VT_DISPATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un puntero hacia un puntero hacia un objeto especificado.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-variant">
   <term>
    <constant>VT_VARIANT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un indicador de tipo seguido del valor correspondiente.
     <constant>VT_VARIANT</constant> puede ser utilizado únicamente con
     <constant>VT_BYREF</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-array">
   <term>
    <constant>VT_ARRAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si el indicador de tipo se combina con <constant>VT_ARRAY</constant>
     por un operador OU, el valor es un puntero hacia un
     <literal>SAFEARRAY</literal>. <constant>VT_ARRAY</constant>
     puede ser combinado por OU con los siguientes tipos de datos: <constant>VT_I1</constant>,
     <constant>VT_UI1</constant>, <constant>VT_I2</constant>, <constant>VT_UI2</constant>,
     <constant>VT_I4</constant>, <constant>VT_UI4</constant>, <constant>VT_INT</constant>,
     <constant>VT_UINT</constant>, <constant>VT_R4</constant>, <constant>VT_R8</constant>,
     <constant>VT_BOOL</constant>, <constant>VT_DECIMAL</constant>, <constant>VT_ERROR</constant>,
     <constant>VT_CY</constant>, <constant>VT_DATE</constant>, <constant>VT_BSTR</constant>,
     <constant>VT_DISPATCH</constant>, <constant>VT_UNKNOWN</constant> y
     <constant>VT_VARIANT</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.vt-byref">
   <term>
    <constant>VT_BYREF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si el indicador de tipo se combina con <constant>VT_BYREF</constant>
     por un operador OU, el valor es una referencia. Los tipos de referencia
     se interpretan como una referencia hacia datos, similar al tipo referencia en C++.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-acp">
   <term>
    <constant>CP_ACP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Página de código ANSI por omisión.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-maccp">
   <term>
    <constant>CP_MACCP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Página de código Macintosh.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-oemcp">
   <term>
    <constant>CP_OEMCP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Página de código OEM por omisión.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-utf7">
   <term>
    <constant>CP_UTF7</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Unicode (UTF-7).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-utf8">
   <term>
    <constant>CP_UTF8</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Unicode (UTF-8).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-symbol">
   <term>
    <constant>CP_SYMBOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Traducciones <literal>SYMBOL</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.cp-thread-acp">
   <term>
    <constant>CP_THREAD_ACP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Página de código ANSI del hilo actual.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-lt">
   <term>
    <constant>VARCMP_LT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     El <literal>bstr</literal> de la izquierda es inferior al
     <literal>bstr</literal> de la derecha.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-eq">
   <term>
    <constant>VARCMP_EQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Los dos parámetros son iguales.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-gt">
   <term>
    <constant>VARCMP_GT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     El <literal>bstr</literal> de la izquierda es superior al
     <literal>bstr</literal> de la derecha.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.varcmp-null">
   <term>
    <constant>VARCMP_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Una de las expresiones es NULL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorecase">
   <term>
    <constant>NORM_IGNORECASE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorar la sensibilidad a la casse.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorenonspace">
   <term>
    <constant>NORM_IGNORENONSPACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorar los caracteres sin chasse.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignoresymbols">
   <term>
    <constant>NORM_IGNORESYMBOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorar los símbolos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorewidth">
   <term>
    <constant>NORM_IGNOREWIDTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorar la anchura de cadena.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorekanatype">
   <term>
    <constant>NORM_IGNOREKANATYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorar el tipo Kana.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.norm-ignorekashida">
   <term>
    <constant>NORM_IGNOREKASHIDA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ignorar los caracteres kashida en árabe.
    </simpara>
    <simpara>
     La disponibilidad depende de la biblioteca subyacente.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-divbyzero">
   <term>
    <constant>DISP_E_DIVBYZERO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un error de retorno que indica una división por cero.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-overflow">
   <term>
    <constant>DISP_E_OVERFLOW</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un error que indica que un valor no ha podido ser convertido
     en su representación esperada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-badindex">
   <term>
    <constant>DISP_E_BADINDEX</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un error que indica que un índice de array no existe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.disp-e-paramnotfound">
   <term>
    <constant>DISP_E_PARAMNOTFOUND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Un valor de retorno que indica que uno de los ID de parámetro
     no corresponde a un parámetro del método.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.mk-e-unavailable">
   <term>
    <constant>MK_E_UNAVAILABLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Código de estado iMoniker COM, devuelto en errores donde la llamada
     de función ha fallado debido a una indisponibilidad.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.locale-neutral">
   <term>
    <constant>LOCALE_NEUTRAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     La configuración local neutra. Esta constante generalmente no se utiliza
     durante las llamadas a las API NLS. Utilizar en su lugar LOCALE_SYSTEM_DEFAULT.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.locale-system-default">
   <term>
    <constant>LOCALE_SYSTEM_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     La configuración local por omisión del sistema operativo.
    </simpara>
   </listitem>
  </varlistentry>
</variablelist>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
