<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 20216b916ed583938672cd09c2c2f430351430d1 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.com-event-sink" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>com_event_sink</refname>
  <refpurpose>Conecta eventos de un objeto COM a un objeto PHP</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>com_event_sink</methodname>
   <methodparam><type>variant</type><parameter>variant</parameter></methodparam>
   <methodparam><type>object</type><parameter>sink_object</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>sink_interface</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Conecta eventos del objeto COM
   <parameter>variant</parameter> a un objeto PHP
   <parameter>sink_object</parameter>.
  </para>
  <para>
   Sea prudente al utilizar esta funcionalidad;
   si se hace algo similar al ejemplo
   a continuación, no tiene sentido ejecutarlo en un servidor web.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>variant</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sink_object</parameter></term>
     <listitem>
      <para>
       <parameter>sink_object</parameter> debe ser una instancia de la clase
       con nombres de métodos que sigan el dispinterface deseado; se debe utilizar <function>com_print_typeinfo</function> para ayudar a generar una plantilla de clase para esto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sink_interface</parameter></term>
     <listitem>
      <para>
       PHP debe ser capaz de utilizar el tipo por defecto de dispinterface
       especificado por la Typelib asociada con el objeto <parameter>variant</parameter>,
       pero se puede cambiar esto especificando en el parámetro
       <parameter>sink_interface</parameter> el dispinterface que se desea utilizar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>sink_interface</parameter> ahora es nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de conexiones de eventos COM</title>
    <programlisting role="php">
<![CDATA[
<?php
class IEEventSinker {
    var $terminated = false;

   function ProgressChange($progress, $progressmax) {
      echo "Progreso de la descarga: $progress / $progressmax\n";
    }

    function DocumentComplete(&$dom, $url) {
      echo "Documento $url terminado\n";
    }

    function OnQuit() {
      echo "¡Salir!\n";
      $this->terminated = true;
    }
}
$ie = new COM("InternetExplorer.Application");
$sink = new IEEventSinker();
com_event_sink($ie, $sink, "DWebBrowserEvents2");
$ie->Visible = true;
$ie->Navigate("http://www.example.org");
while(!$sink->terminated) {
  com_message_pump(4000);
}
$ie = null;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Antes de PHP 8.0.0,
    llamar a <function>exit</function> desde cualquier gestor de eventos no es soportado, y puede causar que PHP se bloquee. Esto puede evitarse lanzando una excepción desde un gestor de eventos, capturando la excepción en el código principal, y llamando a <function>exit</function> allí.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>com_print_typeinfo</function></member>
    <member><function>com_message_pump</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
