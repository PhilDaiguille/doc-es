<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 20216b916ed583938672cd09c2c2f430351430d1 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.com-get-active-object" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com_get_active_object</refname>
  <refpurpose>Devuelve un objeto que representa la instancia actual de un objeto COM</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>variant</type><methodname>com_get_active_object</methodname>
   <methodparam><type>string</type><parameter>prog_id</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>codepage</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>com_get_active_object</function> es similar a la creación de una
   nueva instancia <xref linkend="class.com"/> de un objeto COM, excepto que solo
   devolverá un objeto al script si el objeto está actualmente instanciado. Las aplicaciones OLE utilizan algo conocido como
   "<literal>Running Object Table</literal>" que permite a las aplicaciones conocidas
   ser ejecutadas solo una vez; esta función expone la función
   GetActiveObject() de la biblioteca COM para recuperar un objeto de una instancia en uso.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prog_id</parameter></term>
     <listitem>
      <para>
       El parámetro <parameter>prog_id</parameter> debe ser el ProgID o el
       CLSID del objeto al que se desea acceder (por ejemplo,
       <literal>Word.Application</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>codepage</parameter></term>
     <listitem>
      <para>
       utiliza las mismas reglas que en la <xref linkend="class.com"/> clase.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si el objeto solicitado está en ejecución, la función devolverá
   al script lo que cualquier otro objeto COM devolvería.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Hay muchas razones por las cuales esta función puede fallar. En
   esta situación, el código de error de la excepción debería ser
   <constant>MK_E_UNAVAILABLE</constant>; se puede utilizar el método
   <literal>getCode</literal> del objeto excepción para verificar el código de la excepción.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>codepage</parameter> es ahora nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Utilizar la función <function>com_get_active_object</function> en un servidor
    web no siempre es la mejor idea. La mayoría de las aplicaciones COM/OLE no están diseñadas para manejar más de un cliente concurrente, como
    (¡¡y especialmente!!) Microsoft Office. Se debe leer las <link
    xlink:href="&url.msoffice.serverside;">consideraciones para los
    automatismos lado-servidor para Office</link>
    para obtener más información sobre los comportamientos generales.
   </para>
  </warning>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
