<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes Maintainer: Marqitos -->
<refentry xml:id="function.pg-escape-bytea" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_escape_bytea</refname>
  <refpurpose>
   Protege una cadena para insertarla en un campo bytea
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>pg_escape_bytea</methodname>
   <methodparam choice="opt"><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_escape_bytea</function> protege los caracteres de la
   cadena <parameter>data</parameter> con el modo bytea. La cadena
   protegida es devuelta.
  </para>
  <note>
   <para>
    Cuando se utiliza una orden <literal>SELECT</literal> con datos de tipo bytea,
    PostgreSQL devuelve valores octales, prefijados con antislashs
    '\' (por ejemplo \032). Los usuarios deben realizar la conversión al
    formato binario manualmente.
   </para>
   <para>
    <function>pg_escape_bytea</function> requiere PostgreSQL 7.2 o más reciente. Con
    PostgreSQL 7.2.0 y 7.2.1, los datos bytea deben ser transtipados
    cuando se activa el soporte de strings multioctetos.
    Es decir, <literal>INSERT INTO test_table (image) VALUES ('$image_escaped'::bytea);</literal>.
    PostgreSQL 7.2.2 o más reciente no requiere esta manipulación.
    Sin embargo, si el cliente y el servidor no utilizan el mismo juego de caracteres,
    pueden ocurrir errores. Entonces, se debe forzar el transtipado
    manualmente.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection-with-unspecified-default;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Una &string; que contiene texto o datos binarios que serán
       insertados en la columna bytea.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una &string; que contiene los datos escapados.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_escape_bytea</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Conexión a la base de datos
$dbconn = pg_connect('dbname=foo');

// Lectura de un fichero binario
$data = file_get_contents('image1.jpg');

// Escapado de los datos binarios
$escaped = pg_escape_bytea($data);

// Inserción en la base de datos
pg_query("INSERT INTO gallery (name, data) VALUES ('Pine trees', '{$escaped}')");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_unescape_bytea</function></member>
    <member><function>pg_escape_string</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
