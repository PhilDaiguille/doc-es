<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.parallel-channel" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase parallel\Channel</title>
 <titleabbrev>parallel\Channel</titleabbrev>

 <partintro>
  <section>
    <title>canales no tamponados</title>
    <para>
     Un canal no tamponado bloqueará las llamadas a <methodname>parallel\Channel::send</methodname> hasta que haya un receptor, y bloqueará las llamadas a
     <methodname>parallel\Channel::recv</methodname> hasta que haya un emisor. Esto significa que un canal no tamponado no es solo un medio para compartir datos entre las tareas
     sino también un método simple de sincronización.
    </para>
    <para>
     Un canal no tamponado es la forma más rápida de compartir datos entre las tareas, requiriendo la menor cantidad de copias.
    </para>
  </section>

  <section>
    <title>canales tamponados</title>
    <para>
     Un canal tamponado no bloqueará las llamadas a <methodname>parallel\Channel::send</methodname> hasta que se alcance la capacidad, las llamadas a
     <methodname>parallel\Channel::recv</methodname> bloquearán hasta que haya datos en el búfer.
    </para>
  </section>

  <section>
    <title>Cierres en los canales</title>
    <para>
     Una funcionalidad poderosa de los canales paralelos es que permiten el intercambio de cierres entre las tareas (y los entornos de ejecución).
    </para>
    <para>
     Cuando un cierre es enviado a través de un canal, el cierre es tamponado, esto no cambia el búfer del canal que transmite el cierre,
     pero afecta el ámbito estático dentro del cierre: el mismo cierre enviado a diferentes ejecuciones, o a la misma ejecución,
     no compartirá su ámbito estático.
    </para>
    <para>
     Esto significa que cada vez que un cierre es ejecutado y ha sido transmitido por un canal, el estado estático será el mismo que cuando el cierre fue tamponado.
    </para>
  </section>

  <section>
   <title>canales anónimos</title>
   <para>
    La construcción de canales anónimos permite al desarrollador evitar asignar nombres a cada canal: parallel generará un nombre único para los canales anónimos.
   </para>
  </section>

  <section xml:id="parallel-channel.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>parallel\Channel</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>final</modifier>
      <classname>parallel\Channel</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">Constructores anónimos</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.parallel-channel')/db:refentry/db:refsect1[@audience='anonymous']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>

    <classsynopsisinfo role="comment">Acceso</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.parallel-channel')/db:refentry/db:refsect1[@audience='access']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>

    <classsynopsisinfo role="comment">Compartir</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.parallel-channel')/db:refentry/db:refsect1[@audience='sharing']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>

    <classsynopsisinfo role="comment">Cerrar</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.parallel-channel')/db:refentry/db:refsect1[@audience='close']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>

    <classsynopsisinfo role="comment">Constantes para el tamponamiento infinito</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <varname>Infinite</varname>
    </fieldsynopsis>

   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 &reference.parallel.parallel.channel.construct;
 &reference.parallel.parallel.channel.make;
 &reference.parallel.parallel.channel.open;
 &reference.parallel.parallel.channel.recv;
 &reference.parallel.parallel.channel.send;
 &reference.parallel.parallel.channel.close;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
