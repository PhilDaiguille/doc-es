<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 990521c9ca64fe7d83016a613b850177d3a90776 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="luasandbox.registerlibrary" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LuaSandbox::registerLibrary</refname>
  <refpurpose>Registra un conjunto de funciones PHP como una biblioteca Lua</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>LuaSandbox::registerLibrary</methodname>
   <methodparam><type>string</type><parameter>libname</parameter></methodparam>
   <methodparam><type>array</type><parameter>functions</parameter></methodparam>
  </methodsynopsis>
  <para>
   Registra un conjunto de funciones PHP como una biblioteca Lua, de modo que Lua pueda
   llamar al código PHP correspondiente.
  </para>
  <para>
   Para más información sobre la llamada de funciones Lua y los valores de retorno,
   ver <methodname>LuaSandboxFunction::call</methodname>.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>libname</parameter></term>
    <listitem>
     <para>
      El nombre de la biblioteca. En el estado Lua, la variable global de este
      nombre se definirá en la tabla de funciones. Si la tabla ya existe,
      las nuevas funciones se añadirán a ella.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>functions</parameter></term>
    <listitem>
     <para>
      Un <type>array</type>, donde cada clave es un nombre de función, y cada valor es un
      <type>callable</type> PHP correspondiente.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Registro de funciones PHP para ser llamadas desde Lua</title>
    <programlisting role="php">
<![CDATA[
<?php

// crear un nuevo LuaSandbox
$sandbox = new LuaSandbox();

// Registrar algunas funciones en el entorno Lua

function frobnosticate( $v ) {
    return [ $v + 42 ];
}

$sandbox->registerLibrary( 'php', [
    'frobnosticate' => 'frobnosticate',
    'output' => function ( $string ) {
        echo "$string\n";
    },
    'error' => function () {
        throw new LuaSandboxRuntimeError( "Something is wrong" );
    }
] );

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>LuaSandbox::loadString</methodname></member>
    <member><methodname>LuaSandbox::wrapPhpFunction</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
