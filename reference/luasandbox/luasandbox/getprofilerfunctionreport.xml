<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="luasandbox.getprofilerfunctionreport" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LuaSandbox::getProfilerFunctionReport</refname>
  <refpurpose>Recupera los datos del perfilador</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>LuaSandbox::getProfilerFunctionReport</methodname>
   <methodparam choice="opt"><type>int</type><parameter>units</parameter><initializer>LuaSandbox::SECONDS</initializer></methodparam>
  </methodsynopsis>
  <para>
   Para una instancia de perfilado previamente iniciada por
   <methodname>LuaSandbox::enableProfiler</methodname>, recupera un
   informe del costo de cada función.
  </para>
  <para>
   La medición del costo se determina por el argumento
   <varname>$units</varname>:
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>LuaSandbox::SAMPLES</constant></term>
     <listitem><para>Medición en número de muestras.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>LuaSandbox::SECONDS</constant></term>
     <listitem><para>Medición en segundos de tiempo CPU.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>LuaSandbox::PERCENT</constant></term>
     <listitem><para>Medición en porcentaje de tiempo CPU.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>units</parameter></term>
    <listitem>
     <para>
      La unidad de medida constante.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve las mediciones del perfilador, ordenadas en orden descendente, en forma
   de un array asociativo. Las claves son los nombres de las funciones Lua (con el fichero fuente y la línea
   definidos entre corchetes angulares), los valores son las mediciones en <type>int</type>
   o <type>float</type>.
  </para>
  <note>
   <para>
    En Windows, esta función siempre devuelve cero. En los sistemas operativos que no soportan <constant>CLOCK_THREAD_CPUTIME_ID</constant>,
    como FreeBSD y Mac OS X, esta función devolverá el tiempo transcurrido
    en el reloj, no el tiempo CPU.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Perfilado de código Lua</title>
    <programlisting role="php">
<![CDATA[
<?php

// crear un nuevo LuaSandbox
$sandbox = new LuaSandbox();

// Inicia el perfilador
$sandbox->enableProfiler( 0.01 );

// ... Ejecute código Lua aquí ...

// Recupera los datos del perfilador
$data = $sandbox->getProfilerFunctionReport();

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
