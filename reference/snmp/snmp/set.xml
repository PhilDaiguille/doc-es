<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 888d70d7d21713f7f52d497e627543dfb41fc103 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="snmp.set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SNMP::set</refname>
  <refpurpose>Define el valor de un objeto SNMP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;

  <methodsynopsis role="SNMP">
   <modifier>public</modifier> <type>bool</type><methodname>SNMP::set</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>objectId</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>type</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Solicita al agente remoto <acronym>SNMP</acronym> que defina el valor
   de uno o varios objetos SNMP especificados por su identificador
   <parameter>objectId</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <para>
    Si <parameter>objectId</parameter> es un &string;, entonces
    los parámetros <parameter>type</parameter> y <parameter>value</parameter>
    deben ser también un &string;. Si <parameter>objectId</parameter>
    es un &array;, el parámetro <parameter>value</parameter> debe ser un
    array de igual tamaño que contenga los valores correspondientes, y el
    parámetro <parameter>type</parameter> podrá ser un &string; (su valor será utilizado para todas las parejas
    <parameter>objectId</parameter>-<parameter>value</parameter>) o bien
    un array de igual tamaño con pares OID-valor. Cuando se proporciona
    otra combinación de parámetros, pueden emitirse alertas de nivel
    E_WARNING con una descripción detallada.
   </para>
   <varlistentry>
    <term><parameter>objectId</parameter></term>
    <listitem>
     <para>
      El identificador del objeto SNMP.
     </para>
     <para>
      Cuando el número de OIDs en el array object_id es superior
      a la propiedad max_oids del objeto, el método deberá utilizar varias
      solicitudes para realizar las actualizaciones solicitadas. En este caso,
      la verificación del tipo y del valor se realiza por partes,
      por lo que la segunda solicitud (y otras sub-solicitudes) fallará
      debido a un tipo o valor incorrecto para el OID solicitado.
      Para detectar este comportamiento, se emite una alerta cuando el número
      de OIDs en el array object_id es superior a la propiedad max_oids.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     &snmp.set.type.values;
     &snmp.set.type.values.asn.mapping;
     &snmp.set.type.values.equal.note;
     &snmp.set.type.values.bitset.note;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      El nuevo valor.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 &snmp.methods.exceptions_enable.refsect;

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="snmp.set.example.basic">
   <title>Define un solo identificador de objeto <acronym>SNMP</acronym></title>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP_VERSION_2C, "127.0.0.1", "private");
  $session->set('SNMPv2-MIB::sysContact.0', 's', "Nobody");
?>
]]>
   </programlisting>
  </example>
  <example xml:id="snmp.set.example.multiple">
   <title>Define varios valores utilizando una sola llamada al método <methodname>SNMP::set</methodname>
    call</title>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP_VERSION_2C, "127.0.0.1", "private");
  $session->set(array('SNMPv2-MIB::sysContact.0', 'SNMPv2-MIB::sysLocation.0'), array('s', 's'), array("Nobody", "Nowhere"));
// o
  $session->set(array('SNMPv2-MIB::sysContact.0', 'SNMPv2-MIB::sysLocation.0'), 's', array("Nobody", "Nowhere"));
?>
]]>
   </programlisting>
  </example>
  <example xml:id="snmp.set.example.bits">
   <title>Ejemplo con <methodname>SNMP::set</methodname> para configurar el identificador de objeto <acronym>SNMP</acronym> BITS</title>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP_VERSION_2C, "127.0.0.1", "private");
  $session->set('FOO-MIB::bar.42', 'b', '0 1 2 3 4');
// o
  $session->set('FOO-MIB::bar.42', 'x', 'F0');
?>
 ]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SNMP::get</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
