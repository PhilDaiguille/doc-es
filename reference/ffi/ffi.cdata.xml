<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 45c797bd7413baed39367e79d82867cb943e76c4 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.ffi-cdata" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Gestor de datos C</title>
 <titleabbrev>FFI\CData</titleabbrev>

 <partintro>

  <!-- {{{ FFI\CData intro -->
  <section xml:id="ffi-cdata.intro">
   &reftitle.intro;
   <para>
    Los objetos <classname>FFI\CData</classname> pueden ser utilizados de diferentes maneras, como datos PHP normales:
    <itemizedlist>
     <listitem>
      <simpara>
       Los datos C de tipo escalar pueden ser leídos y asignados a través de la propiedad <property>$cdata</property>, por ejemplo.
       <code>$x = FFI::new('int'); $x-&gt;cdata = 42;</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los campos de tipo struct y union pueden ser accedidos como propiedades de objetos PHP ordinarios, por ejemplo
       <code>$cdata-&gt;field</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los elementos de un array C son accesibles como los elementos de un array PHP, por ejemplo.
       <code>$cdata[$offset]</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los arrays C pueden ser iterados utilizando instrucciones &foreach;.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los arrays C pueden ser utilizados como argumentos de <function>count</function>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los punteros C pueden ser desreferenciados como arrays, por ejemplo <code>$cdata[0]</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los punteros C pueden ser comparados utilizando operadores de comparación ordinarios (<code>&lt;</code>,
       <code>&lt;=</code>, <code>==</code>, <code>!=</code>, <code>&gt;=</code>, <code>&gt;</code>).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los punteros C pueden ser incrementados y decrementados utilizando operaciones ordinarias ( <code>+</code>/<code>-</code>/ / ).
       <code>++</code>/<code>--</code>, por ejemplo <code>$cdata += 5</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los punteros C pueden ser sustraídos de otro utilizando operaciones ordinarias <code>-</code>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Los punteros C hacia funciones pueden ser llamados como una clausura PHP clásica, por ejemplo <code>$cdata()</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Cualquier dato C puede ser duplicado utilizando el operador <link linkend="language.oop5.cloning">clone</link>,
       por ejemplo <code>$cdata2 = clone $cdata;</code>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Todos los datos C pueden ser visualizados utilizando <function>var_dump</function>, <function>print_r</function>, etc.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>FFI\CData</classname> puede ahora ser atribuido a estructuras y campos a partir de PHP 8.3.0.
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <simpara>
      Las limitaciones notables son que las instancias de <classname>FFI\CData</classname> no soportan las funciones
      <function>isset</function>, <function>empty</function> y <function>unset</function>,
      y que las structs y unions C envueltas no implementan <interfacename>Traversable</interfacename>.
     </simpara>
    </note>
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="ffi-cdata.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <modifier>final</modifier>
     <classname>FFI\CData</classname>
    </ooclass>
   </classsynopsis>
   <!-- }}} -->

  </section>

  <section role="changelog">
   &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        <classname>FFI\CData</classname> puede ahora ser atribuido a estructuras y campos.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </section>

 </partintro>

 <!-- &reference.ffi.entities.ffi-cdata; -->

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
