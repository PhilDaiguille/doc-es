<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d76a7fe17dd2488e47d664a8ab38e161b13ac843 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.sodium-crypto-stream-xchacha20-xor-ic" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sodium_crypto_stream_xchacha20_xor_ic</refname>
  <refpurpose>Cifra un mensaje utilizando un nonce y una clave secreta (sin autenticación)</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sodium_crypto_stream_xchacha20_xor_ic</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>message</parameter></methodparam>
   <methodparam><type>string</type><parameter>nonce</parameter></methodparam>
   <methodparam><type>int</type><parameter>counter</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>key</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función es similar a <function>sodium_crypto_stream_xchacha20_xor</function>
   pero añade la posibilidad de establecer el valor inicial del contador de bloques a un valor distinto de cero.
   Esto permite acceder directamente a cualquier bloque sin tener que calcular los anteriores.
  </para>

  <caution>
   <para>
    Este cifrado no está autenticado y no previene los ataques de texto cifrado elegido.
    Asegúrese de combinar el texto cifrado con un código de autenticación de mensaje,
    por ejemplo, con la función <function>sodium_crypto_aead_xchacha20poly1305_ietf_encrypt</function>,
    o <function>sodium_crypto_auth</function>.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>message</parameter></term>
    <listitem>
     <para>
      El mensaje a cifrar.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>nonce</parameter></term>
    <listitem>
     <para>
      Un nonce de 24 bytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>counter</parameter></term>
    <listitem>
     <para>
      El valor inicial del contador de bloques.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
      Clave, posiblemente generada por la función <function>sodium_crypto_stream_xchacha20_keygen</function>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El texto cifrado, o &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>sodium_crypto_stream_xchacha20_xor_ic</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$n2 = random_bytes(SODIUM_CRYPTO_STREAM_XCHACHA20_NONCEBYTES);
$left  = str_repeat("\x01", 64);
$right = str_repeat("\xfe", 64);

// Todo en una vez:
$stream7_unified = sodium_crypto_stream_xchacha20_xor($left . $right, $n2, $key);

// Por partes, con un contador inicial:
$stream7_left  = sodium_crypto_stream_xchacha20_xor_ic($left, $n2, 0, $key);
$stream7_right = sodium_crypto_stream_xchacha20_xor_ic($right, $n2, 1, $key);
$stream7_concat = $stream7_left . $stream7_right;

var_dump(strlen($stream7_concat));
var_dump($stream7_unified === $stream7_concat);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
int(128)
bool(true)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sodium_crypto_stream_xchacha20_xor</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
