<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.quickhashinthash" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase QuickHashIntHash</title>
 <titleabbrev>QuickHashIntHash</titleabbrev>

 <partintro>

<!-- {{{ QuickHashIntHash intro -->
  <section xml:id="quickhashinthash.intro">
   &reftitle.intro;
   <para>
    Esta clase envuelve un hash que contiene números enteros, donde los
    valores son también números enteros. Los hashes están disponibles como
    implementación de la interfaz <interfacename>ArrayAccess</interfacename>.
   </para>
   <para>
    Los hashes pueden ser iterados con <link linkend="control-structures.foreach"><literal>foreach</literal></link> ya que la interfaz <interfacename>Iterator</interfacename> está
    también implementada. El orden en el que los elementos son devueltos no está
    garantizado.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="quickhashinthash.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>QuickHashIntHash</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>QuickHashIntHash</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashinthash.constants.check-for-dupes">QuickHashIntHash::CHECK_FOR_DUPES</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashinthash.constants.do-not-use-zend-alloc">QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashinthash.constants.hasher-no-hash">QuickHashIntHash::HASHER_NO_HASH</varname>
     <initializer>256</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashinthash.constants.hasher-jenkins1">QuickHashIntHash::HASHER_JENKINS1</varname>
     <initializer>512</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="quickhashinthash.constants.hasher-jenkins2">QuickHashIntHash::HASHER_JENKINS2</varname>
     <initializer>1024</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.quickhashinthash')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ QuickHashIntHash constants -->
  <section xml:id="quickhashinthash.constants">
   &reftitle.constants;
   <variablelist>

    <varlistentry xml:id="quickhashinthash.constants.check-for-dupes">
     <term><constant>QuickHashIntHash::CHECK_FOR_DUPES</constant></term>
     <listitem>
      <para>Si está activado, la adición de elementos duplicados a un hash (vía <methodname>QuickHashIntHash::add</methodname> o
      <methodname>QuickHashIntHash::loadFromFile</methodname>) resultará en la eliminación de estos elementos del
      hash. Esto tomará más tiempo, por lo que úselo solo si es necesario.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashinthash.constants.do-not-use-zend-alloc">
     <term><constant>QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC</constant></term>
     <listitem>
      <para>Desactiva el uso del gestor de memoria interno de PHP para las estructuras de juego internas.
      Con esta opción activada, las asignaciones internas no contarán en
      los parámetros <link linkend="ini.memory-limit">memory_limit</link>.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashinthash.constants.hasher-no-hash">
     <term><constant>QuickHashIntHash::HASHER_NO_HASH</constant></term>
     <listitem>
      <para>Selecciona no usar una función de hash, sino simplemente usar un módulo para encontrar el índice de la lista de cubos. Esto no es más rápido que el hash normal, y
      da más colisiones.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashinthash.constants.hasher-jenkins1">
     <term><constant>QuickHashIntHash::HASHER_JENKINS1</constant></term>
     <listitem>
      <para>Esta es la función de hash por defecto para transformar los hashes enteros
      en índice de lista de cubos.</para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="quickhashinthash.constants.hasher-jenkins2">
     <term><constant>QuickHashIntHash::HASHER_JENKINS2</constant></term>
     <listitem>
      <para>Selecciona un algoritmo de hash de variante.</para>
     </listitem>
    </varlistentry>

   </variablelist>
  </section>
<!-- }}} -->

 </partintro>

 &reference.quickhash.entities.quickhashinthash;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
