<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d72f13eaf9e06715ae68eac72aa3fd6ae83eb78 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.win32-start-service-ctrl-dispatcher" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>win32_start_service_ctrl_dispatcher</refname>
  <refpurpose>Registra un script con SCM, por lo que puede ser interpretado como un servicio con el nombre dado</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>win32_start_service_ctrl_dispatcher</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>gracefulMode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cuando se ejecuta a través del Gestionador de Control de Servicio, un proceso de
   servicio debe "registrarse" con él para establecer un servicio de supervisión y
   comunicación eficiente. Esta función realiza el registro iniciando un hilo para
   manejar las comunicaciones de bajo nivel con el Gestionador de Control de Servicio.
  </para>
  <para>
   Una vez iniciado, el proceso del servicio debe hacer dos cosas. La primera es
   informar al Service Control Manager que el servicio está en ejecución. La segunda
   es llamar a la función <function>win32_set_service_status</function> con la constante
   <constant>WIN32_SERVICE_RUNNING</constant>. Si necesita lanzar procesos largos antes
   de que el servicio se inicie, puede usar la constante
   <constant>WIN32_SERVICE_START_PENDING</constant>. La segunda es continuar
   verificando con el Service Control Manager para determinar si el servicio se
   detiene o no. Esto implica llamar periódicamente a la función
   <function>win32_get_last_control_message</function> y tratar el código devuelto.
  </para>

  <caution>
   <para>
    Desde la versión 0.2.0, esta función solo funciona en línea de
    comandos. Está deshabilitada en otros casos.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       El nombre corto del servicio, como se registra con
       <function>win32_create_service</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>gracefulMode</parameter></term>
     <listitem>
      <para>
       &true; para la salida correcta. &false; para la salida con error. Consulte
       <function>win32_set_service_exit_mode</function> para más detalles.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
  <para>
    Antes de la versión 1.0.0, &win32service.noerror.false.error;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Antes de la versión 1.0.0, si esta función se utiliza fuera del SAPI <literal>"cli"</literal>, se emitirá
   un error <constant>E_ERROR</constant>.
  </para>
  <para>
   A partir de la versión 1.0.0, lanzará una
   <classname>Win32ServiceException</classname> si el SAPI no es
   <literal>"cli"</literal>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Lanza una <classname>ValueError</classname> si un argumento es inválido,
        anteriormente &false; era retornado.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        Lanza una <classname>Win32ServiceException</classname> en caso de error,
        anteriormente un
        <link xmlns="http://docbook.org/ns/docbook" linkend="win32service.constants.errors">Código de error Win32</link>
        era retornado.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        El tipo de retorno es ahora <type>void</type>, anteriormente era <type>mixed</type>.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.4.0</entry>
       <entry>
        Se añadió el argumento <parameter>gracefulMode</parameter>.
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.2.0</entry>
       <entry>
        Esta función solo funciona en línea de
        comandos.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>win32_start_service_ctrl_dispatcher</function></title>
    <para>
     Verifica si el servicio funciona bajo SCM.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (!win32_start_service_ctrl_dispatcher('dummyphp')) {
  die("Probablemente no estoy funcionando bajo el Gestionador de Control de Servicio");
}

win32_set_service_status(WIN32_SERVICE_START_PENDING);

// Algunos procesos largos a recuperar mientras el servicio funciona.

win32_set_service_status(WIN32_SERVICE_RUNNING);

while (WIN32_SERVICE_CONTROL_STOP != win32_get_last_control_message()) {
  # Realice su trabajo aquí.
  # Intente no tomar más de 30 segundos antes de devolver.
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>win32_set_service_status</function></member>
    <member><function>win32_get_last_control_message</function></member>
    <member><function>win32_set_service_exit_mode</function></member>
    <member><function>win32_set_service_exit_code</function></member>
    <member>Los <link linkend="win32service.constants.errors">códigos de error Win32</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
