<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e8ac70bf549a723cb36465667a6109d9933b8619 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<!-- State: experimental -->
<book xml:id="book.parle" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="pecl" ?>
 <title>Análisis léxico y sintáctico</title>
 <titleabbrev>Parle</titleabbrev>

 <preface xml:id="intro.parle">
  &reftitle.intro;
  <para>
   &warn.experimental;
   La extensión parle proporciona facilidades de lexing y parsing de uso general. La implementación se basa en las bibliotecas de <link xlink:href="&url.parle.lib;">estas librerías</link> y requiere un compilador compatible con <link xlink:href="&url.c14;">C++14</link>. El análisis léxico se basa en la correspondencia regex, el análisis sintáctico es LALR(1). Los analizadores se generan sobre la marcha y pueden ser utilizados inmediatamente después de haber sido finalizados. Parle maneja el análisis léxico y sintáctico, la representación y el tratamiento de las estructuras de datos apropiadas son tarea del implementador. La serialización y la generación de código no son soportadas por la extensión, por el momento.
  </para>
  <para>
   El analizador léxico es un proceso de división de una secuencia de caracteres en una lista de lexemas. La lista de lexemas puede ser utilizada posteriormente para el análisis sintáctico en relación con una gramática formal. Estas operaciones también son conocidas como análisis léxico (lexing) y análisis sintáctico (parsing). Esta documentación no tiene como objetivo proporcionar información exhaustiva sobre el lexing y el parsing. Buena información sobre estos temas está disponible en numerosos recursos en la red. Varios ejemplos de uso están incluidos para mostrar la funcionalidad. La extensión es útil para los desarrolladores PHP que deseen aprender o utilizar el análisis léxico y sintáctico. Las máquinas de estado y el análisis de gramática no tienen
  </para>
  <para>
   Los casos de uso comunes para parle son cuando un formato de datos es demasiado complejo para ser manejado por la correspondencia regex con PCRE. La aplicación práctica es, por lo tanto, amplia. Ya sea un formato de datos específico, una modificación del comportamiento de las funciones existentes, o incluso un lenguaje de programación y más allá. Los métodos de ayuda como <methodname>Parle\Lexer::dump</methodname> para inspeccionar la máquina de estado generada, o <methodname>Parle\Parser::dump</methodname> para inspeccionar la gramática generada, son útiles. El método <methodname>Parle\Parser::trace</methodname> también puede ser utilizado para seguir la operación de análisis.
  </para>
 </preface>

 &reference.parle.setup;
 &reference.parle.constants;
 &reference.parle.pattern.matching;
 &reference.parle.examples;
 &reference.parle.parle.lexer;
 &reference.parle.parle.rlexer;
 &reference.parle.parle.parser;
 &reference.parle.parle.rparser;
 &reference.parle.parle.stack;
 &reference.parle.parle.token;
 &reference.parle.parle.errorinfo;
 &reference.parle.parle.lexerexception;
 &reference.parle.parle.parserexception;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
