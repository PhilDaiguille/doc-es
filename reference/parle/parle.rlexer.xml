<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.parle-rlexer" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase Parle\RLexer</title>
 <titleabbrev>Parle\RLexer</titleabbrev>

 <partintro>

<!-- {{{ Parle\RLexer intro -->
  <section xml:id="parle-rlexer.intro">
   &reftitle.intro;
   <para>
    Clase de análisis léxico de múltiples estados. Los lexemas pueden ser definidos sobre la marcha. Si la instancia particular del lexer está destinada a ser utilizada con <classname>Parle\RParser</classname>, los identificadores de tokens deben ser tomados de allí. De lo contrario, se pueden proporcionar identificadores de tokens arbitrarios. Es importante señalar que <classname>Parle\Parser</classname> no es compatible con este lexer.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="parle-rlexer.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Parle\RLexer</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Parle\RLexer</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.constants.icase">Parle\RLexer::ICASE</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.constants.dot-not-lf">Parle\RLexer::DOT_NOT_LF</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.constants.dot-not-cr-lf">Parle\RLexer::DOT_NOT_CRLF</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.constants.skip-ws">Parle\RLexer::SKIP_WS</varname>
     <initializer>8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.constants.match-zero-len">Parle\RLexer::MATCH_ZERO_LEN</varname>
     <initializer>16</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>bool</type>
     <varname linkend="parle-rlexer.props.bol">bol</varname>
     <initializer>&false;</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.props.flags">flags</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.props.state">state</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.props.marker">marker</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="parle-rlexer.props.cursor">cursor</varname>
     <initializer>0</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.parle-rlexer')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ Parle\RLexer constants -->
  <section xml:id="parle-rlexer.constants">
   &reftitle.constants;
   <variablelist>

    <varlistentry xml:id="parle-rlexer.constants.icase">
     <term><constant>Parle\RLexer::ICASE</constant></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="parle-rlexer.constants.dot-not-lf">
     <term><constant>Parle\RLexer::DOT_NOT_LF</constant></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="parle-rlexer.constants.dot-not-cr-lf">
     <term><constant>Parle\RLexer::DOT_NOT_CRLF</constant></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="parle-rlexer.constants.skip-ws">
     <term><constant>Parle\RLexer::SKIP_WS</constant></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="parle-rlexer.constants.match-zero-len">
     <term><constant>Parle\RLexer::MATCH_ZERO_LEN</constant></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>

   </variablelist>
  </section>
<!-- }}} -->

<!-- {{{ Parle\RLexer properties -->
  <section xml:id="parle-rlexer.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="parle-rlexer.props.bol">
     <term><varname>bol</varname></term>
     <listitem>
      <para>Indicador de inicio de entrada.</para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="parle-rlexer.props.flags">
     <term><varname>flags</varname></term>
     <listitem>
      <para>Flags del lexer.</para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="parle-rlexer.props.state">
     <term><varname>state</varname></term>
     <listitem>
      <para>Estado actual del lexer, de solo lectura.</para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="parle-rlexer.props.marker">
     <term><varname>marker</varname></term>
     <listitem>
      <para>Posición de la última coincidencia de token, de solo lectura.</para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="parle-rlexer.props.cursor">
     <term><varname>cursor</varname></term>
     <listitem>
      <para>Desplazamiento de entrada actual, de solo lectura.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->

 </partintro>

 <!--&reference.parle.entities.parle-rlexer;-->
 &reference.parle.parle.entities.rlexer;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
