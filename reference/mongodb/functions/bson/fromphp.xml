<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4639881688d3faaf0073ad71fe0a4b730aea15a0 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.mongodb.bson-fromphp" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\BSON\fromPHP</refname>
  <refpurpose>Devuelve la representación BSON de un valor PHP</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   <para>
    Esta función ha sido <emphasis>DEPRECADA</emphasis> desde la versión 1.20.0 de la extensión
    y ha sido eliminada en la versión 2.0. Las aplicaciones deberían utilizar
    <methodname>MongoDB\BSON\Document::fromPHP</methodname> en su lugar.
   </para>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>MongoDB\BSON\fromPHP</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Serializa un array o objeto PHP (por ejemplo, documento) en su
   representación <link xlink:href="&url.mongodb.docs.bson;">BSON</link>.
   La cadena binaria devuelta describirá un documento BSON.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>value</parameter> (<type class="union"><type>array</type><type>object</type></type>)</term>
    <listitem>
     <para>
      El valor PHP a serializar.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El documento BSON serializado como cadena binaria.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simplelist>
   <member>
    Lanza
    <classname>MongoDB\Driver\Exception\UnexpectedValueException</classname> si
    el valor PHP no puede ser convertido en BSON. Las razones posibles incluyen,
    pero no se limitan a, encontrar una instancia inesperada de
    <interfacename>MongoDB\BSON\Type</interfacename> o
    <function>MongoDB\BSON\Serializable::bsonSerialize</function> fallando al
    devolver un &array; o una <classname>stdClass</classname>.
   </member>
  </simplelist>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &mongodb.changelog.function-removed;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo con <function>MongoDB\BSON\fromPHP</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$bson = MongoDB\BSON\fromPHP(['foo' => 1]);
echo bin2hex($bson), "\n";

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
0e00000010666f6f000100000000cat
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoDB\BSON\Document::fromPHP</methodname></member>
   <member><function>MongoDB\BSON\toPHP</function></member>
   <member><link xlink:href="&url.mongodb.docs.bson;">MongoDB BSON</link></member>
   <member><xref linkend="mongodb.persistence"/></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
