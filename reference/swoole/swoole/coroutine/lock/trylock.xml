<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 93e05c681bfdbfdd60cec941173c6fe8e8c95cf6 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="swoole-coroutine-lock.trylock" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Swoole\Coroutine\Lock::trylock</refname>
  <refpurpose>Intenta adquirir el bloqueo sin bloquear</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Swoole\Coroutine\Lock::trylock</methodname>
   <void />
  </methodsynopsis>
  <para>
   Al llamar a la operación de bloqueo, si el bloqueo ya está siendo mantenido por otra corrutina,
   la función devolverá inmediatamente false sin suspender la corrutina actual
   ni ceder el control de la CPU. Este diseño no bloqueante permite al llamador manejar
   flexiblemente situaciones de contención, como reintentar, abandonar o ejecutar otra lógica.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve <literal>true</literal> si el bloqueo se adquirió con éxito,
   <literal>false</literal> si el bloqueo no está disponible.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
