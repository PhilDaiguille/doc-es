<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d58ee8eaaa7f716c51f66f5f1058ab3c42376d98 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.compact" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>compact</refname>
  <refpurpose>Crea un array a partir de variables y su valor</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>compact</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>var_name</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>string</type></type><parameter>var_names</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crea un array a partir de variables y su valor.
  </para>
  <para>
   Para cada uno de los argumentos <parameter>varname</parameter>, <parameter>...</parameter>,
   <function>compact</function> busca una variable
   con el mismo nombre en la
   <link linkend="features.gc.refcounting-basics">tabla actual de símbolos</link>, y
   la añade al array, de manera que se tenga la relación nombre =&gt;
   'valor de variable'. En resumen, es lo contrario de la función
   <function>extract</function>.
  </para>
  <note>
   <para>
    Antes de PHP 7.3, todas las cadenas no definidas eran ignoradas en silencio.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var_name</parameter></term>
     <term><parameter>var_names</parameter></term>
     <listitem>
      <para>
       <function>compact</function> acepta diferentes parámetros <parameter>varname</parameter>.
       Los parámetros pueden ser variables que contienen cadenas,
       o un array de cadenas, que puede contener otros arrays de nombres de
       variables, que <function>compact</function> tratará de manera recursiva.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el array de salida que contiene todas las variables añadidas.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>compact</function> emite un error de nivel <constant>E_WARNING</constant> si una
   cadena dada hace referencia a una variable no definida.
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Si una cadena dada hace referencia a una variable no definida, se emite un error de nivel <constant>E_WARNING</constant>.
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       <function>compact</function> emite ahora un error de nivel <constant>E_NOTICE</constant>
       si una cadena dada hace referencia a una variable no definida. Anteriormente,
       estas cadenas eran ignoradas en silencio.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>compact</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$city  = "San Francisco";
$state = "CA";
$event = "SIGGRAPH";

$location_vars = array("city", "state");

$result = compact("event", $location_vars);
print_r($result);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [event] => SIGGRAPH
    [city] => San Francisco
    [state] => CA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Error común</title>
   <para>
    Debido a que las <link linkend="language.variables.variable">variables
    variables</link> no deben ser utilizadas con los
    <link linkend="language.variables.superglobals">arrays superglobales</link>
    en funciones, los arrays Superglobales no deben ser pasados
    a la función <function>compact</function>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
