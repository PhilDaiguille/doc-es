<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 73048c75fbe328342b74f0ffb0a0c85c477f5cde Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<!-- CREDITS: DavidA. -->
<refentry xml:id="function.array-key-exists" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_key_exists</refname>
  <refpurpose>Verifica si una clave existe en un array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_key_exists</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type><type>float</type><type>bool</type>
<type>resource</type><type>null</type></type><parameter>key</parameter></methodparam>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_key_exists</function> devuelve &true; si existe una
   clave con el nombre <parameter>key</parameter> en el array
   <parameter>array</parameter>. <parameter>key</parameter>
   puede ser cualquier valor válido de índice
   de array.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Valor a verificar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Un array que contiene las claves a verificar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
  <note>
   <para>
    <function>array_key_exists</function> buscará, únicamente, en
    las claves de la primera dimensión. Las claves anidadas en los
    arrays multidimensionales no serán encontradas
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       El parámetro <parameter>key</parameter> acepta ahora
       los argumentos de tipo <type>bool</type>, <type>float</type>, <type>int</type>,
       <type>null</type>, <type>resource</type>, y
       <type>string</type>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Ya no es posible pasar un <type>objeto</type> al parámetro <parameter>array</parameter>.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       Se desaconseja pasar un <type>objeto</type> al parámetro <parameter>array</parameter>. Utilizar en su lugar <function>property_exists</function>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>array_key_exists</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$searchArray = ['first' => 1, 'second' => 4];
var_dump(array_key_exists('first', $searchArray));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
]]>
    </screen>
   </example>
  </para>
  <example>
   <title><function>array_key_exists</function> y <function>isset</function></title>
   <para>
    <function>isset</function> no devuelve &true; para las claves de
    arrays que corresponden a un valor &null; mientras que <function>array_key_exists</function> sí lo hace.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$searchArray = ['first' => null, 'second' => 4];

var_dump(isset($searchArray['first']));
var_dump(array_key_exists('first', $searchArray));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
bool(true)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>isset</function></member>
    <member><function>array_keys</function></member>
    <member><function>in_array</function></member>
    <member><function>property_exists</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
