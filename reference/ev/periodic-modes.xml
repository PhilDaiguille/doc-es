<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="ev.periodic-modes" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Modos de operación periódica de un watcher</title>
 <para>
  El watcher <classname>EvPeriodic</classname> funciona en diferentes
  modos según los parámetros <parameter>offset</parameter>,
  <parameter>interval</parameter> y <parameter>reschedule_cb</parameter>.
 </para>
 <orderedlist>
  <listitem>
   <para>
    El modo <emphasis>Temporizador absoluto</emphasis>. En este modo,
    <parameter>interval</parameter> = <literal>0</literal>,
    <parameter>reschedule_cb</parameter> = &null;.
    La llamada se realizará a la hora del reloj <parameter>offset</parameter>
    y no se repetirá. No se ajustará cuando ocurra un salto en el tiempo,
    por lo tanto, si debe ejecutarse el <emphasis>1 de enero de 2014</emphasis>,
    se ejecutará cuando la hora del sistema sea alcanzada o superada.
   </para>
  </listitem>
  <listitem>
   <para>
    El modo <emphasis>Temporizador con repetición por intervalo</emphasis>.
    En este modo, <parameter>interval</parameter> &gt; <literal>0</literal>,
    <parameter>reschedule_cb</parameter> = &null; ; el watcher será programado
    automáticamente para finalizar en la próxima duración
    <parameter>offset</parameter> + <constant>N</constant> * <parameter>interval</parameter>
    (para un entero <constant>N</constant>) y luego se repite, independientemente
    de los saltos en el tiempo.
   </para>
   <para>
    Puede utilizarse para crear temporizadores que no derivan respetando
    el reloj del sistema:
    <programlisting role="php">
<![CDATA[
<?php
$hourly = EvPeriodic(0, 3600, NULL, function () {
  echo "una vez por hora\n";
});
?>
]]>
    </programlisting>
    Esto no significa que siempre habrá <literal>3600</literal> segundos
    entre cada llamada, sino solo que la función de retrollamada será llamada
    cuando el reloj del sistema muestre una hora completa (<emphasis>UTC</emphasis>).
   </para>
   <para>
    La clase <classname>EvPeriodic</classname> intentará ejecutar la función
    de retrollamada en este modo a la próxima hora posible donde
    <varname>time</varname> = <parameter>offset</parameter> (<literal>mod</literal>
    <parameter>interval</parameter>), independientemente de los saltos en el tiempo.
   </para>
  </listitem>
  <listitem>
   <para>
    El modo <emphasis>reprogramación manual</emphasis>. En este modo,
    <parameter>reschedule_cb</parameter> es un <type>callable</type>.
   </para>
   <para>
    <parameter>interval</parameter> y <parameter>offset</parameter>
    serán ambos ignorados. En su lugar, cada vez que el watcher periódico
    esté programado, la función de retrollamada de reprogramación (<parameter>reschedule_cb</parameter>)
    será llamada con el watcher primero y el tiempo actual como segundo argumento.
   </para>
   <para>
    Esta función de retrollamada <emphasis>no debe</emphasis> detener ni destruir
    este watcher periódico, ni otro, y <emphasis>no debe</emphasis>
    llamar a funciones o métodos de bucle de eventos. Para detenerlo,
    devuelva <literal>1e30</literal> y deténgalo después. Un watcher
    <classname>EvPrepare</classname> puede ser utilizado para realizar esta tarea.
   </para>
   <para>
    Debe devolver la próxima hora de llamada, basada en el valor
    del tiempo pasado (el valor de tiempo más pequeño debe ser superior
    o igual al segundo argumento). Será llamada, habitualmente, justo después
    de que la función de retrollamada sea lanzada, pero posiblemente en otros momentos.
   </para>
   <example>
    <title>Utilización de retrollamada de reprogramación</title>
    <programlisting role="php">
<![CDATA[
<?php
// Cada 10.5 segundos

function reschedule_cb ($watcher, $now) {
   return $now + (10.5 - fmod($now, 10.5));
}

$w = new EvPeriodic(0., 0., "reschedule_cb", function ($w, $revents) {
   echo time(), PHP_EOL;
});

Ev::run();
?>
]]>
    </programlisting>
   </example>
  </listitem>
 </orderedlist>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
