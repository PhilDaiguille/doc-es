<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="evchild.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvChild::__construct</refname>
  <refpurpose>Construye el objeto de observación EvChild</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier>
   <methodname>EvChild::__construct</methodname>
   <methodparam>
    <type>int</type>
    <parameter>pid</parameter>
   </methodparam>
   <methodparam>
    <type>bool</type>
    <parameter>trace</parameter>
   </methodparam>
   <methodparam>
    <type>callable</type>
    <parameter>callback</parameter>
   </methodparam>
   <methodparam
   choice="opt">
    <type>mixed</type>
    <parameter>data</parameter>
    <initializer>&null;</initializer>
   </methodparam>
   <methodparam
   choice="opt">
    <type>int</type>
    <parameter>priority</parameter>
    <initializer>0</initializer>
   </methodparam>
  </constructorsynopsis>
  <para>
   Construye el objeto observador <classname>EvChild</classname>.
  </para>
  <para>
   Llama a la retrollamada cuando se recibe un cambio de estado de un proceso
   cuyo ID <parameter>pid</parameter> (o de cualquier <emphasis>PID</emphasis>
   si vale <literal>0</literal>) (un cambio de estado ocurre cuando el proceso
   termina o es eliminado, o cuando el parámetro <parameter>trace</parameter>
   vale &true;, cuando el proceso es detenido o continuado). En otras palabras,
   cuando el proceso recibe un <constant>SIGCHLD</constant>, <emphasis>Ev</emphasis>
   recuperará todos los estados de salida/espera para todos los hijos
   modificados/zombies y llamará a la retrollamada.
  </para>
  <para>
   Es válido instalar un observador en el hijo después de que un
   <classname>EvChild</classname> haya salido, pero antes de que el bucle
   de eventos haya iniciado su siguiente iteración. Por ejemplo,
   primero, se llama a <literal>fork</literal>, luego el nuevo proceso
   hijo puede salir, y solo entonces, un observador
   <classname>EvChild</classname> es instalado en el padre para el
   nuevo <emphasis>PID</emphasis>.
  </para>
  <para>
   Se podrá acceder a los estados de salida/de traza así como a los
   <parameter>pid</parameter> utilizando las propiedades
   <varname>rstatus</varname> y <varname>rpid</varname> del objeto observador.
  </para>
  <para>
   El número de observadores <emphasis>PID</emphasis> por <emphasis>PID</emphasis>
   no está limitado. Todos serán llamados.
  </para>
  <para>
   El método <methodname>EvChild::createStopped</methodname>
   no inicia (activa) el nuevo observador creado.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>pid</parameter>
    </term>
    <listitem>
     <para>
      Espera los cambios de estado de los procesos PID (o cualquier proceso
      si PID vale <literal>0</literal>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>trace</parameter>
    </term>
    <listitem>
     <para>
      Si vale &false;, solo activa el observador cuando el proceso
      termina. De lo contrario (&true;), activa el observador cuando el
      proceso es detenido o continuado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>callback</parameter>
    </term>
    <listitem>
     <para>
      Ver las
      <link linkend="ev.watcher-callbacks">retrollamadas de los observadores</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>data</parameter>
    </term>
    <listitem>
     <para>
      Datos personalizados asociados con el observador.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>priority</parameter>
    </term>
    <listitem>
     <para>
      <link linkend="ev.constants.watcher-pri">Retrollamadas del observador</link>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <methodname>EvLoop::child</methodname>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
