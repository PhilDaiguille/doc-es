<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.evchild" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase EvChild</title>
 <titleabbrev>EvChild</titleabbrev>
 <partintro>
<!-- {{{ EvChild intro -->
  <section xml:id="evchild.intro">
   &reftitle.intro;
   <para>
    Los watchers <classname>EvChild</classname> se activan cuando el
    proceso recibe un <constant>SIGCHLD</constant> en respuesta a cambios de estado de los hijos (típicamente, cuando un hijo
    muere o termina). Está permitido instalar un watcher
    <constant>EvChild</constant> después de que el hijo haya sido forkeado
    (lo que implica que ya debe existir), siempre que el bucle
    de eventos no haya comenzado (o continuado desde un watcher), es decir,
    forkear y luego registrar inmediatamente un watcher para el hijo es
    el método correcto, pero forkear y registrar un watcher después de algunas
    iteraciones del bucle de eventos o en la próxima invocación
    de la función de retrollamada no es el método correcto.
   </para>
   <para>
    Solo está permitido registrar watchers
    <classname>EvChild</classname> en el
    <emphasis>bucle por defecto</emphasis>.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evchild.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvChild</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvChild</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evchild.props.pid">pid</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evchild.props.rpid">rpid</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evchild.props.rstatus">rstatus</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evchild')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evchild')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvChild properties -->
  <section xml:id="evchild.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evchild.props.pid">
     <term>
      <varname>pid</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Solo lectura</emphasis>.
       El ID del proceso relacionado
       con los watchers, o <literal>0</literal> que significa todos los IDs
       de proceso.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evchild.props.rpid">
     <term>
      <varname>rpid</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Solo lectura</emphasis>. El ID del proceso que ha detectado
       un cambio de estado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evchild.props.rstatus">
     <term>
      <varname>rstatus</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Solo lectura</emphasis>.
       El estado de salida del proceso
       causado por <varname>rpid</varname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evchild;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
