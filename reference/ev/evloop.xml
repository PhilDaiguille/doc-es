<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.evloop" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase EvLoop</title>
 <titleabbrev>EvLoop</titleabbrev>
 <partintro>
<!-- {{{ EvLoop intro -->
  <section xml:id="evloop.intro">
   &reftitle.intro;
   <para>
    Representa un bucle de eventos que siempre es distinto del
    <emphasis>bucle por defecto</emphasis>. A diferencia del
    <emphasis>bucle por defecto</emphasis>, no puede gestionar los
    watchers <classname>EvChild</classname>.
   </para>
   <para>
    Al utilizar hilos, se debe crear un bucle por hilo,
    y utilizar el <emphasis>bucle por defecto</emphasis> en el hilo
    padre.
   </para>
   <para>
    El <emphasis>bucle de eventos por defecto</emphasis> es inicializado
    automáticamente por <emphasis>Ev</emphasis>. Es accesible a través de los
    métodos de la clase <classname>Ev</classname> o mediante el método
    <methodname>EvLoop::defaultLoop</methodname>.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evloop.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvLoop</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>final</modifier>
      <classname>EvLoop</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.data">data</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.backend">backend</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.is-default-loop">is_default_loop</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.iteration">iteration</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.pending">pending</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.io-interval">io_interval</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.timeout-interval">timeout_interval</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evloop.props.depth">depth</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evloop')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evloop')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvLoop properties -->
  <section xml:id="evloop.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evloop.props.data">
     <term>
      <varname>data</varname>
     </term>
     <listitem>
      <para>
       Datos personalizados para adjuntar al bucle
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.backend">
     <term>
      <varname>backend</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Solo lectura</emphasis>.
       Los
       <link linkend="ev.constants.watcher-backends">flags del backend</link>
       que indican el backend de eventos en uso.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.is-default-loop">
     <term>
      <varname>is_default_loop</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Solo lectura</emphasis>.
       &true; si es el bucle de eventos por defecto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.iteration">
     <term>
      <varname>iteration</varname>
     </term>
     <listitem>
      <para>
       El contador de iteración actual del bucle. Ver el método
       <methodname>Ev::iteration</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.pending">
     <term>
      <varname>pending</varname>
     </term>
     <listitem>
      <para>
       El número de watchers pendientes.
       <literal>0</literal> indica que no hay watchers pendientes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.io-interval">
     <term>
      <varname>io_interval</varname>
     </term>
     <listitem>
      <para>
       Un valor alto para <varname>io_interval</varname> permite a
       <emphasis>libev</emphasis> pasar más tiempo recolectando
       los eventos <classname>EvIo</classname>, así, más eventos
       pueden ser gestionados por iteración, pero esto aumentará la
       latencia. Los tiempos de espera máximos (tanto para
       <classname>EvPeriodic</classname> como para <classname>EvTimer</classname>)
       no se verán afectados. Establecer esta opción a un valor
       distinto de cero introducirá una llamada adicional a <literal>sleep()</literal>
       en la mayoría de las iteraciones del bucle.
       El tiempo de pausa asegura que <emphasis>libev</emphasis>
       no consultará <classname>EvIo</classname> más de una vez
       durante este intervalo, en promedio. La mayoría de los programas
       pueden beneficiarse estableciendo
       <varname>io_interval</varname> a un valor cercano a
       <literal>0.1</literal>, lo cual es generalmente suficiente para los
       servidores interactivos (y no destinados a juegos). Generalmente
       no tiene sentido establecer este valor a menos de
       <literal>0.01</literal>, ya que se acerca a la
       granularidad a nivel de tiempos de la mayoría de los sistemas.
      </para>
      <para>
       Ver también las
       <link xlink:href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#FUNCTIONS_CONTROLLING_EVENT_LOOPS">
       funciones que controlan los bucles de eventos</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.timeout-interval">
     <term>
      <varname>timeout_interval</varname>
     </term>
     <listitem>
      <para>
       Un valor alto para <varname>timeout_interval</varname> permite a
       <emphasis>libev</emphasis> pasar más tiempo recolectando los
       tiempos de espera máximos, pero como consecuencia aumenta
       la latencia, el estrés y la inexactitud (la función de retrollamada
       del watcher será llamada más tarde). Los watchers <classname>EvIo</classname>
       no se verán afectados. Establecer este valor a un valor no
       nulo no introducirá ninguna sobrecarga adicional a
       <emphasis>libev</emphasis>. Ver también las
       <link
       xlink:href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#FUNCTIONS_CONTROLLING_EVENT_LOOPS">
       funciones que controlan los bucles de eventos</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evloop.props.depth">
     <term>
      <varname>depth</varname>
     </term>
     <listitem>
      <para>
       La profundidad de la recursión. Ver el método
       <methodname>Ev::depth</methodname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evloop;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
