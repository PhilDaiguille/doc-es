<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 33e5f4ef7243bc1282acb1cba93e8f99c1debe68 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.evsignal" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase EvSignal</title>
 <titleabbrev>EvSignal</titleabbrev>
 <partintro>
<!-- {{{ EvSignal intro -->
  <section xml:id="evsignal.intro">
   &reftitle.intro;
  <para>
    Los watchers <classname>EvSignal</classname> lanzarán un evento
   cuando el proceso reciba una señal específica una o varias veces.
   A pesar de que las señales sean asíncronas,
   <emphasis>libev</emphasis> intentará hacer lo posible para
   entregar las señales de forma síncrona, es decir, al igual que cualquier
   otro evento.
   </para>
   <para>
    No hay límite para el número de watchers para la misma señal,
    pero solo en la misma loop, es decir, se puede vigilar
    <constant>SIGINT</constant> en la loop por defecto, y para
    <constant>SIGIO</constant> en otra loop, pero no está permitido vigilar <constant>SIGINT</constant> tanto en
    la loop por defecto como en otra loop al mismo tiempo.
    En este momento, <constant>SIGCHLD</constant> está permanentemente
    vinculado a la loop por defecto.
   </para>
   <para>
    Si es posible y está soportado, <emphasis>libev</emphasis> instalará su
    manejador con <literal>SA_RESTART</literal> (o equivalente) activado,
    por lo tanto, las llamadas al sistema no deberían ser interrumpidas. En el caso
    de un problema con las llamadas al sistema que se vieran interrumpidas por
    señales, todas las señales pueden ser bloqueadas en un watcher
    <classname>EvCheck</classname> y desbloqueadas en un watcher
    <classname>EvPrepare</classname>.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evsignal.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvSignal</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvSignal</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evsignal.props.signum">signum</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evsignal')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evsignal')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvSignal properties -->
  <section xml:id="evsignal.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evsignal.props.signum">
     <term>
      <varname>signum</varname>
     </term>
     <listitem>
      <para>
       El número de la señal. Ver las constantes exportadas por la extensión
       <emphasis>pcntl</emphasis>. Ver también la página del manual para
       <literal>signal(7)</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evsignal;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
