<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: dd07341fae2c414adc1f700be0890ff32e8daab4 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="ds-map.remove" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Ds\Map::remove</refname>
  <refpurpose>Elimina y devuelve un valor por clave</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Ds\Map::remove</methodname>
   <methodparam><type>mixed</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>default</parameter></methodparam>
  </methodsynopsis>
  <para>
    Elimina y devuelve un valor por clave, o devuelve un valor por defecto opcional si la clave
    no ha podido ser encontrada.
  </para>

  <note>
    <para>
        Las claves de tipo <type>object</type> son soportadas.

        Si un objeto implementa <classname>Ds\Hashable</classname>,
        la igualdad será determinada por la función <code>equals</code> del objeto.

        Si un objeto no implementa <classname>Ds\Hashable</classname>,
        los objetos deben ser referencias a la misma instancia para ser considerados iguales.
    </para>
  </note>

  <note>
    <para>
        Asimismo, se puede utilizar la sintaxis de array para acceder a los valores por clave, por ejemplo <code>$map["clé"]</code>.
    </para>
  </note>

  <caution>
    <para>
        Atención al uso de la sintaxis de array. Las claves escalares serán forzadas a
        enteros por el motor. Por ejemplo, <code>$map["1"]</code> intentará acceder a
        <code>int(1)</code>, mientras que <code>$map-&gt;get("1")</code>
        buscará correctamente la clave de string.
    </para>
    <para>
        Ver <link linkend="language.types.array">arrays</link>.
    </para>
  </caution>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
        La clave a eliminar.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>default</parameter></term>
    <listitem>
     <para>
        El valor por defecto opcional, devuelto si la clave no ha podido ser encontrada.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    El valor que ha sido eliminado, o el <parameter>default</parameter>
    valor si ha sido proporcionado y la <parameter>key</parameter> no ha podido ser encontrada en el mapa.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <classname>OutOfBoundsException</classname> si la clave no ha sido encontrada
   y ningún valor por defecto ha sido proporcionado.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>Ds\Map::remove</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$map = new \Ds\Map(["a" => 1, "b" => 2, "c" => 3]);

var_dump($map->remove("a"));      //  1
var_dump($map->remove("e", 10));  // 10 (uso del valor por defecto)
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
int(1)
int(10)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
