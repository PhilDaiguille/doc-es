<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: dd07341fae2c414adc1f700be0890ff32e8daab4 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="ds-hashable.hash" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Ds\Hashable::hash</refname>
  <refpurpose>Devuelve un valor escalar para usar como valor de hash</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier> <type>mixed</type><methodname>Ds\Hashable::hash</methodname>
   <void />
  </methodsynopsis>
  <para>
    Devuelve un valor escalar para usar como valor de hash de los objetos.
  </para>
  <para>
    Mientras que el valor de hash no defina la igualdad, todos los objetos que son iguales según <function>Ds\Hashable::equals</function>
    deben tener el mismo valor de hash. Los valores de hash de los objetos iguales no tienen que ser únicos, por ejemplo
    se podría simplemente devolver &true; para todos los objetos y nada se rompería - la única
    implicación sería que las tablas de hash se convertirían en listas enlazadas porque todos
    los objetos serían hasheados en el mismo cubo. Es por lo tanto muy importante
    que se elija un buen valor de hash, como un ID o una dirección de correo electrónico.
 </para>

  <para>
    Este método permite usar objetos como claves en estructuras tales como
    <classname>Ds\Map</classname> y <classname>Ds\Set</classname>, o cualquier otra
    estructura de búsqueda que respete esta interfaz.
  </para>

  <caution>
    <para>
        No elija un valor que podría cambiar en el objeto, como una propiedad pública.
        Las búsquedas en las tablas de hash fallarían porque el hash ha cambiado.
    </para>
  </caution>

  <caution>
    <para>
        Todos los objetos que son iguales deben tener el mismo valor de hash.
    </para>
  </caution>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    Un valor escalar para usar como valor de hash de este objeto.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>Ds\Hashable::hash</function></title>
   <programlisting role="php">
<![CDATA[
<?php
class HashableObject implements \Ds\Hashable
{
    private $name;
    private $email;

    public function __construct($name, $email)
    {
        $this->name  = $name;
        $this->email = $email;
    }

    /**
     * Debe devolver el mismo valor para todos los objetos iguales, pero no tiene que
     * ser único. Este valor no será utilizado para determinar la igualdad.
     */
    public function hash()
    {
        return $this->email;
    }

    /**
     * Determina la igualdad, generalmente durante una búsqueda en una tabla de hash para determinar
     * si la clave del cubo coincide con la clave de búsqueda. El hash debe ser igual si
     * los objetos son iguales, de lo contrario esta determinación no se alcanzaría.
     */
    public function equals($obj): bool
    {
        return $this->name  === $obj->name
            && $this->email === $obj->email;
    }
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
