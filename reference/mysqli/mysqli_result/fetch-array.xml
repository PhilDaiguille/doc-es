<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 035c126c0393fe154bac46e2c3c489ebadce48a5 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli-result.fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_array</refname>
  <refname>mysqli_fetch_array</refname>
  <refpurpose>Obtiene la siguiente fila de un conjunto de resultados como un array asociativo, numérico o ambos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli_result">
   <modifier>public</modifier> <type class="union"><type>array</type><type>null</type><type>false</type></type><methodname>mysqli_result::fetch_array</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>MYSQLI_BOTH</constant></initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>array</type><type>null</type><type>false</type></type><methodname>mysqli_fetch_array</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>MYSQLI_BOTH</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve una fila de datos del conjunto de resultados y la retorna como un array.
   Cada llamada posterior a esta función retornará la siguiente fila en el conjunto de resultados,
   o &null; si no hay más filas.
  </para>
  <para>
   Además de almacenar los datos como un array con índices numéricos,
   también puede almacenarlos en un array asociativo,
   utilizando los nombres de los campos como claves.
  </para>
  <para>
   Si dos o más columnas del resultado tienen el mismo nombre,
   la última columna tendrá prioridad y sobrescribirá todos los datos anteriores.
   Para acceder a las otras columnas con el mismo nombre, se debe
   utilizar el índice numérico o crear un alias para cada columna.
  </para>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       El segundo argumento opcional es una constante que indica qué
       tipo de array debe ser retornado a partir de la fila de datos
       actual. Los valores posibles para este parámetro son las constantes
       <constant>MYSQLI_ASSOC</constant>, <constant>MYSQLI_NUM</constant>,
       y <constant>MYSQLI_BOTH</constant>.
      </para>
      <para>
       Al utilizar la constante <constant>MYSQLI_ASSOC</constant>, esta función
       se comportará como la función <function>mysqli_fetch_assoc</function>,
       mientras que <constant>MYSQLI_NUM</constant> hará que actúe como la función
       <function>mysqli_fetch_row</function>. La constante
       <constant>MYSQLI_BOTH</constant> creará un array que será tanto
       asociativo como indexado numéricamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un array que representa la fila recuperada,
   &null; si no hay más filas en el conjunto de resultados, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>mysqli_result::fetch_array</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY ID LIMIT 3";
$result = $mysqli->query($query);

/* Array numérico */
$row = $result->fetch_array(MYSQLI_NUM);
printf("%s (%s)\n", $row[0], $row[1]);

/* Array asociativo */
$row = $result->fetch_array(MYSQLI_ASSOC);
printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* Array asociativo y numérico */
$row = $result->fetch_array(MYSQLI_BOTH);
printf("%s (%s)\n", $row[0], $row["CountryCode"]);
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = mysqli_query($mysqli, $query);

/* Array numérico */
$row = mysqli_fetch_array($result, MYSQLI_NUM);
printf("%s (%s)\n", $row[0], $row[1]);

/* Array asociativo */
$row = mysqli_fetch_array($result, MYSQLI_ASSOC);
printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* Array asociativo y numérico */
$row = mysqli_fetch_array($result, MYSQLI_BOTH);
printf("%s (%s)\n", $row[0], $row["CountryCode"]);
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Kabul (AFG)
Qandahar (AFG)
Herat (AFG)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_assoc</function></member>
    <member><function>mysqli_fetch_column</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_fetch_object</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
