<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 66fffcdfbb9d97a1618b9e47f9be19a83f80e32b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.sqlsrv-free-stmt" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sqlsrv_free_stmt</refname>
  <refpurpose>Libera todos los recursos de la consulta especificada</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sqlsrv_free_stmt</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
  </methodsynopsis>
  <para>
   Libera todos los recursos para la consulta especificada. La consulta no podrá
   ser utilizada después de pasar a la función <function>sqlsrv_free_stmt</function>.
   Si la función <function>sqlsrv_free_stmt</function> es llamada mientras la
   consulta está en ejecución, la ejecución de la consulta es interrumpida
   y la consulta es cancelada.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       La consulta cuyos recursos serán liberados.
       Tenga en cuenta que &null; es un valor de argumento válido. Este valor
       permite que la función sea llamada varias veces en un script.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>sqlsrv_free_stmt</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$serverName = "serverName\sqlexpress";
$connectionInfo = array( "Database"=>"dbName", "UID"=>"username", "PWD"=>"password");
$conn = sqlsrv_connect( $serverName, $connectionInfo);
if( $conn === false ) {
     die( print_r( sqlsrv_errors(), true));
}

$stmt = sqlsrv_query( $conn, "SELECT * FROM Table_1");
if( $stmt === false ) {
     die( print_r( sqlsrv_errors(), true));
}

/*-------------------------------
     Uso de la consulta aquí.
-------------------------------*/

/* Liberación de los recursos asociados a la consulta. */
sqlsrv_free_stmt( $stmt);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   La principal diferencia entre la función <function>sqlsrv_free_stmt</function> y
   la función <function>sqlsrv_cancel</function> es que un recurso de consulta
   cancelado con la función <function>sqlsrv_cancel</function> puede ser re-ejecutado
   si ha sido creado con la función <function>sqlsrv_prepare</function>.
   Un recurso de consulta cancelado con la función
   <function>sqlsrv_free_statement</function> no puede ser re-ejecutado.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlsrv_cancel</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
