<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 99d758bd259fa80c2828cf8cc250984cb683ee8f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="wddx.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <section xml:id="wddx.examples-serialize">
  <title>Ejemplos WDDX</title>
  <para>
   Todas las funciones que serializan variables utilizan
   el primer elemento de un array para determinar si el array
   debe ser serializado en un array o en una estructura.
   Si el primer elemento tiene una cadena de caracteres como clave,
   entonces ser치 serializado en una estructura, de lo contrario, en un array.
  </para>

  <example>
   <title>Serializaci칩n de un valor simple con WDDX</title>
   <programlisting role="php">
<![CDATA[
<?php
echo wddx_serialize_value("PHP to WDDX packet example", "PHP packet");
?>
]]>
   </programlisting>
   <para>
    Este ejemplo mostrar치:
   </para>
   <screen>
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP packet'/><data>
<string>PHP to WDDX packet example</string></data></wddxPacket>
]]>
   </screen>
  </example>

  <example>
   <title>Uso de paquetes incrementales con WDDX</title>
   <programlisting role="php">
<![CDATA[
<?php
$pi = 3.1415926;
$packet_id = wddx_packet_start("PHP");
wddx_add_vars($packet_id, "pi");

/* Supongamos que $cities proviene de una base de datos */
$cities = array("Austin", "Novato", "Seattle");
wddx_add_vars($packet_id, "cities");

$packet = wddx_packet_end($packet_id);
echo $packet;
?>
]]>
   </programlisting>
   <para>
    Este ejemplo mostrar치:
   </para>
   <screen>
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP'/><data><struct>
<var name='pi'><number>3.1415926</number></var><var name='cities'>
<array length='3'><string>Austin</string><string>Novato</string>
<string>Seattle</string></array></var></struct></data></wddxPacket>
]]>
   </screen>
  </example>

  <note>
   <para>
    Las cadenas de caracteres deben estar codificadas en UTF-8; para manejar otros juegos de caracteres,
    convierta primero la cadena de caracteres utilizando la <function>mb_convert_encoding</function>,
    <methodname>UConverter::transcode</methodname>, o <function>iconv</function>.
   </para>
  </note>
 </section>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
