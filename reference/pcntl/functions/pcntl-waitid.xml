<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 18aa2012f6fa1e5b09733147e02911d16e06d4a1 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.pcntl-waitid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_waitid</refname>
  <refpurpose>Espera a que un proceso hijo cambie de estado</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pcntl_waitid</methodname>
   <methodparam choice="opt"><type>int</type><parameter>idtype</parameter><initializer><constant>P_ALL</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>id</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">info</parameter><initializer>[]</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>WEXITED</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Recupera la información de estado relativa a la terminación, parada y/o continuación de uno de los procesos hijo del proceso llamante.
  </para>

  <para>
   Salvo que se pase el flag <constant>WNOHANG</constant>, el proceso llamante será bloqueado hasta que ocurra un error, o que la información de estado se vuelva disponible y satisfaga todas las condiciones siguientes:
   <itemizedlist>
    <listitem>
     <simpara>
      El estado de la información proviene de uno de los procesos hijo en el conjunto de procesos hijo especificados por los argumentos <parameter>idtype</parameter> y <parameter>id</parameter>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      El cambio de estado en la información de estado corresponde a uno de los flags de cambio de estado definidos en el argumento <parameter>flags</parameter>.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Si la información de estado correspondiente está disponible antes de la llamada a <function>pcntl_waitid</function>, el retorno será inmediato. Si la información de estado correspondiente está disponible para dos o más procesos hijo, el orden en el que se reporta su estado es indeterminado.
  </para>

  <note>
   <para>
    Esta documentación cubre la especificación POSIX de la función <literal>waitid</literal>, con algunos parámetros adicionales específicos de las implementaciones en Linux, NetBSD y FreeBSD. Consulte la página del manual de su sistema <literal>waitid(2)</literal> para obtener detalles específicos sobre el funcionamiento de <literal>waitid</literal> en su sistema.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>idtype</parameter></term>
    <term><parameter>id</parameter></term>
    <listitem>
     <simpara>
      Los argumentos <parameter>idtype</parameter> y <parameter>id</parameter> se utilizan para especificar qué hijos esperar.
     </simpara>
     <table>
      <title>Argumento estándar POSIX <parameter>idtype</parameter> y <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Si <parameter>idtype</parameter> es <literal>P_ALL</literal></entry>
         <entry>
          espera cualquier proceso hijo, <parameter>id</parameter> es ignorado.
         </entry>
        </row>
        <row>
         <entry>Si <parameter>idtype</parameter> es <literal>P_PID</literal></entry>
         <entry>
          espera el proceso hijo con el identificador de proceso igual a <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>Si <parameter>idtype</parameter> es <literal>P_PGID</literal></entry>
         <entry>
          espera cualquier proceso hijo con el identificador de grupo de procesos igual a <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Argumentos específicos de Linux <parameter>idtype</parameter> y <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Si <parameter>idtype</parameter> es <literal>P_PIDFD</literal> (desde Linux 5.4)</entry>
         <entry>
          espera el proceso hijo referenciado por el descriptor de fichero PID especificado en <parameter>id</parameter>. (Vea la página del manual de Linux <literal>pidfd_open(2)</literal> para más información sobre los descriptores de fichero PID.)
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Argumentos específicos de NetBSD y FreeBSD <parameter>idtype</parameter> y <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Si <parameter>idtype</parameter> es <literal>P_UID</literal>
         </entry>
         <entry>
          espera los procesos cuyo identificador de usuario efectivo es igual a <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Si <parameter>idtype</parameter> es <literal>P_GID</literal>
         </entry>
         <entry>
          espera los procesos cuyo identificador de grupo efectivo es igual a <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Si <parameter>idtype</parameter> es <literal>P_SID</literal>
         </entry>
         <entry>
          espera los procesos cuyo identificador de sesión es igual a <parameter>id</parameter>. Si el proceso hijo ha iniciado su propia sesión, su identificador de sesión será el mismo que su identificador de proceso. De lo contrario, el identificador de sesión de un proceso hijo corresponderá al identificador de sesión del llamante.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Argumentos específicos de FreeBSD <parameter>idtype</parameter> y <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Si <parameter>idtype</parameter> es <literal>P_JAILID</literal>
         </entry>
         <entry>
          espera los procesos en una prisión cuyo identificador de prisión es igual a <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>info</parameter></term>
    <listitem>
     <para>
      El parámetro <parameter>info</parameter> se define como un array que contiene información sobre la señal.
     </para>
     <para>
      <parameter>info</parameter> puede contener las siguientes claves:
      <simplelist>
       <member><literal>signo</literal>: Número de la señal</member>
       <member><literal>errno</literal>: Número de error del sistema</member>
       <member><literal>code</literal>: Código de señal</member>
       <member><literal>status</literal>: Valor de salida o señal</member>
       <member><literal>pid</literal>: ID del proceso que envía</member>
       <member><literal>uid</literal>: ID de usuario real del proceso que envía</member>
       <member><literal>utime</literal>: Tiempo de usuario consumido</member>
       <member><literal>stime</literal>: Tiempo de sistema consumido</member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      El valor de <parameter>flags</parameter> es el valor de cero o más de las siguientes constantes juntas:
      <table>
       <title>Valores posibles para <parameter>flags</parameter></title>
       <tgroup cols="2">
        <tbody>
         <row>
          <entry><constant>WCONTINUED</constant></entry>
          <entry>
           El estado será devuelto para cualquier proceso hijo continuado cuyo estado no haya sido reportado desde que continuó desde una parada de control de trabajo o solo haya sido reportado por llamadas a <function>pcntl_waitid</function> con el flag <constant>WNOWAIT</constant> definido.
          </entry>
         </row>
         <row>
          <entry><constant>WEXITED</constant></entry>
          <entry>
           Espera los procesos que han terminado.
          </entry>
         </row>
         <row>
          <entry><constant>WNOHANG</constant></entry>
          <entry>
           No bloquear si no hay estado disponible; devolver inmediatamente.
          </entry>
         </row>
         <row>
          <entry><constant>WNOWAIT</constant></entry>
          <entry>
           Mantiene el proceso cuyo estado es devuelto en <parameter>info</parameter> en un estado esperado. Esto no afectará el estado del proceso; el proceso puede ser esperado de nuevo después de que esta llamada termine.
          </entry>
         </row>
         <row>
          <entry><constant>WSTOPPED</constant></entry>
          <entry>
           El estado será devuelto para cualquier proceso hijo parado cuyo estado no haya sido reportado desde que fue parado o solo haya sido reportado por llamadas a <function>pcntl_waitid</function> con el flag <constant>WNOWAIT</constant> definido.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>pcntl_waitid</function> devuelve &true; si el flag <constant>WNOHANG</constant> ha sido especificado y el estado no está disponible para uno de los procesos especificados por <parameter>idtype</parameter> y <parameter>id</parameter>.
  </para>

  <para>
   <function>pcntl_waitid</function> devuelve &true; debido al cambio de estado de uno de sus hijos.
  </para>

  <para>
   De lo contrario, &false; es devuelto y <function>pcntl_get_last_error</function> puede ser utilizado para obtener el número de error <literal>errno</literal>.
  </para>

  <note>
   <para>
    Una vez que se obtiene un número de error <literal>errno</literal>, <function>pcntl_strerror</function> puede ser utilizado para obtener el mensaje de texto asociado.
   </para>
  </note>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <table>
   <title>Valores de error número (<literal>errno</literal>)</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry><constant>ECHILD</constant></entry>
      <entry>
       El proceso llamante no tiene ningún proceso hijo no esperado.
      </entry>
     </row>
     <row>
      <entry><constant>EINTR</constant></entry>
      <entry>
       <function>pcntl_waitid</function> ha sido interrumpido por una señal.
      </entry>
     </row>
     <row>
      <entry><constant>EINVAL</constant></entry>
      <entry>
       Se ha especificado un valor inválido para <parameter>flags</parameter>, o <parameter>idtype</parameter> y <parameter>id</parameter> especifican un conjunto inválido de procesos.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_waitpid</function></member>
    <member><function>pcntl_wait</function></member>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>pcntl_wifexited</function></member>
    <member><function>pcntl_wifstopped</function></member>
    <member><function>pcntl_wifsignaled</function></member>
    <member><function>pcntl_wexitstatus</function></member>
    <member><function>pcntl_wtermsig</function></member>
    <member><function>pcntl_wstopsig</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
