<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3f3362ebcdd1a27cf9c9c751dd5cbe8a6264d1c3 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.simdjson-key-value" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>simdjson_key_value</refname>
  <refpurpose>Decodifica el valor de una cadena JSON situada en el indicador JSON solicitado.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>simdjson_key_value</methodname>
   <methodparam><type>string</type><parameter>json</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>associative</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>depth</parameter><initializer>512</initializer></methodparam>
  </methodsynopsis>
  <para>
   Decodifica y devuelve el valor encontrado en el indicador JSON solicitado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>json</parameter></term>
    <listitem>
     <para>
      El <parameter>json</parameter> <type>string</type> a interrogar y decodificar.
     </para>
      <para>
       Esta función solo funciona con cadenas codificadas en UTF-8.
      </para>
      <para>
       Esta función analiza las entradas válidas que
       <function>json_decode</function> puede decodificar,
       siempre que sean inferiores a 4 Go de longitud.
      </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
      El <type>string</type> del puntero JSON.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>associative</parameter></term>
    <listitem>
     <para>
      Cuando &true; los objetos JSON serán devueltos en forma
      de &array; asociativos; cuando son &false;, los objetos JSON serán devueltos en forma de &object;s.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>depth</parameter></term>
    <listitem>
     <para>
      La profundidad máxima de la estructura a decodificar.
      El valor debe ser superior a <literal>0</literal>,
      e inferior o igual a <literal>2147483647</literal>.

      Quienes llamen a esta función deberían utilizar valores razonablemente pequeños,
      ya que profundidades mayores requieren más espacio de búfer y aumentarán
      la profundidad de recursión, a diferencia de la implementación actual de <function>json_decode</function>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la parte del valor codificado en <parameter>json</parameter>
   que <parameter>key</parameter> referencia en el tipo PHP apropiado.
   Los valores <literal>true</literal>, <literal>false</literal> y
   <literal>null</literal> son devueltos respectivamente como &true;, &false; y &null;.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si <parameter>json</parameter> es inválido, una <classname>SimdJsonException</classname> es lanzada a partir de PECL simdjson 2.1.0,
   mientras que anteriormente, una <classname>RuntimeException</classname> era lanzada.
  </para>
  <para>
   Si <parameter>depth</parameter> está fuera del rango permitido,
   una <classname>SimdJsonValueError</classname> es lanzada a partir de PECL simdjson 3.0.0,
   mientras que anteriormente, un error de nivel <constant>E_WARNING</constant> era lanzado.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>json_encode</function></member>
    <member><function>simdjson_decode</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
