<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3f3362ebcdd1a27cf9c9c751dd5cbe8a6264d1c3 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.simdjson-key-exists" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>simdjson_key_exists</refname>
  <refpurpose>Verifica si el JSON contiene el valor referenciado por un puntero JSON.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>simdjson_key_exists</methodname>
   <methodparam><type>string</type><parameter>json</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>depth</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cuenta el número de elementos del objeto/array encontrado en el puntero JSON solicitado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>json</parameter></term>
    <listitem>
     <para>
      El <type>string</type> <parameter>json</parameter> a consultar.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
      El <type>string</type> del puntero JSON.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>depth</parameter></term>
    <listitem>
     <para>
      La profundidad máxima de la estructura a decodificar.
      El valor debe ser superior a <literal>0</literal>,
      e inferior o igual a <literal>2147483647</literal>.

      Los que llamen a esta función deberían utilizar valores razonablemente pequeños,
      ya que profundidades mayores requieren más espacio de búfer y aumentarán
      la profundidad de recursión, a diferencia de la implementación actual de <function>json_decode</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>throw_if_uncountable</parameter></term>
    <listitem>
     <para>
      Cuando es verdadero, se lanzará una <classname>SimdJsonException</classname>
      en lugar de devolver 0 cuando el valor apuntado por el JSON no es ni
      un objeto ni un array.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; si el puntero JSON es válido y referencia un valor encontrado en una cadena JSON válida.
   Devuelve &false; si el JSON es válido pero no contiene el puntero JSON.
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
