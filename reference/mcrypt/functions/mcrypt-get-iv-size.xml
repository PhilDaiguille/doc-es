<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.mcrypt-get-iv-size" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mcrypt_get_iv_size</refname>
  <refpurpose>Retorna el tamaño del VI utilizado por un par cifrado/modo</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  &warn.deprecated.function-7-1-0.removed-7-2-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mcrypt_get_iv_size</methodname>
   <methodparam><type>string</type><parameter>cipher</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mcrypt_get_iv_size</function> retorna el tamaño del
   vector de inicialización (VI). Si el algoritmo no utiliza
   un vector de inicialización, se retorna cero.
  </para>
  <para>
   Es más útil utilizar la función <function>mcrypt_enc_get_iv_size</function>,
   ya que utiliza el recurso retornado por <function>mcrypt_module_open</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cipher</parameter></term>
     <listitem>
      &mcrypt.parameter.cipher;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      &mcrypt.parameter.mode;
      <para>
       El VI es ignorado en modo ECB, ya que este modo no lo requiere.
       Debe tener el mismo VI (punto de partida) durante el cifrado
       y el descifrado, de lo contrario, el cifrado fallará.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el tamaño del vector de inicialización (VI), en bytes.
   En caso de error, la función retorna &false;. Si el vector de inicialización
   no es necesario, se retorna 0.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>mcrypt_get_iv_size</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo mcrypt_get_iv_size(MCRYPT_CAST_256, MCRYPT_MODE_CFB) . "\n";

echo mcrypt_get_iv_size('des', 'ecb') . "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mcrypt_get_block_size</function></member>
    <member><function>mcrypt_enc_get_iv_size</function></member>
    <member><function>mcrypt_create_iv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
