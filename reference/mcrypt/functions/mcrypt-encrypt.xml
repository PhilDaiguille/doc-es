<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5fabd07880ab15b0ad2cf7eb055c7c2b36d7120f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mcrypt-encrypt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mcrypt_encrypt</refname>
  <refpurpose>Cifra un texto</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-7-1-0.removed-7-2-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>mcrypt_encrypt</methodname>
   <methodparam><type>string</type><parameter>cipher</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>iv</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mcrypt_encrypt</function> cifra los datos y devuelve
   los datos cifrados.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cipher</parameter></term>
     <listitem>
      &mcrypt.parameter.cipher;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clave con la que se cifrarán los datos. Si el tamaño de la clave
       proporcionada no es compatible con el cipher, la función emitirá un
       warning y devolverá &false;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Los datos que se cifrarán, con el <parameter>cipher</parameter> y el
       <parameter>mode</parameter> indicado.
       Si el tamaño de los datos no es un múltiplo del tamaño de bloque,
       los datos se rellenarán con caracteres '<literal>\0</literal>',
       según sea necesario.
      </para>
      <para>
       El texto cifrado devuelto puede ser más largo que el tamaño de los datos
       pasados como argumento a través de <parameter>data</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      &mcrypt.parameter.mode;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      &mcrypt.parameter.iv.strict;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve los datos cifrados, como &string; &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>mcrypt_encrypt</function></title>
    <programlisting role="php">
<![CDATA[
<?php
    # --- CIFRADO ---

    # la clave debería ser un binario aleatorio, utilice la función scrypt, bcrypt
    # o PBKDF2 para convertir una cadena de caracteres en una clave.
    # La clave se especifica utilizando notación hexadecimal.
    $key = pack('H*', "bcb04b7e103a0cd8b54763051cef08bc55abe029fdebae5e1d417e2ffb2a00a3");

    # Muestra el tamaño de la clave utilizada; claves de 16, 24 o 32 bytes para
    # AES-128, 192 y 256 respectivamente.
    $key_size =  strlen($key);
    echo "Tamaño de la clave: " . $key_size . "\n";

    $plaintext = "Esta cadena de caracteres ha sido cifrada en AES-256 / CBC / ZeroBytePadding.";

    # Crea un IV aleatorio para usar con el cifrado CBC
    $iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);
    $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);

    # Crea un texto cifrado compatible con AES (Rijndael block size = 128)
    # para mantener el texto confidencial.
    # Solo aplicable para entradas codificadas que nunca terminan
    # con el valor 00h (debido a la eliminación predeterminada de ceros finales)
    $ciphertext = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key,
                                 $plaintext, MCRYPT_MODE_CBC, $iv);

    # Se añade el IV al inicio del texto cifrado para hacerlo disponible para el descifrado
    $ciphertext = $iv . $ciphertext;

    # Codifica el texto cifrado resultante para que pueda ser representado por una cadena de caracteres
    $ciphertext_base64 = base64_encode($ciphertext);

    echo  $ciphertext_base64 . "\n";

    # === ADVERTENCIA ===

    # El texto cifrado resultante no contiene integridad ni autenticación
    # y no está protegido contra ataques de tipo "oracle padding".

    # --- DESCIFRADO ---

    $ciphertext_dec = base64_decode($ciphertext_base64);

    # Obtiene el IV, iv_size debe haber sido creado utilizando la función
    # mcrypt_get_iv_size()
    $iv_dec = substr($ciphertext_dec, 0, $iv_size);

    # Obtiene el texto del cipher (todo, excepto $iv_size del inicio)
    $ciphertext_dec = substr($ciphertext_dec, $iv_size);

    # Se deben eliminar los caracteres de valor 00h del final del texto plano
    $plaintext_dec = mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $key,
                                    $ciphertext_dec, MCRYPT_MODE_CBC, $iv_dec);

    echo  $plaintext_dec . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Tamaño de la clave: 32
ENJW8mS2KaJoNB5E5CoSAAu0xARgsR1bdzFWpEn+poYw45q+73az5kYi4j+0haevext1dGrcW8Qi59txfCBV8BBj3bzRP3dFCp3CPQSJ8eU=
Esta cadena de caracteres ha sido cifrada en AES-256 / CBC / ZeroBytePadding.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mcrypt_decrypt</function></member>
    <member><function>mcrypt_module_open</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
