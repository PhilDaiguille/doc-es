<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6b62527df5515172a20d557795ec43765ee24875 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="random-randomizer.getbytesfromstring" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Random\Randomizer::getBytesFromString</refname>
  <refpurpose>Devuelve bytes aleatorios a partir de una cadena</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Random\\Randomizer">
   <modifier>public</modifier> <type>string</type><methodname>Random\Randomizer::getBytesFromString</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Genera una cadena que contiene bytes aleatorios seleccionados uniformemente de la
   <parameter>string</parameter> de entrada con la <parameter>length</parameter> solicitada.
  </para>
  <para>
   La probabilidad de que un byte sea seleccionado es proporcional a su parte
   de la <parameter>string</parameter> de entrada. Si cada byte ocurre
   el mismo número de veces, cada byte tiene la misma probabilidad de ser seleccionado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La &string; de entrada a partir de la cual se seleccionan los bytes devueltos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longitud de la cadena aleatoria &string; que debe ser devuelta en bytes; debe ser <literal>1</literal> o más.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una &string; que contiene el número solicitado de bytes aleatorios tomados de la entrada <parameter>string</parameter>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Si <parameter>string</parameter> está vacía,
     se lanzará una <classname>ValueError</classname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si el valor de <parameter>length</parameter> es inferior a <literal>1</literal>,
     se lanzará una <classname>ValueError</classname>.
    </simpara>
   </listitem>
   &random.engineErrors;
  </itemizedlist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>Random\Randomizer::getBytesFromString</methodname></title>
   <programlisting role="php">
<![CDATA[
<?php
$randomizer = new \Random\Randomizer();

printf(
    "%s.example.com",
    $randomizer->getBytesFromString('abcdefghijklmnopqrstuvwxyz0123456789', 16)
);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
3zsw04eiubcf82jd.example.com
]]>
   </screen>
  </example>

  <example>
   <title>Generar un código aleatorio para la autenticación multi-factor</title>
   <programlisting role="php">
<![CDATA[
<?php
// El motor Secure es el motor por omisión, pero se hace explícito, ya que
// los códigos multi-factor son sensibles a la seguridad.
$randomizer = new \Random\Randomizer(new \Random\Engine\Secure());

echo implode('-', str_split($randomizer->getBytesFromString('0123456789', 20), 5));
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
11551-80418-27047-42075
]]>
   </screen>
  </example>

  <example>
   <title>Seleccionar a partir de una cadena con una distribución no uniforme</title>
   <programlisting role="php">
<![CDATA[
<?php
$randomizer = new \Random\Randomizer();

echo $randomizer->getBytesFromString('aaaaabcdef', 20);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
fddacbeaaeaaacaaaaca
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Random\Randomizer::getBytes</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!--Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
