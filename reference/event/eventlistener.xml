<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="class.eventlistener" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase EventListener</title>
 <titleabbrev>EventListener</titleabbrev>
 <partintro>
<!-- {{{ EventListener intro -->
  <section xml:id="eventlistener.intro">
   &reftitle.intro;
   <para>
    Representa una escucha de conexión.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="eventlistener.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EventListener</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>final</modifier>
      <classname>EventListener</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventlistener.constants.opt-leave-sockets-blocking">EventListener::OPT_LEAVE_SOCKETS_BLOCKING</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventlistener.constants.opt-close-on-free">EventListener::OPT_CLOSE_ON_FREE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventlistener.constants.opt-close-on-exec">EventListener::OPT_CLOSE_ON_EXEC</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventlistener.constants.opt-reuseable">EventListener::OPT_REUSEABLE</varname>
     <initializer>8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="eventlistener.constants.opt-threadsafe">EventListener::OPT_THREADSAFE</varname>
     <initializer>16</initializer>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>readonly</modifier>
     <type>int</type>
     <varname linkend="eventlistener.props.fd">fd</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.eventlistener')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
  <section xml:id="eventlistener.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="eventlistener.props.fd">
     <term>
      <varname>fd</varname>
     </term>
     <listitem>
      <para>
       Descriptor de fichero numérico del socket subyacente
       (Añadido en <literal>event-1.6.0</literal>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- {{{ EventListener constants -->
  <section xml:id="eventlistener.constants">
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="eventlistener.constants.opt-leave-sockets-blocking">
     <term>
      <constant>EventListener::OPT_LEAVE_SOCKETS_BLOCKING</constant>
     </term>
     <listitem>
      <para>
       Por omisión, Libevent pone en modo no bloqueante los descriptores
       de ficheros o sockets subyacentes. Este flag indica a Libevent que los deje en modo bloqueante.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventlistener.constants.opt-close-on-free">
     <term>
      <constant>EventListener::OPT_CLOSE_ON_FREE</constant>
     </term>
     <listitem>
      <para>
       Si esta opción está definida, la escucha de la conexión cierra su
       socket subyacente cuando el objeto <classname>EventListener</classname>
       es liberado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventlistener.constants.opt-close-on-exec">
     <term>
      <constant>EventListener::OPT_CLOSE_ON_EXEC</constant>
     </term>
     <listitem>
      <para>
       Si esta opción está definida, la escucha de la conexión define
       el flag de cierre a la ejecución en el socket de escucha subyacente. Ver la documentación de la plataforma
       para más información sobre <literal>fcntl</literal> y
       <constant>FD_CLOEXEC</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventlistener.constants.opt-reuseable">
     <term>
      <constant>EventListener::OPT_REUSEABLE</constant>
     </term>
     <listitem>
      <para>
       Por omisión en algunas plataformas, una vez que un socket de escucha
       es cerrado, ningún otro socket puede ser ligado al mismo puerto
       hasta que cierto tiempo no haya pasado. El hecho de definir
       esta opción hace que Libevent marque este socket como reutilizable,
       así, una vez cerrado, otro socket puede ser abierto para escuchar
       el mismo puerto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="eventlistener.constants.opt-threadsafe">
     <term>
      <constant>EventListener::OPT_THREADSAFE</constant>
     </term>
     <listitem>
      <para>
       Bloqueo de la asignación para el escuchador; así, es seguro utilizarlo desde múltiples threads.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.event.entities.eventlistener;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
